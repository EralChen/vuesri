import{cN as n,eU as m,cO as d,eV as l,ai as u,L as c,e$ as f,cP as y,aj as _,_ as p,$ as o,a1 as H}from"./chunk-217NDGZJ.js";import{r as w}from"./chunk-_zixNXGv.js";import{a as v}from"./chunk-ZMhqjaS0.js";import{v as x}from"./chunk-7TL-WZ6W.js";import{p as U}from"./chunk-SietsZlX.js";import{G as $}from"./chunk-c1Ev0XBy.js";import"./chunk-oVLQlo07.js";import"./chunk-xIT-Gqub.js";import"./chunk-8z8MVveq.js";import"./chunk-7SQjrrU_.js";import"./chunk-CEMOhUyj.js";import"./chunk-pT1ASav_.js";import"./chunk-XvEXYTQf.js";import"./chunk-NuNdKSuN.js";import"./chunk-v6EOeNTY.js";import"./chunk-pNuNDOSt.js";import"./chunk-8rea0Rad.js";import"./chunk-lSpFK-tU.js";import"./chunk-TG_EmuSW.js";import"./chunk-Ok7v7kKA.js";import"./chunk-pcBJnprf.js";import"./chunk-sywYDqEk.js";import"./chunk-oqizNSEk.js";import"./chunk-l4dfT1B4.js";import"./chunk-8MVXXWCJ.js";import"./chunk-NXhrj3C6.js";import"./chunk-Qt_3gzbL.js";let r=class extends U(n(m(d))){constructor(){super(...arguments),this._highlightGraphics=new l,this._updateHash=""}fetchPopupFeatures(t,e){return this._popupHighlightHelper.fetchPopupFeatures(t,e)}update(t){const e=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==e&&(this._updateHash=e,this.strategy.update(t).catch(i=>{u(i)||c.getLogger(this).error(i)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:e,version:i}=this.layer,a=i>=10.3,g=i>=10;this._bitmapContainer=new f,this.container.addChild(this._bitmapContainer),this._highlightView=new w({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new v(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new $({createFetchPopupFeaturesQueryGeometry:(h,s)=>y(h,s,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(h,s)=>{this._highlightView.graphicUpdateHandler({graphic:h,property:s})},layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new x({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:e,imageRotationSupported:a,imageNormalizationSupported:g,hidpi:!0}),this.addAttachHandles(_(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,e,i,a){return this.layer.fetchImage(t,e,i,{timeExtent:this.timeExtent,floors:this.floors,...a})}fetchImageBitmap(t,e,i,a){return this.layer.fetchImageBitmap(t,e,i,{timeExtent:this.timeExtent,floors:this.floors,...a})}highlight(t){return this._popupHighlightHelper.highlight(t)}};p([o()],r.prototype,"strategy",void 0),p([o()],r.prototype,"updating",void 0),r=p([H("esri.views.2d.layers.MapImageLayerView2D")],r);const Y=r;export{Y as default};
