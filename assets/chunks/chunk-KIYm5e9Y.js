import{eX as g,cR as w,ak as h,_ as n,c0 as f,V as d,c2 as u,c1 as V,f3 as m,$ as b,a2 as S}from"./chunk-ERvgPDZ8.js";import{i as _}from"./chunk-WvGpuKX2.js";import{r as T}from"./chunk-vkfhVNxz.js";import"./chunk-cDR98evz.js";import"./chunk-bQARqrIX.js";import"./chunk-0fnvsu_B.js";import"./chunk-mEPIVjwf.js";import"./chunk-adMYJqKH.js";import"./chunk-_lgzk166.js";import"./chunk-8z8MVveq.js";import"./chunk-uHzPQWXb.js";import"./chunk-pT1ASav_.js";import"./chunk-jeDlS6He.js";import"./chunk-hhtHSP0E.js";import"./chunk-xiYT9JDd.js";import"./chunk--MgFlwnb.js";import"./chunk-CuESak4s.js";import"./chunk-v6EOeNTY.js";import"./chunk-puKUc4G4.js";import"./chunk-pcBJnprf.js";import"./chunk-_QHRqePp.js";import"./chunk-U_Sf04T9.js";import"./chunk-7SKfZzmU.js";let c=class extends g(w){constructor(){super(...arguments),this._graphicsViewMap={},this._popupTemplates=new Map,this.graphicsViews=[]}async hitTest(e,r){if(!this.graphicsViews.length)return null;const s=this.layer;return this.graphicsViews.reverse().flatMap(t=>{const i=this._popupTemplates.get(t),p=t.hitTest(e);for(const o of p)o.layer=s,o.sourceLayer=s,o.popupTemplate=i;return p}).map(t=>({type:"graphic",graphic:t,layer:s,mapPoint:e}))}update(e){if(this.graphicsViews)for(const r of this.graphicsViews)r.processUpdate(e)}attach(){this.addAttachHandles([h(()=>this.layer?.featureCollections,e=>{this._clear();for(const{popupInfo:r,featureSet:s,layerDefinition:t}of e){const i=f.fromJSON(s),p=new d(i.features),o=t.drawingInfo,y=r?u.fromJSON(r):null,a=V(o.renderer),l=new T({requestUpdateCallback:()=>this.requestUpdate(),view:this.view,graphics:p,renderer:a,container:new _(this.view.featuresTilingScheme)});this._graphicsViewMap[i.geometryType]=l,this._popupTemplates.set(l,y),i.geometryType!=="polygon"||this.layer.polygonSymbol?i.geometryType!=="polyline"||this.layer.lineSymbol?i.geometryType!=="point"||this.layer.pointSymbol||(this.layer.pointSymbol=a.symbol):this.layer.lineSymbol=a.symbol:this.layer.polygonSymbol=a.symbol,this.graphicsViews.push(l),this.container.addChild(l.container)}},n),h(()=>this.layer?.polygonSymbol,e=>{this._graphicsViewMap.polygon.renderer=new m({symbol:e})},n),h(()=>this.layer?.lineSymbol,e=>{this._graphicsViewMap.polyline.renderer=new m({symbol:e})},n),h(()=>this.layer?.pointSymbol,e=>{this._graphicsViewMap.point.renderer=new m({symbol:e})},n)])}detach(){this._clear()}moveStart(){}moveEnd(){}viewChange(){for(const e of this.graphicsViews)e.viewChange()}_clear(){this.container.removeAllChildren();for(const e of this.graphicsViews)e.destroy();this._graphicsViewMap={},this._popupTemplates.clear(),this.graphicsViews.length=0}};c=b([S("esri.views.2d.layers.GeoRSSLayerView2D")],c);const B=c;export{B as default};
