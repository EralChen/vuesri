import{es as w,gb as F,ge as M}from"./chunk-217NDGZJ.js";import{b as O,n as d}from"./chunk-xIT-Gqub.js";import{CIMSymbolRasterizer as j}from"./chunk-vfMNlGAN.js";import{t as b,l as G}from"./chunk-h7GoAFEU.js";import"./chunk-oVLQlo07.js";import"./chunk-8z8MVveq.js";import"./chunk-7SQjrrU_.js";import"./chunk-CEMOhUyj.js";import"./chunk-pT1ASav_.js";import"./chunk-nqaD1fh0.js";import"./chunk-Ym1_Gwdu.js";import"./chunk-l7Jh2xoW.js";const p=new j(null,!0),u=w(b.size),v=w(b.maxSize),S=w(b.lineWidth),R=1;async function V(n,t,r){const i=t?.size;let e=i!=null&&typeof i=="object"&&"width"in i?i.width:i,a=i!=null&&typeof i=="object"&&"height"in i?i.height:i;if(e==null||a==null)if(r==="esriGeometryPolygon")e=u,a=u;else{const l=await $(n,t,r);l&&(e=l.width,a=l.height),r==="esriGeometryPolyline"&&(e=S),e=e!=null&&isFinite(e)?Math.min(e,v):u,a=a!=null&&isFinite(a)?Math.max(Math.min(a,v),R):u}return t.style==="legend"&&r==="esriGeometryPolyline"&&(e=S),{width:e,height:a}}async function $(n,t,r){const{feature:i,fieldMap:e,viewParams:a}=t.cimOptions||t,l=await O.resolveSymbolOverrides(n.data,i,null,e,r,null,a);if(!l)return null;(n=n.clone()).data={type:"CIMSymbolReference",symbol:l},n.data.primitiveOverrides=void 0;const o=[];return d.fetchResources(l,p.resourceManager,o),d.fetchFonts(l,p.resourceManager,o),o.length>0&&await Promise.all(o),d.getEnvelope(l,null,p.resourceManager)}async function N(n,t={}){const{node:r,opacity:i,symbolConfig:e}=t,a=e!=null&&typeof e=="object"&&"isSquareFill"in e&&e.isSquareFill,l=t.cimOptions||t,o=l.geometryType||F(n?.data?.symbol),f=await V(n,t,o),{feature:C,fieldMap:P}=l,I=a||o!=="esriGeometryPolygon"?"preview":"legend",h=await p.rasterizeCIMSymbolAsync(n,C,f,I,P,o,null,l.viewParams,l.allowScalingUp);if(!h)return null;const{width:L,height:x}=h,m=document.createElement("canvas");m.width=L,m.height=x,m.getContext("2d").putImageData(h,0,0);const y=M(f.width),g=M(f.height),s=new Image(y,g);s.src=m.toDataURL(),s.ariaLabel=t.ariaLabel??null,s.alt=t.ariaLabel??"",i!=null&&(s.style.opacity=`${i}`);let c=s;if(t.effectView!=null){const z={shape:{type:"image",x:0,y:0,width:y,height:g,src:s.src},fill:null,stroke:null,offset:[0,0]};c=G([[z]],[y,g],{effectView:t.effectView,ariaLabel:t.ariaLabel})}return r&&c&&r.appendChild(c),c}export{N as previewCIMSymbol};
