import{p as f,u as g,a as u}from"./chunk-qwIWYVt5.js";import{rO as j,lU as I,cd as w,aj as y,ce as G,ra as R,a0 as b,bB as S,an as v,ct as C,gp as M,gk as m,l2 as $,gz as z}from"./chunk-AGUgPSYp.js";import{u as L}from"./chunk-JOajwqOH.js";const U={...f,color:{type:Array,default:()=>[0,0,0,.7]},geometry:{type:Object,default:void 0},distance:{type:Number,default:24},tileInfo:{type:Object,default:void 0},spatialReference:{type:Object,default:void 0}},_={load:e=>e},k=j.createSubclass({constructor(){this.tileContexts=new window.Map,this.watchHandles=new I,this.needsImageUpdate=!1},attach(){const e=w(),t=this,i=t.layer;this.watchHandles.add([y(()=>this.layer.tileInfo,()=>{t.needsImageUpdate=!0,t.requestRender()},{initial:!0}),y(()=>this.layer.geometry,()=>{if(!i.geometry){t.projectedGeometry=null,t.needsImageUpdate=!0,t.requestRender();return}e.then(()=>{t.projectedGeometry=G(i.geometry,i.tileInfo.spatialReference,R(i.geometry.spatialReference,i.tileInfo.spatialReference)),t.needsImageUpdate=!0,t.requestRender()})},{initial:!0}),y(()=>this.layer.distance,()=>{t.needsImageUpdate=!0,t.requestRender()},{initial:!0}),y(()=>this.layer.color,()=>{t.needsImageUpdate=!0,t.requestRender()},{initial:!0})])},drawGeometry(e,t){e.globalCompositeOperation="source-over";const i=e.canvas.width,a=e.canvas.height;if(!this.projectedGeometry){e.clearRect(0,0,i,a);return}if(this.layer.distance===0)return;const l=this.layer.color;e.fillStyle="rgba("+l[0]+", "+l[1]+", "+l[2]+", 1)",e.fillRect(0,0,i,a);const r=3/this.layer.distance;if(e.globalCompositeOperation="destination-out",this.projectedGeometry.type==="polygon"||this.projectedGeometry.type==="polyline"||this.projectedGeometry.type==="extent"){const c=(this.projectedGeometry.type==="extent"?b.fromExtent(this.projectedGeometry).rings:this.projectedGeometry.rings||this.projectedGeometry.paths).map(o=>o.map(s=>[Math.round(i*(s[0]-t[0])/(t[2]-t[0])),Math.round(a*(1-(s[1]-t[1])/(t[3]-t[1])))]));e.lineJoin="round";for(let o=1;o<=this.layer.distance;++o){e.strokeStyle="rgba(0, 0, 0, "+r+")",e.lineWidth=this.layer.distance+1-o;for(let s=0;s<c.length;++s){const n=c[s];e.beginPath(),e.moveTo(n[0][0],n[0][1]);for(let d=1;d<n.length;++d)e.lineTo(n[d][0],n[d][1]);this.projectedGeometry.type!=="polyline"&&e.closePath(),e.stroke()}}if(this.projectedGeometry.type!=="polyline"){e.fillStyle="rgba(0, 0, 0, 1)";for(let o=0;o<c.length;++o){const s=c[o];e.beginPath(),e.moveTo(s[0][0],s[0][1]);for(let n=1;n<s.length;++n)e.lineTo(s[n][0],s[n][1]);e.closePath(),e.fill()}}}else if(this.projectedGeometry.type==="point"||this.projectedGeometry.type==="multipoint"){const c=(this.projectedGeometry.type==="multipoint"?this.projectedGeometry.points:[[this.projectedGeometry.x,this.projectedGeometry.y]]).map(o=>[Math.round(i*(o[0]-t[0])/(t[2]-t[0])),Math.round(a*(1-(o[1]-t[1])/(t[3]-t[1])))]);for(let o=1;o<=this.layer.distance;++o){const s=this.layer.distance+1-o;e.fillStyle="rgba(0, 0, 0, "+r+")";for(let n=0;n<c.length;++n){const d=c[n];e.beginPath(),e.arc(d[0],d[1],Math.round(s/2),0,360),e.fill()}}}},manageTileImages(){const e=new Set;for(let t=0;t<this.tiles.length;++t){const i=this.tiles[t];e.add(i.id);let a=this.tileContexts.get(i.id);if(a)this.needsImageUpdate&&this.drawGeometry(a,i.bounds);else{const l=document.createElement("canvas");l.width=this.layer.tileInfo.size[0],l.height=this.layer.tileInfo.size[1],a=l.getContext("2d"),this.tileContexts.set(i.id,a),this.drawGeometry(a,i.bounds)}}this.tileContexts.forEach((t,i)=>{e.has(i)||this.tileContexts.delete(i)}),this.needsImageUpdate=!1},render(e){this.manageTileImages();const t=this.layer.tileInfo.size[0],i=e.state,a=i.pixelRatio,l=i.size[0],r=i.size[1],h=e.context,c=[0,0];h.clearRect(0,0,l*a,r*a),i.rotation!==0&&(h.translate(l*a*.5,r*a*.5),h.rotate(i.rotation*Math.PI/180),h.translate(-l*a*.5,-r*a*.5)),h.globalAlpha=this.layer.color[3];for(let o=0;o<this.tiles.length;++o){const s=this.tiles[o],n=this.tileContexts.get(s.id),d=s.resolution/i.resolution*a;i.toScreenNoRotation(c,s.coords),h.drawImage(n.canvas,c[0],c[1],t*d,t*d)}},detach(){this.watchHandles.removeAll()},tilesChanged(){}}),O=S(v).createSubclass({properties:{color:{},geometry:{},distance:{},tileInfo:C.create({size:512})},constructor(){},createLayerView(e){if(e.type==="2d")return new k({view:e,layer:this})}}),T=M({name:"VaMaskingLayer",emits:_,props:U,setup(e,{emit:t}){const i=L(),a=i.map,l=i.map.basemap.baseLayers.getItemAt(0),r=new O({color:e.color,distance:e.distance,geometry:e.geometry});return m(()=>{r.geometry=e.geometry,e.geometry&&!e.geometry.spatialReference&&i.when(()=>{r.geometry.spatialReference=e.spatialReference||i.spatialReference})}),m(()=>{r.color=e.color}),m(()=>{r.distance=e.distance}),m(()=>{i.when(()=>{r.tileInfo=e.tileInfo?e.tileInfo:l.tileInfo})}),g(r,e),u(a,r,e),t("load",{view:i,layer:r}),{}}});function V(e,t,i,a,l,r){return z(e.$slots,"default")}const p=$(T,[["render",V]]);p.install=e=>{e.component(p.name,p)};export{p as V};
