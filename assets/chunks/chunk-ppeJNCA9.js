import{lT as O,lU as p,lV as V,lW as v,lX as $,lY as M,lZ as D,l_ as I,iM as w,l$ as z,m0 as C,m1 as E,m2 as L,m3 as N,m4 as x,m5 as b,m6 as T,m7 as F,ae as P,m8 as k}from"./chunk-gZYsZ36N.js";import{i as U,r as W}from"./chunk-ojUUCvqn.js";import{h}from"./chunk-f_w1oLax.js";import{r as H}from"./chunk-O81L3uYa.js";let q=0;function c(_,e,t){return new U(H(q++),_,_.meshWriter.name,e,t)}const d={geometry:{visualVariableColor:null,visualVariableOpacity:null,visualVariableSizeMinMaxValue:null,visualVariableSizeScaleStops:null,visualVariableSizeStops:null,visualVariableSizeUnitValue:null,visualVariableRotation:null}};class Y{constructor(){this.instances={fill:c(h.fill,d,{zoomRange:!0}),marker:c(h.marker,d,{zoomRange:!0}),line:c(h.line,d,{zoomRange:!0}),text:c(h.text,d,{zoomRange:!0,referenceSymbol:!1,clipAngle:!1}),complexFill:c(h.complexFill,d,{zoomRange:!0}),texturedLine:c(h.texturedLine,d,{zoomRange:!0})},this._instancesById=Object.values(this.instances).reduce((e,t)=>(e.set(t.instanceId,t),e),new Map)}getInstance(e){return this._instancesById.get(e)}}const j=Math.PI/180,G=4;class X extends O{constructor(e){super(),this._program=null,this._vao=null,this._vertexBuffer=null,this._indexBuffer=null,this._dvsMat3=p(),this._localOrigin={x:0,y:0},this._getBounds=e}destroy(){this._vao&&(this._vao.dispose(),this._vao=null,this._vertexBuffer=null,this._indexBuffer=null),this._program=V(this._program)}doRender(e){const{context:t}=e,s=this._getBounds();if(s.length<1)return;this._createShaderProgram(t),this._updateMatricesAndLocalOrigin(e),this._updateBufferData(t,s),t.setBlendingEnabled(!0),t.setDepthTestEnabled(!1),t.setStencilWriteMask(0),t.setStencilTestEnabled(!1),t.setBlendFunction(v.ONE,v.ONE_MINUS_SRC_ALPHA),t.setColorMask(!0,!0,!0,!0);const a=this._program;t.bindVAO(this._vao),t.useProgram(a),a.setUniformMatrix3fv("u_dvsMat3",this._dvsMat3),t.gl.lineWidth(1),t.drawElements($.LINES,8*s.length,M.UNSIGNED_INT,0),t.bindVAO()}_createTransforms(){return{displayViewScreenMat3:p()}}_createShaderProgram(e){if(this._program)return;const t=`precision highp float;
        uniform mat3 u_dvsMat3;

        attribute vec2 a_position;

        void main() {
          mediump vec3 pos = u_dvsMat3 * vec3(a_position, 1.0);
          gl_Position = vec4(pos.xy, 0.0, 1.0);
        }`,s=`precision mediump float;
      void main() {
        gl_FragColor = vec4(0.75, 0.0, 0.0, 0.75);
      }`;this._program=e.programCache.acquire(t,s,y().attributes)}_updateMatricesAndLocalOrigin(e){const{state:t}=e,{displayMat3:s,size:a,resolution:f,pixelRatio:r,rotation:o,viewpoint:i}=t,l=j*o,{x:n,y:R}=i.targetGeometry,B=D(n,t.spatialReference);this._localOrigin.x=B,this._localOrigin.y=R;const g=r*a[0],m=r*a[1],S=f*g,A=f*m,u=I(this._dvsMat3);w(u,u,s),z(u,u,C(g/2,m/2)),E(u,u,L(a[0]/S,-m/A,1)),N(u,u,-l)}_updateBufferData(e,t){const{x:s,y:a}=this._localOrigin,f=2*G*t.length,r=new Float32Array(f),o=new Uint32Array(8*t.length);let i=0,l=0;for(const n of t)n&&(r[2*i]=n[0]-s,r[2*i+1]=n[1]-a,r[2*i+2]=n[0]-s,r[2*i+3]=n[3]-a,r[2*i+4]=n[2]-s,r[2*i+5]=n[3]-a,r[2*i+6]=n[2]-s,r[2*i+7]=n[1]-a,o[l]=i+0,o[l+1]=i+3,o[l+2]=i+3,o[l+3]=i+2,o[l+4]=i+2,o[l+5]=i+1,o[l+6]=i+1,o[l+7]=i+0,i+=4,l+=8);if(this._vertexBuffer?this._vertexBuffer.setData(r.buffer):this._vertexBuffer=x.createVertex(e,b.DYNAMIC_DRAW,r.buffer),this._indexBuffer?this._indexBuffer.setData(o):this._indexBuffer=x.createIndex(e,b.DYNAMIC_DRAW,o),!this._vao){const n=y();this._vao=new T(e,n.attributes,n.bufferLayouts,{geometry:this._vertexBuffer},this._indexBuffer)}}}const y=()=>F("bounds",{geometry:[{location:0,name:"a_position",count:2,type:M.FLOAT}]});class ee extends W{constructor(e){super(e),this._instanceStore=new Y,this.checkHighlight=()=>!0}destroy(){super.destroy(),this._boundsRenderer=P(this._boundsRenderer)}get instanceStore(){return this._instanceStore}enableRenderingBounds(e){this._boundsRenderer=new X(e),this.requestRender()}get hasHighlight(){return this.checkHighlight()}onTileData(e,t){e.onMessage(t),this.contains(e)||this.addChild(e),this.requestRender()}_renderChildren(e,t){e.selection=t;for(const s of this.children){if(!s.visible)continue;s.getDisplayList(e.drawPhase,this._instanceStore,k.STRICT_ORDER)?.render(e)}}}export{ee as i};
