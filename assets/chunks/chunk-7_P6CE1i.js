import{dC as C,dD as k,dE as A,dF as I}from"./chunk-AGUgPSYp.js";import{a as x,b as O,d as R}from"./chunk-zH8x0uzX.js";function F(s,o,f,c){const{rendererJSON:d,isRGBRenderer:p}=s;let t=null,n=null;if(o&&p)t=o;else if(o&&d?.type==="pointCloudUniqueValueRenderer"){n=x.fromJSON(d);const e=n.colorUniqueValueInfos;t=new Uint8Array(3*c);const a=m(n.fieldTransformType);for(let r=0;r<c;r++){const i=(a?a(o[r]):o[r])+"";for(let l=0;l<e.length;l++)if(e[l].values.includes(i)){t[3*r]=e[l].color.r,t[3*r+1]=e[l].color.g,t[3*r+2]=e[l].color.b;break}}}else if(o&&d?.type==="pointCloudStretchRenderer"){n=O.fromJSON(d);const e=n.stops;t=new Uint8Array(3*c);const a=m(n.fieldTransformType);for(let r=0;r<c;r++){const i=a?a(o[r]):o[r],l=e.length-1;if(i<e[0].value)t[3*r]=e[0].color.r,t[3*r+1]=e[0].color.g,t[3*r+2]=e[0].color.b;else if(i>=e[l].value)t[3*r]=e[l].color.r,t[3*r+1]=e[l].color.g,t[3*r+2]=e[l].color.b;else for(let u=1;u<e.length;u++)if(i<e[u].value){const b=(i-e[u-1].value)/(e[u].value-e[u-1].value);t[3*r]=e[u].color.r*b+e[u-1].color.r*(1-b),t[3*r+1]=e[u].color.g*b+e[u-1].color.g*(1-b),t[3*r+2]=e[u].color.b*b+e[u-1].color.b*(1-b);break}}}else if(o&&d?.type==="pointCloudClassBreaksRenderer"){n=R.fromJSON(d);const e=n.colorClassBreakInfos;t=new Uint8Array(3*c);const a=m(n.fieldTransformType);for(let r=0;r<c;r++){const i=a?a(o[r]):o[r];for(let l=0;l<e.length;l++)if(i>=e[l].minValue&&i<=e[l].maxValue){t[3*r]=e[l].color.r,t[3*r+1]=e[l].color.g,t[3*r+2]=e[l].color.b;break}}}else t=new Uint8Array(3*c).fill(255);if(f&&n?.colorModulation){const e=n.colorModulation.minValue,a=n.colorModulation.maxValue,r=.3;for(let i=0;i<c;i++){const l=f[i],u=l>=a?1:l<=e?r:r+(1-r)*(l-e)/(a-e);t[3*i]=u*t[3*i],t[3*i+1]=u*t[3*i+1],t[3*i+2]=u*t[3*i+2]}}return t}function M(s,o){if(s.encoding==null||s.encoding===""){const f=C(o,s);if(f.vertexAttributes.position==null)return;const c=k(o,f.vertexAttributes.position),d=f.header.fields,p=[d.offsetX,d.offsetY,d.offsetZ],t=[d.scaleX,d.scaleY,d.scaleZ],n=c.length/3,e=new Float64Array(3*n);for(let a=0;a<n;a++)e[3*a]=c[3*a]*t[0]+p[0],e[3*a+1]=c[3*a+1]*t[1]+p[1],e[3*a+2]=c[3*a+2]*t[2]+p[2];return e}if(s.encoding==="lepcc-xyz")return A(o).result}function T(s,o,f){return s?.attributeInfo.useElevation?o?S(o,f):null:s?.attributeInfo.storageInfo?I(s.attributeInfo.storageInfo,s.buffer,f):null}function S(s,o){const f=new Float64Array(o);for(let c=0;c<o;c++)f[c]=s[3*c+2];return f}function U(s,o,f,c,d){const p=s.length/3;let t=0;for(let n=0;n<p;n++){let e=!0;for(let a=0;a<c.length&&e;a++){const{filterJSON:r}=c[a],i=d[a].values[n];switch(r.type){case"pointCloudValueFilter":{const l=r.mode==="exclude";r.values.includes(i)===l&&(e=!1);break}case"pointCloudBitfieldFilter":{const l=v(r.requiredSetBits),u=v(r.requiredClearBits);(i&l)===l&&!(i&u)||(e=!1);break}case"pointCloudReturnFilter":{const l=15&i,u=i>>>4&15,b=u>1,w=l===1,y=l===u;let h=!1;for(const g of r.includedReturns)if(g==="last"&&y||g==="firstOfMany"&&w&&b||g==="lastOfMany"&&y&&b||g==="single"&&!b){h=!0;break}h||(e=!1);break}}}e&&(f[t]=n,s[3*t]=s[3*n],s[3*t+1]=s[3*n+1],s[3*t+2]=s[3*n+2],o[3*t]=o[3*n],o[3*t+1]=o[3*n+1],o[3*t+2]=o[3*n+2],t++)}return t}function m(s){switch(s){default:case null:case"none":return o=>o;case"low-four-bit":return o=>15&o;case"high-four-bit":return o=>(240&o)>>4;case"absolute-value":return o=>Math.abs(o);case"modulo-ten":return o=>o%10}}function v(s){let o=0;for(const f of s||[])o|=1<<f;return o}export{S as a,T as c,U as f,F as i,M as u};
