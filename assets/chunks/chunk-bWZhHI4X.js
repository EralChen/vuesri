import{$ as r,a0 as s,a2 as p,eL as M,a3 as O,ae as y,gQ as k,ak as _,D as $,ah as R,s as T,ar as C,dk as G}from"./chunk-gZYsZ36N.js";import{o as P}from"./chunk-zvkbEooV.js";import{createConnection as j}from"./chunk-Yc_cFZWP.js";import{h as x}from"./chunk-KNw_NBq8.js";import{b as E}from"./chunk-TLPuLzZG.js";import{n as U}from"./chunk-YjI2u2JI.js";import{r as V}from"./chunk-CDDzq4MD.js";import"./chunk-t4TbIqUg.js";import"./chunk-1_thnT0U.js";import"./chunk-nw0OSrCn.js";import"./chunk-SS5GKVPY.js";import"./chunk-wA89qAL5.js";import"./chunk-bRc8EHAX.js";import"./chunk-KxVqEBy0.js";import"./chunk-47D7e9N5.js";import"./chunk-vrBP8R9e.js";import"./chunk-QXKEW__2.js";import"./chunk-eiZ4NSSy.js";import"./chunk-_x3yiVOL.js";import"./chunk-L0QvornZ.js";import"./chunk-v6EOeNTY.js";import"./chunk-sSlbmcc2.js";import"./chunk-HQ8BjOft.js";import"./chunk-rTJVl5ZJ.js";import"./chunk-wvUk2jv8.js";const L=2500;let l=class extends ${getObjectId(){return this.objectId}};r([s({type:Number,json:{read:!0}})],l.prototype,"objectId",void 0),l=r([p("esri.layers.graphics.controllers.StreamGraphic")],l);class F{constructor(t){this.onUpdate=t,this._idToGraphic=new Map}destroy(){this._idToGraphic.clear()}add(t){this._idToGraphic.set(t.objectId,t)}get(t){return this._idToGraphic.get(t)}forEach(t){this._idToGraphic.forEach(t)}removeById(t){const o=this._idToGraphic.get(t);return o?(o.sourceLayer=o.layer=null,this._idToGraphic.delete(t),o):null}update(t,o){this.onUpdate(t,o)}get size(){return this._idToGraphic.size}}let n=class extends M(O){constructor(){super(...arguments),this.isPaused=!1,this.graphics=new x,this._updateInfo={websocket:0,client:0},this._updateIntervalId=null,this._outSpatialReference=null}initialize(){this.addResolvingPromise(this.layer.when(()=>this._startup()))}destroy(){this.clear()}_clearInterval(){this._updateIntervalId!==null&&(clearInterval(this._updateIntervalId),this._updateIntervalId=null)}clear(){this._shutdown(),this.graphics.clear()}get updating(){return!this.connection||this.connection.connectionStatus==="connected"}_shutdown(){this._clearInterval(),this.connection=y(this.connection),this.store=y(this.store),this.removeAllHandles()}_startup(){const{layer:e,layerView:t}=this,{spatialReference:o,definitionExpression:c,geometryDefinition:d,objectIdField:h,timeInfo:g,purgeOptions:f,maxReconnectionAttempts:v,maxReconnectionInterval:I,customParameters:w}=e,S=e.geometryType?k.toJSON(e.geometryType):null,b=o,u=t.view.spatialReference;this.clear(),this._set("connection",j(e.parsedUrl,b,u,S,c,d,v,I,w??void 0)),this._outSpatialReference=u.toJSON(),this.store=new F(this._onUpdate.bind(this)),this.featuresManager=new P(this.store,h,g.toJSON(),f);const m="startup-watches";this.removeHandles(m),this.addHandles([e.on("send-message-to-socket",a=>this.connection.sendMessageToSocket(a)),e.on("send-message-to-client",a=>this.connection.sendMessageToClient(a)),this.connection.on("data-received",a=>this._onFeature(a)),this.connection.on("message-received",a=>this._onWebSocketMessage(a)),_(()=>[e.definitionExpression,e.geometryDefinition,e.purgeOptions],()=>this._startup())],m),this.isPaused||this._initUpdateInterval()}_onWebSocketMessage(e){if(this.layerView.emit("message-received",e),"type"in e)switch(e.type){case"delete":if(e.objectIds)for(const t of e.objectIds)this.featuresManager.removeById(t);if(e.trackIds)for(const t of e.trackIds)this.featuresManager.removeByTrackId(t);break;case"clear":this.store.forEach(t=>this.featuresManager.removeById(t.objectId))}}_onFeature(e){this._updateInfo.websocket++,this.layerView.hasEventListener("data-received")&&this.layerView.emit("data-received",{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry});try{e.geometry==null||e.geometry.spatialReference||(e.geometry.spatialReference=this._outSpatialReference);const t=l.fromJSON(e);t.sourceLayer=t.layer=this.layer,this.featuresManager.add(t)}catch{}}_onUpdate(e,t){t!=null&&this.graphics.removeMany(t),e!=null&&(this._updateInfo.client+=e.length,this.graphics.addMany(e))}_initUpdateInterval(){this._clearInterval();const{updateInterval:e}=this.layer;let t=performance.now();this._updateIntervalId=setInterval(()=>{const o=performance.now(),c=o-t;if(c>L){t=o;const d=Math.round(this._updateInfo.client/(c/1e3)),h=Math.round(this._updateInfo.websocket/(c/1e3));this._updateInfo.client=0,this._updateInfo.websocket=0,this.layerView.emit("update-rate",{client:d,websocket:h})}this.featuresManager.checkForUpdates()},e)}pauseStream(){this.isPaused=!0,this._clearInterval()}resumeStream(){this.isPaused=!1,this._initUpdateInterval()}disconnect(){this._shutdown()}connect(){this.connection==null&&this._startup()}clearGraphics(){this.graphics.clear()}};r([s()],n.prototype,"isPaused",void 0),r([s({constructOnly:!0})],n.prototype,"layer",void 0),r([s({constructOnly:!0})],n.prototype,"layerView",void 0),r([s()],n.prototype,"connection",void 0),r([s({readOnly:!0})],n.prototype,"updating",null),n=r([p("esri.layers.graphics.controllers.StreamController")],n);let i=class extends V(E(U(G))){constructor(){super(...arguments),this.type="stream-3d",this.updatePolicy=R.ASYNC,this.hasZ=!0,this.hasM=!1}initialize(){this.addHandles(_(()=>this.suspended,e=>{this.controller&&this._onSuspendedChange(e)}))}get connectionError(){const e=this.controller?.connection?.errorString;return e?new T("stream-controller",e):null}createQuery(){return new C({outFields:["*"],returnGeometry:!0,outSpatialReference:this.view.spatialReference})}queryLatestObservations(e,t){return this.queryEngine.executeQueryForLatestObservations(this._ensureQuery(e),t?.signal)}get _streamConnectionStatus(){return this.controller?.connection?.connectionStatus??"disconnected"}createController(){return new n({layer:this.layer,layerView:this})}beforeSetController(){}_doPause(){this.controller?.pauseStream()}_doResume(){this.controller?.resumeStream()}_doDisconnect(){this.controller?.disconnect(),this._doPause()}_doConnect(){this.controller?.connect(),this.resume()}_doClear(){this.controller?.clearGraphics()}};r([s({readOnly:!0})],i.prototype,"updatePolicy",void 0),r([s({readOnly:!0})],i.prototype,"connectionError",null),r([s()],i.prototype,"controller",void 0),r([s({readOnly:!0})],i.prototype,"hasZ",void 0),r([s({readOnly:!0})],i.prototype,"hasM",void 0),r([s({readOnly:!0})],i.prototype,"_streamConnectionStatus",null),i=r([p("esri.views.3d.layers.StreamLayerView3D")],i);const pe=i;export{pe as default};
