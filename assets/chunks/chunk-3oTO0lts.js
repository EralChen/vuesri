import{V}from"./chunk-loHR4y2p.js";import{V as b}from"./chunk-6o6tFwA-.js";import{h2 as g,ls as h,lt as j,fK as k,lu as r,lv as t,jh as v,h5 as s,h6 as p,h9 as n,ha as y,h7 as e,hn as x}from"./chunk-xdbuWCSg.js";import"./chunk-Rpg3QTvn.js";import"./chunk-1yHvQV-p.js";import"./chunk-eGNVTRpg.js";import"./chunk-wJeQeX2q.js";import"./chunk-050oiI48.js";import"./chunk-lQU-EnPR.js";import"./chunk-rNHK9wJ6.js";import"./chunk-63AI7Hpr.js";import"./chunk-SUrPPh2b.js";import"./chunk-7sBGr7NW.js";import"./chunk-NoRKKJwn.js";import{V as L}from"./chunk-MP3SmEKf.js";import"./chunk-AQSXafU-.js";import"./chunk-ltK1s8nW.js";import"./chunk-Wzez7fEs.js";import"./chunk-0gozDf9n.js";import"./chunk-Di8tOJah.js";import"./chunk-7iy6_9MI.js";import"./chunk-1CE6gnXz.js";import"./chunk-z466LWxV.js";import"./chunk-HEOKg0WM.js";import"./chunk-ZkYYvP3a.js";import"./chunk-zegxIybi.js";import"./chunk-EraEGKU1.js";import"./chunk-61dhINtI.js";import"./chunk-3dUbQ6r4.js";import"./chunk-93_OmANW.js";import"./chunk-NILXTdrs.js";import"./chunk-9gCcGOc7.js";import"./chunk-xDUoadMJ.js";import"./chunk-UzJWYQNQ.js";import"./chunk-K71dfVM6.js";import"./chunk-ogNnWqfN.js";import"./chunk-hfdktSrh.js";import"./chunk-2aAZ5bZv.js";import{V as _,s as z}from"./chunk-pdaYqzVd.js";import"./chunk-QmLkA8vh.js";import"./chunk-gtyL-bMM.js";import"./chunk-B3AFDltd.js";import"./chunk-X13qFF8j.js";import"./chunk-A28ZiPww.js";import"./chunk-E7RiHwKi.js";import"./chunk-3xNmT1XT.js";import"./chunk-elC-BEzW.js";import"./chunk-PXg3VzVx.js";import"./chunk-t4TbIqUg.js";import"./chunk-s4Wj1llY.js";import"./chunk-WbQr-OU9.js";import"./chunk-PYCr5Ivi.js";import"./chunk-PsIbZfTj.js";import"./chunk-TB-F49UB.js";import"./chunk-IoGt2n0v.js";import"./chunk-s1CWS4v1.js";import"./chunk-vUrHI-Qa.js";const Do=g({__name:"many",setup(B){const a="/vuesri",m=h({url:a+"/data/geojson/polygon10w.json"}),u=j(()=>m.url),c=[{templateType:"VkfRadio",prop:"url",options:[{label:"10w",value:a+"/data/geojson/polygon10w.json"},{label:"5w",value:a+"/data/geojson/polygon5w.json"},{label:"1w",value:a+"/data/geojson/polygon1w.json"}]}];new k({symbol:new r({symbolLayers:[new t({size:100,material:{color:"red"}})]})});const d=new v({field:"index",defaultSymbol:new r({symbolLayers:[new t({size:100,material:{color:"red"}})]}),classBreakInfos:[{minValue:0,maxValue:1e3,symbol:new r({symbolLayers:[new t({size:100,material:{color:"red"}})]})},{minValue:1e3,maxValue:5e3,symbol:new r({symbolLayers:[new t({size:5e3,material:{color:"blue"}})]})},{minValue:5e3,maxValue:1e4,symbol:new r({symbolLayers:[new t({size:1e4,material:{color:"green"}})]})}]}),w=({result:o})=>{console.log(o)},f=async o=>{const i=o.view;await o.layer.when(),console.log(o.layer),o.layer.queryFeatures().then(l=>{console.log(l)}),i.goTo(o.layer.fullExtent)};return(o,i)=>(s(),p(e(L),null,{before:n(()=>[y(e(_),{"form-items":c,data:m,onSetData:i[0]||(i[0]=l=>e(z)(m,l))},null,8,["data"])]),default:n(()=>[y(e(b),{type:"vec_w","spatial-reference":{wkid:3857}}),e(u)?(s(),p(e(V),{key:0,cursor:"pointer","geometry-type":"polygon",url:m.url,renderer:e(d),onLoad:f,onClick:w},null,8,["url","renderer"])):x("",!0)]),_:1}))}});export{Do as default};
