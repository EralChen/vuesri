import{h,g,k as i}from"./chunk-J2kWMSLO.js";import{mg as $,dS as q,dT as d,mh as m,b$ as b}from"./chunk-ERvgPDZ8.js";import{l as s}from"./chunk-WlB6dZg0.js";import{geodesicArea as k}from"./chunk-bv7cXW6z.js";import{r as y}from"./chunk-WxjI5FYO.js";function M({hasZ:r,spatialReference:t,rings:e},o,u=0){const a=$(t);if(a==null)return!1;const p=r?n=>n:n=>q(R,n[0],n[1],u);for(const n of e){const c=[];for(const l of n){const f=[0,0,u];a(p(l),0,f,0),c.push(f)}o.push(c)}return!0}const R=d();function G(r){const{spatialReference:t}=r;return y(t,S,w,x,r)}function S(r){return s(Math.abs(m([r],"square-meters")[0]),"square-meters")}function w(r){try{return s(Math.abs(k(r,"square-meters")),"square-meters")}catch{return null}}function x(r){const t=[];return M(r,t)?s(Math.abs(m([{type:"polygon",rings:t,spatialReference:b.WGS84}],"square-meters")[0]),"square-meters"):null}function A(r,t,e=i()){if(t==="on-the-ground"){const o=G(r);return o??h(r,e)}return g(r,e)}function z(r,t=i()){return A(r,"on-the-ground",t)}export{A as o,z as u};
