import{fV as g,s as c,B as y,cm as d,cn as _,dn as F,aj as w,L as S,fW as E,cj as q,cq as x,b3 as T,cs as R,cr as I}from"./chunk-ERvgPDZ8.js";import{m as b}from"./chunk-717EsiqK.js";import{x as j,j as C}from"./chunk-CuESak4s.js";import{W as $}from"./chunk-j5EmxFFe.js";import{p as k}from"./chunk-dcN5g7rO.js";import"./chunk-cDR98evz.js";import"./chunk-HhEsx6zm.js";import"./chunk-SWVxsQfb.js";import"./chunk-3BbGD6i6.js";import"./chunk-MvIi2WYr.js";import"./chunk-v6EOeNTY.js";import"./chunk-EJfuuens.js";import"./chunk-7SKfZzmU.js";class V{constructor(){this._queryEngine=null,this._customParameters=null}destroy(){this._queryEngine?.destroy(),this._queryEngine=null}async load(t,e){const{getFeatureUrl:n,getFeatureOutputFormat:p,fields:o,geometryType:s,featureType:i,objectIdField:u,customParameters:r}=t,{spatialReference:a,getFeatureSpatialReference:h}=g(n,i,t.spatialReference);this._featureType=i,this._customParameters=r,this._getFeatureUrl=n,this._getFeatureOutputFormat=p,this._getFeatureSpatialReference=h;try{await j(h,a)}catch{throw new c("unsupported-projection","Projection not supported",{inSpatialReference:h,outSpatialReference:a})}y(e);const l=d.fromLayerJSON({fields:o,dateFieldsTimeReference:o.some(f=>f.type==="esriFieldTypeDate")?{timeZoneIANA:_}:null}),m=await this._snapshotFeatures({fieldsIndex:l,geometryType:s,objectIdField:u,spatialReference:a},e.signal);return this._queryEngine=new $({fieldsIndex:l,geometryType:s,hasM:!1,hasZ:!1,objectIdField:u,spatialReference:a,timeInfo:null,featureStore:new b({geometryType:s,hasM:!1,hasZ:!1})}),this._queryEngine.featureStore.addMany(m),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async applyEdits(){throw new c("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")}async queryFeatures(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(t,e.signal)}async queryFeatureCount(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(t,e.signal)}async queryObjectIds(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(t,e.signal)}async queryExtent(t={},e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(t,e.signal)}async querySnapping(t,e={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(t,e.signal)}async refresh(t){return this._customParameters=t,this._snapshotTask?.abort(),this._snapshotTask=F(e=>this._snapshotFeatures(this._queryEngine,e)),this._snapshotTask.promise.then(e=>{this._queryEngine.featureStore.clear(),e&&this._queryEngine.featureStore.addMany(e)},e=>{this._queryEngine.featureStore.clear(),w(e)||S.getLogger("esri.layers.WFSLayer").error(new c("wfs-layer:getfeature-error","An error occurred during the GetFeature request",{error:e}))}),await this._waitSnapshotComplete(),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}}async _waitSnapshotComplete(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}}async _snapshotFeatures({objectIdField:t,geometryType:e,spatialReference:n,fieldsIndex:p},o){const s=await E(this._getFeatureUrl??"",this._featureType.typeName,this._getFeatureSpatialReference,this._getFeatureOutputFormat,{customParameters:this._customParameters,signal:o});q(s,this._getFeatureSpatialReference.wkid),y(o);const i=x(s,{geometryType:e,hasZ:!1,objectIdField:t});if(!T(n,this._getFeatureSpatialReference))for(const r of i)r.geometry!=null&&(r.geometry=R(C(I(r.geometry,e,!1,!1),this._getFeatureSpatialReference,n)));let u=1;for(const r of i){const a={};k(p,a,r.attributes,!0),r.attributes=a,a[t]==null&&(r.objectId=a[t]=u++)}return i}}export{V as default};
