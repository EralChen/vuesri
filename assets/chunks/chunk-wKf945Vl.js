import{k5 as j,ak as D,dY as U,k6 as A,k7 as Y,dp as w,k0 as E,k8 as q,dl as G,$ as g,a3 as B,a0 as _,a2 as J}from"./chunk-ERvgPDZ8.js";import{r as K}from"./chunk-9aoAXE74.js";import{U as Q}from"./chunk-ucWCRfrt.js";import{e as V}from"./chunk-k0PlJ90R.js";function lt({predicate:t=()=>!0,snappingManager:n,snappingContext:o,updatingHandles:s,useZ:e=!0}){const i=new Q;if(n==null)return{snappingStep:[O,i],cancelSnapping:O};let l,p=null,a=null,c=null;const d=()=>{p=w(p),n.doneSnapping(),a?.frameTask.remove(),a=null,l=E(l),c=null},m=W(n,e,i);let f=null,u=null,C=null;return{snappingStep:[r=>{if(!t(r))return r;const{action:v}=r;if(v==="start"){const{info:x}=r,y=X(n.view);if(a=tt(o,r,y),a.context.selfSnappingZ=null,!e&&x!=null){const P=et(o.coordinateHelper,x.handle.component);P!=null&&(a.context.selfSnappingZ={value:P,elevationInfo:o.elevationInfo??j})}}if(a!=null){const{context:x,originalScenePos:y,originalPos:P}=a,{mapEnd:b,mapStart:Z,scenePoints:$}=r,k=H(P,T(b,Z)),z=T(Z,P),F={...r,action:"update"},R=a.context,S=nt(y,$),I=n.update({point:k,scenePoint:S,context:x});if(C=I,N(b,I,z,e),f=k,u=S,v!=="end"){const{frameTask:L}=a;p==null&&(p=new AbortController),c=M=>{s.addPromise(q(m({frameTask:L,event:F,context:R,point:k,scenePoint:S,delta:z,getLastState:()=>({point:f,scenePoint:u,updatePoint:M.forceUpdate?null:C})},p.signal)))},c({forceUpdate:!1}),l==null&&(l=D(()=>n.options.effectiveEnabled,()=>c?.({forceUpdate:!0})))}}return v==="end"&&d(),r},i],cancelSnapping:r=>(d(),r)}}function W(t,n,o){return G(async({frameTask:s,point:e,scenePoint:i,context:l,event:p,delta:a,getLastState:c},d)=>{const m=await s.schedule(()=>t.snap({point:e,scenePoint:i,context:l,signal:d}),d);if(m.valid){let f=await s.schedule(()=>m.apply(),d);const u=c();u.point!=null&&e!==u.point&&(f=t.update({point:u.point,scenePoint:u.scenePoint,context:l})),u.updatePoint!=null&&K(f,u.updatePoint)||(N(p.mapEnd,f,a,n),o.execute(p))}})}function X(t){return t.type==="3d"?t.resourceController.scheduler.registerTask(U.SNAPPING):A}function tt(t,n,o){return{context:new V({editGeometryOperations:t.editGeometryOperations,elevationInfo:t.elevationInfo,pointer:t.pointer,vertexHandle:n.info!=null?n.info.handle:null,excludeFeature:t.excludeFeature,feature:t.feature,visualizer:t.visualizer}),originalPos:n.snapOrigin!=null?t.coordinateHelper.vectorToDehydratedPoint(n.snapOrigin):n.mapStart,originalScenePos:n.scenePoints!=null?n.scenePoints.sceneStart:null,frameTask:o}}function H(t,[n,o,s]){const e=Y(t);return e.x+=n,e.y+=o,e.hasZ&&(e.z+=s),e}function nt(t,n){return t==null||n==null?null:H(t,T(n.sceneEnd,n.sceneStart))}function T(t,n){const o=t.hasZ&&n.hasZ?t.z-n.z:0;return[t.x-n.x,t.y-n.y,o]}function N(t,n,[o,s,e],i){t.x=n.x+o,t.y=n.y+s,i&&t.hasZ&&n.hasZ&&(t.z=n.z+e)}function et(t,n){if(!t.hasZ())return null;const o=n.vertices;let s=null;for(const e of o){const i=t.getZ(e.pos);if(s!=null&&i!=null&&Math.abs(i-s)>1e-6)return null;s==null&&(s=i)}return s}function O(t){return t}let h=class extends B{constructor(t){super(t),this.constrainResult=n=>n,this._snapPoints=null,this._frameTask=null,this._abortController=null,this._stagedPoint=null,this._snap=G(async(n,o,s,e)=>{const i=this._frameTask;if(i==null)return;const l=await i.schedule(()=>o.snap({...n,context:s,signal:e}),e);l.valid&&await i.schedule(()=>{this.stagedPoint=l.apply(),n!==this._snapPoints&&this._snapPoints!=null&&(this.stagedPoint=o.update({...this._snapPoints,context:s}))},e)})}get stagedPoint(){return this._stagedPoint}set stagedPoint(t){this._stagedPoint=this.constrainResult(t)}initialize(){const t=this.view.type==="3d"?this.view?.resourceController?.scheduler:null;this._frameTask=t!=null?t.registerTask(U.SNAPPING):A}destroy(){this._abortController=w(this._abortController),this._frameTask=E(this._frameTask)}update(t,n,o){this._snapPoints=t;const{point:s,scenePoint:e}=t,i=n.update({point:s,scenePoint:e,context:o});return this.stagedPoint=i,i}async snap(t,n,o){const{point:s,scenePoint:e}=t;return this.stagedPoint=n.update({point:s,scenePoint:e,context:o}),this._snapPoints=t,this._abortController==null&&(this._abortController=new AbortController),this._snap(t,n,o,this._abortController.signal)}async resnap(t,n){this._snapPoints!=null&&await this.snap(this._snapPoints,t,n)}abort(){this._abortController=w(this._abortController),this._snapPoints=null}};g([_({constructOnly:!0})],h.prototype,"view",void 0),g([_()],h.prototype,"stagedPoint",null),g([_()],h.prototype,"constrainResult",void 0),g([_()],h.prototype,"_stagedPoint",void 0),h=g([J("esri.views.interactive.snapping.SnappingOperation")],h);export{lt as f,h as p};
