import{_ as S}from"./chunk-cDR98evz.js";import{l as b,s as I,Q as h,U as L,W as O,X as P,k as g,Y as d}from"./chunk-ERvgPDZ8.js";import{t as T}from"./chunk-LMuP7JrL.js";import{t as f}from"./chunk-_xZBP6De.js";const U={FeatureLayer:!0,SceneLayer:!0};async function R(r){const s=r.properties?.customParameters,e=await $(r.url,s),t={...r.properties,url:r.url};if(e.layers.length+e.tables.length===0)return e.layerId!=null&&(t.layerId=e.layerId),e.sourceJSON!=null&&(t.sourceJSON=e.sourceJSON),new e.Constructor(t);const n=new(await S(()=>import("./chunk-CkxAagba.js"),__vite__mapDeps([0,1,2,3]))).default({title:e.parsedUrl.title});return await F(n,e,t),n}function v(r,s){return r?r.find(e=>e.id===s):null}async function F(r,s,e){function t(a,o,c,u){const i={...e,layerId:o,sublayerTitleMode:"service-name"};return a!=null&&(i.url=a),c!=null&&(i.sourceJSON=c),u(i)}const n=s.sublayerConstructorProvider;for(const{id:a,serverUrl:o}of s.layers){const c=v(s.sublayerInfos,a),u=(c&&n?.(c))??s.Constructor,i=t(o,a,c,l=>new u(l));r.add(i)}if(s.tables.length){const a=await p("FeatureLayer");s.tables.forEach(({id:o,serverUrl:c})=>{const u=t(c,o,v(s.tableInfos,o),i=>new a(i));r.tables.add(u)})}}async function $(r,s){let e=b(r);if(e==null&&(e=await C(r,s)),e==null)throw new I("arcgis-layers:url-mismatch","The url '${url}' is not a valid arcgis resource",{url:r});const{serverType:t,sublayer:n}=e;let a;const o={FeatureServer:"FeatureLayer",StreamServer:"StreamLayer",VectorTileServer:"VectorTileLayer"},c=t==="FeatureServer",u=t==="SceneServer",i={parsedUrl:e,Constructor:null,layerId:c||u?n??void 0:void 0,layers:[],tables:[]};switch(t){case"MapServer":n!=null?a="FeatureLayer":a=await _(r,s)?"TileLayer":"MapImageLayer";break;case"ImageServer":{const l=await f(r,{customParameters:s}),{tileInfo:y,cacheType:m}=l;a=y?y?.format?.toUpperCase()!=="LERC"||m&&m.toLowerCase()!=="elevation"?"ImageryTileLayer":"ElevationLayer":"ImageryLayer";break}case"SceneServer":{const l=await f(e.url.path,{customParameters:s});if(a="SceneLayer",l){const y=l?.layers;if(l?.layerType==="Voxel")a="VoxelLayer";else if(y?.length){const m=y[0]?.layerType;m!=null&&d[m]!=null&&(a=d[m])}}break}case"FeatureServer":if(a="FeatureLayer",n!=null){const l=await f(r,{customParameters:s});i.sourceJSON=l,l.type==="Oriented Imagery Layer"&&(a="OrientedImageryLayer")}break;default:a=o[t]}if(U[a]&&n==null){const l=await N(r,t,s);if(c&&(i.sublayerInfos=l.layerInfos,i.tableInfos=l.tableInfos),l.layers.length+l.tables.length!==1)i.layers=l.layers,i.tables=l.tables,c&&l.layerInfos?.length&&(i.sublayerConstructorProvider=await k(l.layerInfos));else if(c||u){const y=l.layerInfos?.[0]??l.tableInfos?.[0];i.layerId=l.layers[0]?.id??l.tables[0]?.id,i.sourceJSON=y,c&&y?.type==="Oriented Imagery Layer"&&(a="OrientedImageryLayer")}}return i.Constructor=await p(a),i}async function C(r,s){const e=await f(r,{customParameters:s});let t=null,n=null;const a=e.type;if(a==="Feature Layer"||a==="Table"?(t="FeatureServer",n=e.id??null):a==="indexedVector"?t="VectorTileServer":e.hasOwnProperty("mapName")?t="MapServer":e.hasOwnProperty("bandCount")&&e.hasOwnProperty("pixelSizeX")?t="ImageServer":e.hasOwnProperty("maxRecordCount")&&e.hasOwnProperty("allowGeometryUpdates")?t="FeatureServer":e.hasOwnProperty("streamUrls")?t="StreamServer":w(e)?(t="SceneServer",n=e.id):e.hasOwnProperty("layers")&&w(e.layers?.[0])&&(t="SceneServer"),!t)return null;const o=n!=null?h(r):null;return{title:o!=null&&e.name||L(r),serverType:t,sublayer:n,url:{path:o!=null?o.serviceUrl:O(r).path}}}function w(r){return r!=null&&r.hasOwnProperty("store")&&r.hasOwnProperty("id")&&typeof r.id=="number"}async function N(r,s,e){let t,n,a=!1;switch(s){case"FeatureServer":{const u=await T(r,{customParameters:e});a=!!u.layersJSON,t=u.layersJSON||u.serviceJSON;break}case"SceneServer":{const u=await J(r,e);t=u.serviceInfo,n=u.tableServerUrl;break}default:t=await f(r,{customParameters:e})}const o=t?.layers,c=t?.tables;return{layers:o?.map(u=>({id:u.id})).reverse()||[],tables:c?.map(u=>({serverUrl:n,id:u.id})).reverse()||[],layerInfos:a?o:[],tableInfos:a?c:[]}}async function J(r,s){const e=await f(r,{customParameters:s});if(!e.layers?.[0])return{serviceInfo:e};try{const{serverUrl:n}=await P(r),a=await f(n,{customParameters:s}).catch(()=>null);return a&&(e.tables=a.tables),{serviceInfo:e,tableServerUrl:n}}catch{return{serviceInfo:e}}}async function p(r){return(0,g[r])()}async function _(r,s){return(await f(r,{customParameters:s})).tileInfo}async function k(r){const s=[],e=[];if(r.forEach(a=>{const{type:o}=a;o==="Oriented Imagery Layer"?(s.push(o),e.push(p("OrientedImageryLayer"))):(s.push(o),e.push(p("FeatureLayer")))}),!e.length)return;const t=await Promise.all(e),n=new Map;return s.forEach((a,o)=>{n.set(a,t[o])}),a=>n.get(a.type)}export{R as fromUrl};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = ["assets/chunks/chunk-CkxAagba.js","assets/chunks/chunk-cDR98evz.js","assets/chunks/chunk-ERvgPDZ8.js","assets/static/EdgeShader.Y9-TpfL8.css"]
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
