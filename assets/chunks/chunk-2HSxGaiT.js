import{$ as l,a0 as n,dq as u,dr as g,a2 as d,ds as f,s as o,dn as y,dt as v}from"./chunk-gZYsZ36N.js";const S=p=>{let i=class extends p{get imageFormatIsOpaque(){return!1}get fullExtent(){return this.layer.fullExtent}get isOpaque(){return this.fullOpacity>=1&&this.imageFormatIsOpaque}get dataScaleRange(){const e=this.tileInfo.lods;let t=e[0].scale,a=e[e.length-1].scale;if("tilemapCache"in this.layer&&this.layer.tilemapCache){const{effectiveMinLOD:r,effectiveMaxLOD:s}=this.layer.tilemapCache;t=this.tileInfo.lodAt(r).scale,a=this.tileInfo.lodAt(s).scale}return{minScale:t,maxScale:a}}get dataLevelRange(){const{minScale:e,maxScale:t}=this.dataScaleRange;return this.levelRangeFromScaleRange(e,t)}get displayLevelRange(){const e=this.layer.minScale||this.dataScaleRange.minScale,t=this.layer.maxScale||this.dataScaleRange.maxScale,a=this.levelRangeFromScaleRange(e,t);return this.layer.maxScale&&a.maxLevel++,a}get performanceInfo(){return new f(this.view.basemapTerrain.getUsedMemoryForLayerView(this))}getTileUrl(e,t,a){return this.layer.getTileUrl(e,t,a)}_addTilingSchemeMatchPromise(){if(this.fullExtent==null)return this.addResolvingPromise(Promise.reject(new o("tilingscheme:extent-not-defined","This layer doesn't define a fullExtent.")));const e=this._getTileInfoSupportError(this.tileInfo,this.fullExtent);if(e)return this.addResolvingPromise(Promise.reject(e));const t=y(()=>this.view?.basemapTerrain?.tilingSchemeLocked).then(()=>{const a=this.view.basemapTerrain.tilingScheme,r=this._getTileInfoCompatibilityError(this.tileInfo,a);if(r)throw r});this.addResolvingPromise(t)}_getTileInfoSupportError(e,t){const a=v(e,t,this.view.spatialReference,this.view.state.viewingMode);if(a){const r={layer:this.layer,error:a};let s;switch(a.name){case"tilingscheme:spatial-reference-mismatch":case"tilingscheme:global-unsupported-spatial-reference":case"tilingscheme:local-unsupported-spatial-reference":s=new o("layerview:spatial-reference-incompatible","The spatial reference of this layer does not meet the requirements of the view",r);break;default:s=new o("layerview:tiling-scheme-unsupported","The tiling scheme of this layer is not supported by SceneView",r)}return s}return null}_getTileInfoCompatibilityError(e,t){return e!=null&&t.compatibleWith(e)?null:new o("layerview:tiling-scheme-incompatible","The tiling scheme of this layer is incompatible with the tiling scheme of the surface")}levelRangeFromScaleRange(e,t){const a={minLevel:0,maxLevel:1/0},r=this.view&&this.view.basemapTerrain&&this.view.basemapTerrain.tilingScheme;if(!r)return a;const s=r.levels[0],c=m=>{const h=Math.log(s.scale/m)/Math.LN2;return .5-Math.abs(.5-h%1)<1e-9?Math.round(h):Math.ceil(h)};return e!=null&&e>0&&(a.minLevel=Math.max(0,c(e))),t!=null&&t>0&&(a.maxLevel=Math.max(0,c(t))),a}isUpdating(){return!!(this.view&&this.view.basemapTerrain&&this.view.basemapTerrain.updating)}};return l([n({readOnly:!0})],i.prototype,"imageFormatIsOpaque",null),l([n({readOnly:!0})],i.prototype,"updating",void 0),l([n(u)],i.prototype,"updatingProgress",void 0),l([n(g)],i.prototype,"updatingProgressValue",void 0),l([n()],i.prototype,"fullExtent",null),l([n({readOnly:!0})],i.prototype,"isOpaque",null),l([n()],i.prototype,"dataScaleRange",null),l([n({readOnly:!0})],i.prototype,"dataLevelRange",null),l([n({readOnly:!0})],i.prototype,"displayLevelRange",null),l([n()],i.prototype,"layer",void 0),i=l([d("esri.views.3d.layers.TiledLayerView3D")],i),i};export{S as c};
