import{dj as g,fB as d,dk as m,fC as l,aj as u,z as c,fI as f,dl as y,ak as _,$ as p,a0 as o,a2 as H}from"./chunk-gZYsZ36N.js";import{$ as w}from"./chunk-9wG_pF9U.js";import{h as v}from"./chunk-f4OHVDFZ.js";import{v as $}from"./chunk-wj-IYDOv.js";import{p as x}from"./chunk-MAPkm0r2.js";import{U}from"./chunk-SoJOVghw.js";import"./chunk-t4TbIqUg.js";import"./chunk-jUZKQwH1.js";import"./chunk-O81L3uYa.js";import"./chunk-LCQ8NG3J.js";import"./chunk-gJZ7CV2L.js";import"./chunk-_x3yiVOL.js";import"./chunk-47D7e9N5.js";import"./chunk-L0QvornZ.js";import"./chunk-v6EOeNTY.js";import"./chunk-f_w1oLax.js";import"./chunk-rTJVl5ZJ.js";import"./chunk-X2Pl0lLl.js";import"./chunk-ppeJNCA9.js";import"./chunk-ojUUCvqn.js";import"./chunk-iPxuUnvs.js";let h=class extends x(g(d(m))){constructor(){super(...arguments),this._highlightGraphics=new l,this._updateHash=""}fetchPopupFeaturesAtLocation(t,e){return this._popupHighlightHelper.fetchPopupFeaturesAtLocation(t,e)}update(t){const e=`${this.exportImageVersion}/${t.state.id}/${t.pixelRatio}/${t.stationary}`;this._updateHash!==e&&(this._updateHash=e,this.strategy.update(t).catch(i=>{u(i)||c.getLogger(this).error(i)}),t.stationary&&this._popupHighlightHelper.updateHighlightedFeatures(t.state.resolution)),this._highlightView.processUpdate(t)}attach(){const{imageMaxWidth:t,imageMaxHeight:e,version:i}=this.layer,a=i>=10.3,n=i>=10;this._bitmapContainer=new f,this.container.addChild(this._bitmapContainer),this._highlightView=new w({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new v(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1}),this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new U({createFetchPopupFeaturesQueryGeometry:(r,s)=>y(r,s,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(r,s)=>{this._highlightView.graphicUpdateHandler({graphic:r,property:s})},layerView:this,updatingHandles:this._updatingHandles}),this.strategy=new $({container:this._bitmapContainer,fetchSource:this.fetchImageBitmap.bind(this),requestUpdate:this.requestUpdate.bind(this),imageMaxWidth:t,imageMaxHeight:e,imageRotationSupported:a,imageNormalizationSupported:n,hidpi:!0}),this.addAttachHandles(_(()=>this.exportImageVersion,()=>this.requestUpdate())),this.requestUpdate()}detach(){this.strategy.destroy(),this.container.removeAllChildren(),this._bitmapContainer.removeAllChildren(),this._highlightView.destroy(),this._popupHighlightHelper.destroy()}moveStart(){}viewChange(){}moveEnd(){this.requestUpdate()}supportsSpatialReference(t){return this.layer.serviceSupportsSpatialReference(t)}async doRefresh(){this._updateHash="",this.requestUpdate()}isUpdating(){return this.strategy.updating||this.updateRequested}fetchImage(t,e,i,a){return this.layer.fetchImage(t,e,i,{timeExtent:this.timeExtent,floors:this.floors,...a})}fetchImageBitmap(t,e,i,a){return this.layer.fetchImageBitmap(t,e,i,{timeExtent:this.timeExtent,floors:this.floors,...a})}highlight(t){return this._popupHighlightHelper.highlight(t)}};p([o()],h.prototype,"strategy",void 0),p([o()],h.prototype,"updating",void 0),h=p([H("esri.views.2d.layers.MapImageLayerView2D")],h);const Q=h;export{Q as default};
