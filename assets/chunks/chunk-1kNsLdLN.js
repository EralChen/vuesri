import{fG as ve,rK as x,A6 as nt,b$ as xe,bP as Fe,c1 as Xt,g0 as Qt,rz as at,cj as ot,Ci as Z,Cj as Zt,bU as B,g1 as ut,ay as N,l8 as Ht,Ck as Jt,Cl as Kt,az as T,rJ as V,i8 as es,Cm as ts,rN as ss,bY as rs,Cn as is,co as ns,rP as ht,ai as ct,b1 as y,q7 as ue,pq as ke,ae as dt,bm as Y,ar as lt,hX as as,hW as os,$ as U,a0 as J,a2 as _t,a3 as pt,ak as pe,Co as us,Cp as hs,s as D,i7 as cs,q2 as ds,z as ls,Cq as _s,r2 as gt,pk as je,Cr as ft,Cs as ps,e_ as te,e4 as gs,AE as yt,e7 as mt,Ct as Le,Cu as ze,U as fs,rB as ys,mM as ms,x as Ce,hw as bs,Cv as Is,Cw as Ss,cB as Ue,fD as Ge}from"./chunk-gZYsZ36N.js";import{n as We,i as R,r as ws,M as Te,p as Me,d as bt,f as $e,g as vs,a as xs,b as Fs,h as ks,j as Cs}from"./chunk-jUZKQwH1.js";import{o as Ts}from"./chunk-pcBJnprf.js";import{S as Ms,R as $s,A as qs}from"./chunk-hlDJa0jj.js";import{x as As,j as Ne}from"./chunk-L0QvornZ.js";import{o as Rs}from"./chunk-KxVqEBy0.js";import{$ as It}from"./chunk-QXKEW__2.js";import{$ as Be}from"./chunk-tA3jJBr5.js";import{o as Os}from"./chunk-zvkbEooV.js";import{createConnection as Es}from"./chunk-Yc_cFZWP.js";import{d as Ps}from"./chunk-O81L3uYa.js";import"./chunk-t4TbIqUg.js";import"./chunk-_x3yiVOL.js";import"./chunk-47D7e9N5.js";import"./chunk-v6EOeNTY.js";import"./chunk-eiZ4NSSy.js";import"./chunk-n0-ehtct.js";import"./chunk-1_thnT0U.js";import"./chunk-LCQ8NG3J.js";import"./chunk-gJZ7CV2L.js";let Ds=class{constructor(e){this._client=e,this.layerView=this._client.createInvokeProxy("",{ignoreConnectionErrors:!0}),this.container=this._client.createInvokeProxy("container",{ignoreConnectionErrors:!0}),this.eventLog=this._client.createInvokeProxy("eventLog",{ignoreConnectionErrors:!0})}};const se=1,qe=2,re=4,Ae=8,Re=16,ie=32,Oe=64,ne=128;function he(h){switch(h){case se:case Ae:case ie:return-1;case qe:case Oe:return 0;case re:case Re:case ne:return 1}}function ce(h){switch(h){case se:case qe:case re:return-1;case Ae:case Re:return 0;case ie:case Oe:case ne:return 1}}const Ve=se|Ae|ie,Ye=re|Re|ne,Xe=se|qe|re,Qe=ie|Oe|ne;let js=class{constructor(e,t,s,r=0){this.tileKey=e,this._bufferingEnabled=t,this._sizeHint=r,this._meshes={self:new We(this.id,this._sizeHint),neighbors:new Array},this._currentRecordOverlaps=0,this._currentEntityOverlaps=0,this._copyBufferedDataIntoSelf=s&&this._bufferingEnabled&&e.level===0}get id(){return this.tileKey.id}vertexCount(){return this._meshes.self.vertexCount()}indexCount(){return this._meshes.self.indexCount()}indexEnsureSize(e){this._meshes.self.indexEnsureSize(e)}entityStart(e,t=e){this._currentEntityOverlaps=0,this._meshes.self.entityStart(e,t)}entityRecordCount(){return this._meshes.self.entityRecordCount()}entityEnd(){if(this._meshes.self.entityEnd(),this._bufferingEnabled){if(this._copyBufferedDataIntoSelf)return;for(let e=0;e<8;e++){const t=1<<e;this._currentEntityOverlaps&t&&this._meshes.neighbors[e].entityEnd()}}}recordStart(e,t,s){this._currentRecordOverlaps=0,this._meshes.self.recordStart(e,t,s)}recordEnd(e=0){const t=this._meshes.self.recordEnd(this._currentRecordOverlaps);return t&&this._currentRecordOverlaps!==0?(this._copyIntoNeighbors(),this._currentEntityOverlaps|=this._currentRecordOverlaps,!0):t}recordBounds(e,t,s,r){this._bufferingEnabled&&this._addOverlap(e,t,s,r)}recordCount(){return this._meshes.self.recordCount()}metricStart(e){this._meshes.self.metricStart(e)}metricBoxWrite(e){this._meshes.self.metricBoxWrite(e)}metricEnd(){this._meshes.self.metricEnd()}vertexWrite(e){this._meshes.self.vertexWrite(e)}vertexWriteF32(e){this._meshes.self.vertexWriteF32(e)}vertexWriteRegion(e){this._meshes.self.vertexWriteRegion(e)}indexWrite(e){this._meshes.self.indexWrite(e)}serialize(e){const t={message:[],transferList:[]},s=this._meshes.self.serialize();return t.message.push({tileId:this.tileKey.id,...s.message}),t.transferList.push(...s.transferList),this._meshes.neighbors.forEach((r,i)=>{const n=r.serialize(),a=1<<i,o=he(a),u=ce(a),d=Ts(new ve(this.tileKey),o,u,e);t.message.push({tileId:d.id,...n.message}),t.transferList.push(...n.transferList)}),t}_addOverlap(e,t,s,r){const i=Math.min(x/2,s),n=Math.min(x/2,r),a=255^((e<0+i?Ye:e>=x-i?Ve:Ye|Ve)|(t<0+n?Qe:t>=x-n?Xe:Qe|Xe));this._currentRecordOverlaps|=a}_copyIntoNeighbors(){for(let e=0;e<8;e++){const t=1<<e;if(this._currentRecordOverlaps&t){if(this._copyBufferedDataIntoSelf){const n=-he(t)*x,a=-ce(t)*x;this._meshes.self.copyLast(n,a);continue}if(!this._meshes.neighbors[e]){const n=Math.floor(this._sizeHint/16);this._meshes.neighbors[e]=new We(t,n)}const s=this._meshes.neighbors[e],r=-he(t)*x,i=-ce(t)*x;s.copyLastFrom(this._meshes.self,r,i)}}}},Ls=class{},j=class St{constructor(){this._defaultResult=null,this._backgroundFillResult=null}static async from(e,t,s,r){const i=new St;return i.setDefault(await R(e,t,s.meshes,r)),i}size(){return 1}getDefault(){return this._defaultResult}setDefault(e){this._defaultResult=e}getBackgroundFill(){return this._backgroundFillResult}setBackgroundFill(e){this._backgroundFillResult=e}match(e,t){const s=this.doMatch(e,t)||this.getDefault();if(s&&s.length>0){const r=this.getBackgroundFill();if(r)return[...r,...s]}return s}getSortKey(e,t){return 0}doMatch(e,t){return null}async fetchResources(e,t){}},zs=class wt extends j{static async fromDictionaryRenderer(e,t,s){return new wt(e,t,s)}constructor(e,t,s){super(),this._storage=e,this._schema=t,this._viewParams=s,this._hashToGroup=new Map}get fieldMap(){return this._schema.fieldMap}async fetchResources(e,t){const s=t.getCursor(),r=[];for(;s.next();)r.push(this._updateMeshWriterGroup(e,s));await Promise.all(r)}match(e,t){const s=e.getAttributeHash();return this._hashToGroup.get(s)}async _updateMeshWriterGroup(e,t){const s=t.readLegacyFeatureForDisplay(),r=t.getAttributeHash();if(this._hashToGroup.has(r))return;this._hashToGroup.set(r,null);const i=await e.fetchDictionaryResourceImmediate({type:"dictionary-request",feature:s});if(!i)return;const n=await R(this._storage,e,i.meshes,this._viewParams);this._hashToGroup.set(r,n)}},Us=class vt extends j{constructor(e,t){super(),this._intervals=[],this._isMaxInclusive=t,this._field=e}static async fromIntervalSchema(e,t,s,r){const i=await e.createComputedField(s),n=new vt(i,s.isMaxInclusive);await Promise.all(s.intervals.map(async u=>{const d=await R(e,t,u.meshes,r);n.add(u,d)}));const a=await R(e,t,s.defaultSymbol,r);n.setDefault(a);const o=await R(e,t,s.backgroundFill,r);return n.setBackgroundFill(o),n}add(e,t){this._intervals.push({interval:e,result:t}),this._intervals.sort((s,r)=>s.interval.min-r.interval.min)}size(){return super.size()+this._intervals.length}doMatch(e,t){const s=this._field?.read(e,t);if(s==null||isNaN(s)||s===1/0||s===-1/0)return null;for(let r=0;r<this._intervals.length;r++){const{interval:i,result:n}=this._intervals[r],a=s>=i.min,o=this._isMaxInclusive?s<=i.max:s<i.max;if(a&&o)return n}return null}},Gs=class xt extends j{static async fromLabelSchema(e,t,s,r){const i=s.classes.map(async a=>{const o=await R(e,t,a.meshes,r);return{minScale:a.minScale,maxScale:a.maxScale,meshes:o,expression:null,where:await e.createWhereClause(a.where)}}),n=await Promise.all(i);return new xt(n)}constructor(e){super(),this._labels=e}match(e,t){if(!this._labels.length)return null;const s=this._getLabels(t.$view.scale),r=[];for(const i of s)i.where&&!i.where(e)||r.push(...i.meshes);return r}_getLabels(e){return this._labels.filter(t=>this._validForTileScale(t,e))}_validForTileScale(e,t){const s=t-t/4,r=t+t/2;return(!e.minScale||e.minScale>=s)&&(!e.maxScale||e.maxScale<=r)}},Ws=class Ft extends j{constructor(e,t){super(),this._defaultSymbolSortKey=0,this._nullResult=null,this._resultsMap=new Map,this._fields=[],this._fields=e,this._separator=t||""}static async fromMatcherSchema(e,t,s,r){const i=s.expression?[e.createComputedField({expression:s.expression})]:[s.field?e.createComputedField({field:s.field}):null,s.field2?e.createComputedField({field:s.field2}):null,s.field3?e.createComputedField({field:s.field3}):null],n=(await Promise.all(i)).filter(d=>!!d),a=new Ft(n,s.fieldDelimiter),o=await R(e,t,s.defaultSymbol,r);a.setDefault(o);const u=await R(e,t,s.backgroundFill,r);return a.setBackgroundFill(u),await Promise.all(s.map.map(async(d,c)=>{const l=await R(e,t,d.symbol,r);d.value==="<Null>"?a.setNullResult(l):a.add(d.value,l,c+1)})),a}setNullResult(e){this._nullResult=e}getSortKey(e,t){const s=this._getValueFromFields(e,t);if(s==null||s===""||s==="<Null>")return 0;const r=this._resultsMap.get(s.toString());return r?r.sortKey:this._defaultSymbolSortKey}add(e,t,s){this._resultsMap.set(e.toString(),{meshWriters:t,sortKey:s}),this._defaultSymbolSortKey=Math.max(this._defaultSymbolSortKey,s+1)}size(){return super.size()+this._resultsMap.size}doMatch(e,t){const s=this._getValueFromFields(e,t);if(this._nullResult!==null&&(s==null||s===""||s==="<Null>"))return this._nullResult;if(s==null)return null;const r=s.toString();return this._resultsMap.get(r)?.meshWriters}_getValueFromFields(e,t){const s=[];for(const r of this._fields){const i=r.read(e,t);i==null||i===""?s.push("<Null>"):s.push(i)}return s.join(this._separator)}};async function X(h,e,t,s){switch(t.type){case"simple":case"heatmap":case"dot-density":case"pie-chart":return j.from(h,e,t,s);case"interval":return Us.fromIntervalSchema(h,e,t,s);case"dictionary":return zs.fromDictionaryRenderer(h,t,s);case"label":return Gs.fromLabelSchema(h,e,t,s);case"map":return Ws.fromMatcherSchema(h,e,t,s);case"subtype":return Ns.fromSubtypes(h,e,t,s);case"cluster":return Bs.fromClusterSchema(h,e,t,s);default:throw new Error("Impl")}}let Ns=class kt extends j{constructor(e,t){super(),this._subMatchers=e,this._subtypeField=t}static async fromSubtypes(e,t,s,r){const i=new Map,n=[];for(const a in s.renderers){const o=parseInt(a,10),u=X(e,t,s.renderers[a],r).then(d=>i.set(o,d));n.push(u)}return await Promise.all(n),new kt(i,s.subtypeField)}match(e,t){const s=e.readAttribute(this._subtypeField),r=this._subMatchers.get(s);return r?r.match(e,t):null}},Bs=class Ct extends j{static async fromClusterSchema(e,t,s,r){const[i,n]=await Promise.all([X(e,t,s.feature,r),X(e,t,s.cluster,r)]);return new Ct(i,n)}constructor(e,t){super(),this._featureMatcher=e,this._clusterMatcher=t}match(e,t){return e.readAttribute("cluster_count")===1?this._featureMatcher.match(e,t):this._clusterMatcher.match(e,t)}},Vs=class Tt extends Ls{static async create(e,t,s,r){const i=await X(e,t,s.symbology,r),n=s.labels?await X(e,t,s.labels,r):null;return new Tt(i,n)}constructor(e,t){super(),this._symbology=e,this._labels=t}destroy(){}async enqueueMatcherRequests(e,t){await Promise.all([this._symbology.fetchResources(e,t),this._labels?.fetchResources(e,t)])}enqueueWriterRequests(e,t,s){const r=this._symbology.match(t,s);if(r){for(const i of r)i.enqueueRequest(e,t,s);if(this._labels){const i=this._labels.match(t,s);if(!i)return;for(const n of i)n.enqueueRequest(e,t,s)}}}write(e,t,s,r,i){const n=this._symbology.match(s,r);if(n){for(const a of n)a.write(e,t,s,r,i);if(e.entityRecordCount()>=1&&this._labels){const a=this._labels.match(s,r);if(!a)return;for(const o of a)o.setReferences(n),o.write(e,t,s,r,i)}}}getSortKey(e,t){return this._symbology.getSortKey(e,t)}},Ys=class{constructor(e){this._outstandingMessages=[],this._queue=new nt({concurrency:e.concurrency,process:t=>e.process(t)})}async push(e){if(e.end)return await Promise.all(this._outstandingMessages),await this._queue.push(e),void(this._outstandingMessages=[]);const t=this._queue.push(e);return this._outstandingMessages.push(t),t}},Mt=class ge{static async create(e,t){if(t.statisticType==="count"){const r=new ws(1);return new ge(t.name,t.alias,t.type,t.statisticType,r)}const s=await e.createComputedField({expression:t.onStatisticExpression?.expression,field:t.onStatisticField});return new ge(t.name,t.alias,t.type,t.statisticType,s)}constructor(e,t,s,r,i){this.name=e,this.alias=t,this.type=s,this.statisticType=r,this.computed=i}},Ee=class{constructor(e){this.subscription=e,this.handledChunks=new Set}destroy(){}},$t=class{constructor(e,t){this._source=e,this._attributeStore=t,this._sendStates=new Map}destroy(){}get enablePixelBuffering(){return!0}onSubscribe(e){const t=this.createState(e);this._sendStates.set(e.key.id,t),this.updateChunks()}onUnsubscribe(e){this._sendStates.get(e.key.id)?.destroy(),this._sendStates.delete(e.key.id)}invalidate(){const e=Array.from(this._sendStates.values());this._sendStates.clear();for(const t of e)t.destroy(),this.onSubscribe(t.subscription)}invalidateAttributeData(){}getFeatureObjectIdsForAggregate(e){throw new Error("InternalError: AggregateId lookup not supported")}getDisplayIds(e){return this.displayMap(e,t=>t,t=>t)}getDisplayAndObjectIds(e){return this.displayMap(e,t=>t,(t,s,r)=>[t,r])}afterUpdateChunks(){}},qt=class extends $t{constructor(e,t,s,r){super(e,t),this.spatialReference=s,this.aggregateFields=r,this.events=new xe,this.featureAdapter=Rs}get aggregateQueryEngine(){return this._aggregateQueryEngine||(this._aggregateQueryEngine=new It({featureStore:this,fieldsIndex:this._metadata.fieldsIndex,geometryType:this._metadata.geometryType,objectIdField:this._metadata.objectIdField,spatialReference:this.spatialReference})),this._aggregateQueryEngine}removeChunks(e){}forEach(e){return this.forEachAggregateWorldSpace(e)}forEachInBounds(e,t){}forEachBounds(e,t){const s=Fe();for(const r of e){const i=Xt(s,r.geometry,!1,!1);i&&t(i)}}},Pe=class{constructor(e,t,s,r,i){this.subscription=e,this.reader=t,this.clear=s,this.end=r,this.debugInfo=i,this.type="append"}get id(){return this.subscription.tile.id}createMessage(e,t,s){return{type:"append",clear:this.clear,id:this.id,append:e,end:this.end,debugInfo:this.debugInfo,subscriptionVesrion:this.subscription.version,version:t,attributeEpoch:s}}},fe=class{constructor(e,t,s,r,i){this.subscription=e,this.reader=t,this.remove=s,this.end=r,this.debugInfo=i,this.type="update"}get id(){return this.subscription.tile.id}createMessage(e,t,s){return{type:"update",id:this.id,modify:e,debugInfo:this.debugInfo,remove:this.remove,version:t,subscriptionVesrion:this.subscription.version,end:this.end,attributeEpoch:s}}},M=class P extends Te{static fromFeatures(e,t){const{objectIdField:s,geometryType:r}=t,i=Qt([],e,r,!1,!1,s);for(let n=0;n<i.length;n++)i[n].displayId=e[n].displayId;return P.fromOptimizedFeatures(i,t)}static fromFeatureSet(e,t){const s=at(e,t.objectIdField);return P.fromOptimizedFeatureSet(s,t)}static fromOptimizedFeatureSet(e,t){const s=P.fromOptimizedFeatures(e.features,t);return s._exceededTransferLimit=e.exceededTransferLimit,s._transform=e.transform,s._fieldsIndex=new ot(e.fields),s}static fromOptimizedFeatures(e,t,s){const r=new P(e,t);return r._fieldsIndex=t.fieldsIndex,r._transform=s,r}static empty(e){return new P([],e)}constructor(e,t){super(t),this._exceededTransferLimit=!1,this._featureIndex=-1,this._fieldsIndex=null,this._geometryType=t.geometryType,this._features=e}get fields(){return this._fieldsIndex}get geometryType(){return this._geometryType}get hasFeatures(){return!!this._features.length}get hasNext(){return this._featureIndex+1<this._features.length}get exceededTransferLimit(){return this._exceededTransferLimit}get hasZ(){return!1}get hasM(){return!1}get _current(){return this._features[this._featureIndex]}removeIds(e){const t=new Set(e);this._features=this._features.filter(s=>!(s.objectId!=null&&t.has(s.objectId)))}getSize(){return this._features.length}getCursor(){return this.copy()}getInTransform(){return this._transform}getAttributeHash(){let e="";for(const t in this._current.attributes)e+=this._current.attributes[t];return e}getIndex(){return this._featureIndex}setIndex(e){this._featureIndex=e}getObjectId(){return this._current?.objectId}getDisplayId(){return this._current.displayId}setDisplayId(e){this._current.displayId=e}copy(){const e=new P(this._features,this.metadata);return this.copyInto(e),e}next(){for(;++this._featureIndex<this._features.length&&!this._getExists(););return this._featureIndex<this._features.length}readGeometryArea(){return Z(this._current)?Zt(this._current.geometry,2):0}_readX(){return Z(this._current)?this._current.geometry.coords[0]:0}_readY(){return Z(this._current)?this._current.geometry.coords[1]:0}_readGeometry(){return Z(this._current)?this._current.geometry??null:null}_readServerCentroid(){return this._current.centroid}_readAttribute(e,t){if(!this._fieldsIndex){const i=this._current.attributes[e];if(i!==void 0)return i;const n=e.toLowerCase();for(const a in this._current.attributes)if(a.toLowerCase()===n)return this._current.attributes[a];return}const s=this._fieldsIndex.get(e);if(!s)return;let r=this._current.attributes[s.name];return r==null?r:(this.fields.get(e)?.type==="esriFieldTypeTimestampOffset"&&(r=this.parseTimestampOffset(r)),t&&this.fields.isDateField(e)?new Date(r):r)}_readAttributes(){return this._current.attributes}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._transform=this._transform,e._fieldsIndex=this._fieldsIndex}},Xs=class extends Ee{constructor(e,t){super(e),this.bins=new Map,this.done=!1,this._store=t}reset(){this.destroy(),this.bins.clear(),this.done=!1,this.handledChunks.clear()}destroy(){const e=this.subscription.tile.key.level;for(const t of this.bins.values()){const s=t.cachedFeature?.objectId;s!=null&&this._store.releaseDisplayIdForObjectId(`${s}.${e}`)}}*featuresWorldSpace(){for(const e of this.bins.values()){const t=e.cachedFeature;if(t){const s=t.clone();s.geometry&&Ht(s.geometry,s.geometry,!1,!1,this.subscription.tile.transform),yield s}}}getGeohashBounds(e,t){const s=this.subscription.tile;return Ms(s.extent,s.resolution,t,e)}},Qs=class At extends qt{static async create(e,t,s,r,i){const n=new Me({spatialReference:t}),a=e.fixedBinLevel,o=await Promise.all(e.fields.map(async d=>Mt.create(n,d))),u=e.featureFilter?await bt.create({geometryType:s.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:s.metadata.timeInfo,fieldsIndex:s.metadata.fieldsIndex,spatialReference:t,filterJSON:e.featureFilter}):null;return await As(t,B.WGS84),new At({fields:o,geohashLevel:a,spatialReference:t,featureFilter:u,timeZone:i},e.fields,s,r)}constructor(e,t,s,r){super(s,r,e.spatialReference,e.fields),this._indexOptions=e,this._metadata=new $e({geometryType:"esriGeometryPolygon",objectIdField:"aggregateId",fields:t,globalIdField:null,spatialReference:s.metadata.spatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,typeIdField:null,types:null})}createState(e){return new Xs(e,this._attributeStore)}async*applyOverride(e){for(const t of this._sendStates.values())t.reset(),yield new Pe(t.subscription,M.empty(this._source.metadata),!0,!1,{})}displayMap(e,t,s){const r=new Map(e.map(n=>[t(n),n])),i=[];for(const n of this._sendStates.values())for(const a of n.featuresWorldSpace()){const{objectId:o,displayId:u}=a,d=r.get(o);if(d!=null){const c=s(u,d,o);i.push(c),r.delete(o)}}return i}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[];for(const i of this._sendStates.values())for(const n of i.featuresWorldSpace())t.has(n.displayId)&&!s.has(n.objectId)&&(n.geometry&&r.push({...ut(n,this._metadata.geometryType,!1,!1),displayId:n.displayId}),s.add(n.objectId));return{features:[],aggregates:r}}getFeatureObjectIdsForAggregate(e){for(const t of this._sendStates.values())for(const s of t.bins.values())if(s.id===e)return Array.from(s.objectIds);return[]}async*updateChunks(){if(this._source.chunks().length)for(const e of this._sendStates.values())yield*this._update(e,this._source)}forEachAggregateWorldSpace(e){for(const t of this._sendStates.values())for(const s of t.featuresWorldSpace())e(s)}async*_update(e,t){const{handledChunks:s,subscription:r,bins:i}=e,{spatialReference:n,geohashLevel:a}=this._indexOptions,o=r.tile;if(e.done)return;for(const p of t.chunks()){if(s.has(p.chunkId))continue;s.add(p.chunkId);const I=p.queryInfo;if("tileId"in I){const b=new ve(I.tileId);if(b.level!==o.level||b.world!==o.key.world)continue}const f=p.getGeohashIndex(this._indexOptions),F=e.getGeohashBounds(n,a);F!=null&&f.putBins(i,F)}const u=[],d=r.tile.transform,c=r.tile.key.level;for(const p of i.values()){if(p.cachedFeature)p.cachedFeature.attributes=p.getAttributes();else{const I=p.getGeometry(this.spatialReference,d),f=new N(I,p.getAttributes(),null);I||(f.centroid=p.getGeometryCentroid(this.spatialReference,d)),f.objectId=p.id,f.displayId=this._attributeStore.createDisplayIdForObjectId(`${f.objectId}.${c}`),p.cachedFeature=f}u.push(p.cachedFeature)}this.events.emit("changed"),e.done=!t.updateTracking.updating;const l=M.fromOptimizedFeatures(u,this._metadata,d),g=l.getCursor(),_=e.subscription.tile.createArcadeEvaluationOptions(this._indexOptions.timeZone);for(;g.next();)this._attributeStore.setAttributeData(g.getDisplayId(),g,_);yield new fe(e.subscription,l,[],e.done,{})}};const Ze=Math.PI/180;let Rt=class ye{static create(e){return new ye(e.map(t=>Zs(t)))}constructor(e){this._statistics=e}values(){return this._statistics.values()}insert(e,t){for(const s of this._statistics)s.insert(e,t)}merge(e){for(let t=0;t<this._statistics.length;t++){const s=this._statistics[t],r=e._statistics[t];if(s.field.name!==r.field.name)throw new Error("InternalError: Tried to merge incompatible statistics");s.merge(r)}}clone(){return new ye(this._statistics.map(e=>e.clone()))}};function Zs(h){switch(h.statisticType){case"min":return new Hs(h);case"max":return new Js(h);case"avg":return new er(h);case"avg_angle":return new tr(h);case"sum":case"count":return new Ks(h);case"mode":return new sr(h)}}let G=class{constructor(e){this.field=e}insert(e,t){if(!this.field.computed)return;const s=this.field.computed.read(e,t);vs(s)||this._insertValue(s)}},Hs=class Ot extends G{constructor(){super(...arguments),this.type="min",this.value=Number.MAX_VALUE}_insertValue(e){this.value=Math.min(this.value,e)}merge(e){this.value=Math.min(this.value,e.value)}clone(){const e=new Ot(this.field);return e.value=this.value,e}},Js=class Et extends G{constructor(){super(...arguments),this.type="max",this.value=Number.MIN_VALUE}_insertValue(e){this.value=Math.max(this.value,e)}merge(e){this.value=Math.max(this.value,e.value)}clone(){const e=new Et(this.field);return e.value=this.value,e}},Ks=class Pt extends G{constructor(){super(...arguments),this.type="sum",this.value=0}_insertValue(e){this.value+=e}merge(e){this.value+=e.value}clone(){const e=new Pt(this.field);return e.value=this.value,e}},er=class Dt extends G{constructor(){super(...arguments),this.type="avg",this._total=0,this._count=0}get value(){return this._total/this._count}_insertValue(e){this._total+=e,this._count+=1}merge(e){this._total+=e._total,this._count+=e._count}clone(){const e=new Dt(this.field);return e._total=this._total,e._count=this._count,e}},tr=class jt extends G{constructor(){super(...arguments),this.type="avg_angle",this._x=0,this._y=0,this._count=0}get value(){const e=this._x/this._count,t=this._y/this._count,s=180/Math.PI;return Math.atan2(t,e)*s}_insertValue(e){this._x=this._x+Math.cos(e*Ze),this._y=this._y+Math.sin(e*Ze),this._count+=1}merge(e){this._x+=e._x,this._y+=e._y,this._count+=e._count}clone(){const e=new jt(this.field);return e._x=this._x,e._y=this._y,e._count=this._count,e}},sr=class Lt extends G{constructor(){super(...arguments),this._frequencies=new Map}get value(){let e,t=0;for(const[s,r]of this._frequencies.entries())r>t&&(t=r,e=s);return e}_insertValue(e){const t=this._frequencies.get(e);t!=null?this._frequencies.set(e,t+1):this._frequencies.set(e,1)}merge(e){for(const[t,s]of e._frequencies.entries()){const r=this._frequencies.get(t);r!=null?this._frequencies.set(t,r+s):this._frequencies.set(t,s)}}clone(){const e=new Lt(this.field);return e._frequencies=new Map(this._frequencies),e}},me=class K{static createId(e,t){return`${e}.${t}`}static create(e,t,s,r){return new K(e,t,Rt.create(s),r)}constructor(e,t,s,r){this.gridX=e,this.gridY=t,this._statistics=s,this._worldUnitsPerCell=r,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._objectIds=new Set}get id(){return K.createId(this.gridX,this.gridY)}get count(){return this._count}get statistics(){return this._statistics}get objectIds(){return this._objectIds}get firstObjectId(){return this._objectIds.values().next().value}get centroidXWorld(){return this._xWorldTotal/this._count}get centroidYWorld(){return this._yWorldTotal/this._count}clone(){const e=new K(this.gridX,this.gridY,this._statistics.clone(),this._worldUnitsPerCell);return e._count=this._count,e._xWorldTotal=this._xWorldTotal,e._yWorldTotal=this._yWorldTotal,e._firstFeatureAttributes=this._firstFeatureAttributes,e._objectIds=new Set(this._objectIds),e}insert(e,t,s,r){this._count===0?this._firstFeatureAttributes=e.readAttributes():this._firstFeatureAttributes=null,this._count+=1,this._xWorldTotal+=s,this._yWorldTotal+=r,this._statistics.insert(e,t),this._objectIds.add(e.getObjectId())}merge(e){if(e._count!==0){this._count+=e._count,this._firstFeatureAttributes=e._firstFeatureAttributes,this._xWorldTotal+=e._xWorldTotal,this._yWorldTotal+=e._yWorldTotal,this._statistics.merge(e._statistics);for(const t of e._objectIds.values())this._objectIds.add(t)}}getCentroidX(e){return e==null?this.centroidXWorld:Jt(e,this.centroidXWorld)}getCentroidY(e){return e==null?this.centroidYWorld:Kt(e,this.centroidYWorld)}getCentroid(e){const t=new T([],[this.centroidXWorld,this.centroidYWorld]);if(e!=null){const s=new T;return V(s,t,!1,!1,"esriGeometryPoint",e)}return t}getGeometricCentroid(e){const t=this.gridX*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,s=this.gridY*this._worldUnitsPerCell+.5*this._worldUnitsPerCell,r=new T([],[t,s]);if(e!=null){const i=new T;return V(i,r,!1,!1,"esriGeometryPoint",e)}return r}getAttributes(){const e={aggregateId:this.id};for(const t of this._statistics.values())e[t.field.name]=t.value;return this._firstFeatureAttributes!=null?{...e,...this._firstFeatureAttributes}:e}};const rr=96;function be(h,e){return es(h)*ts*rr/e}let ir=class{constructor(e){this._options=e,this._cells=new Map,this._pixelsPerMapUnit=be(e.spatialReference,e.scale)}insert(e,t){const s=e.getCursor(),r={$view:{scale:this._options.scale,timeZone:this._options.timeZone}};for(;s.next();)this._insertFeature(s,r,t)}putCellsInBounds(e,t){const[s,r,i,n]=t,a=Math.floor(s*this._pixelsPerMapUnit/this._options.cellSize),o=Math.floor(r*this._pixelsPerMapUnit/this._options.cellSize),u=Math.ceil(i*this._pixelsPerMapUnit/this._options.cellSize),d=Math.ceil(n*this._pixelsPerMapUnit/this._options.cellSize);for(let c=o;c<=d;c++)for(let l=a;l<=u;l++){const g=`${l}.${c}`,_=this._cells.get(g);if(!_)continue;const m=e.get(_.id);m?_&&!e.has(_.id)&&m.merge(_):e.set(_.id,_.clone())}}putCells(e){for(const t of this._cells.values()){const s=e.get(t.id);s?s.merge(t):e.set(t.id,t.clone())}}_insertFeature(e,t,s){const{featureFilter:r}=this._options;if(r!==null&&!r.check(e))return;let i=0,n=0;if(e.geometryType==="esriGeometryPoint")i=e.readXWorldSpace(),n=e.readYWorldSpace();else{if(s){const l=e.readCentroidForDisplay();if(l==null)return;const[g,_]=l.coords;if(g<0||g>x||_<0||_>x)return}const c=e.readCentroidWorldSpace();if(c==null)return;i=c.coords[0],n=c.coords[1]}const a=i*this._pixelsPerMapUnit,o=n*this._pixelsPerMapUnit,u=Math.floor(a/this._options.cellSize),d=Math.floor(o/this._options.cellSize);this._getCellOrCreate(u,d).insert(e,t,i,n)}_getCellOrCreate(e,t){const s=me.createId(e,t);let r=this._cells.get(s);if(!r){const i=1*this._options.cellSize/this._pixelsPerMapUnit;r=me.create(e,t,this._options.fields,i),this._cells.set(s,r)}return r}},nr=class{constructor(e,t){this.inner=e,this.displayId=t}};const H=128;let ar=class extends Ee{constructor(e){super(e),this.didSend=!1,this.done=!1}},or=class{constructor(e,t,s,r,i){this._level=e,this._scale=t,this._indexOptions=s,this._clusterRadius=r,this._store=i,this._cells=new Map,this._handledChunks=new Set,this._statistics=new Map,this._clusters=new Map}destroy(){this._clearClusters()}_clearClusters(){for(const e of this._clusters.values())this._store.releaseDisplayIdForObjectId(e.inner.id);this._clusters.clear()}*aggregatesWorldSpace(){for(const e of this._clusters.values()){const t=e.inner.getCentroid(null),s=new N(t,e.inner.getAttributes(),null);s.objectId=e.inner.id,s.displayId=e.displayId,yield s}}clusters(){return this._clusters.values()}updateChunks(e,t){let s=!1;for(const a of e){const o=a.queryInfo;"tileId"in o&&new ve(o.tileId).level!==this._level||this._handledChunks.has(a.normalizedChunkId)||(this._handledChunks.add(a.normalizedChunkId),s=!0,a.getGridIndex({...this._indexOptions,scale:this._scale}).putCells(this._cells))}const r={xMin:1/0,yMin:1/0,xMax:-1/0,yMax:-1/0},i=be(this._indexOptions.spatialReference,this._scale),n=this._indexOptions.cellSize;for(const{subscription:a}of t){const o=a.tile.bounds,u=Math.floor(o[0]*i/n),d=Math.floor(o[1]*i/n),c=Math.ceil(o[2]*i/n),l=Math.ceil(o[3]*i/n);r.xMin=Math.min(r.xMin,u),r.yMin=Math.min(r.yMin,d),r.xMax=Math.max(r.xMax,c),r.yMax=Math.max(r.yMax,l)}return this._lastCellBounds!=null&&r.xMin===this._lastCellBounds.xMin&&r.yMin===this._lastCellBounds.yMin&&r.yMin===this._lastCellBounds.yMin&&r.yMax===this._lastCellBounds.yMax||(s=!0,this._lastCellBounds=r),s&&this._clusterCells(r),s}async updateStatistics(e){let t=!1;for(const s of this._clusters.values())s.inner.count>1&&(t=this._updateAggregateStatistics(this._statistics,s.inner)||t);if(t){const s=Array.from(this._statistics.entries()).map(([r,i])=>({fieldName:r,minValue:i.minValue,maxValue:i.maxValue}));await e.container.updateStatistics(this._level,s)}}createAggregateFeatures(e,t){const s=e.subscription,r=[],i=s.tile.transform;for(const n of this._clusters.values()){let a=n.inner.getCentroidX(i);const o=n.inner.getCentroidY(i),u=s.tile.lod,d=u.wrap?u.worldSize[0]:null,c=n.inner.count===1?n.inner.firstObjectId:n.inner.id,l=n.displayId;if(d!=null)if(d===1){const g=new T([],[a,o]),_=new N(g,n.inner.getAttributes(),null);_.geometry.coords[0]-=x,_.objectId=c,_.displayId=l,r.push(_);const m=new T([],[a,o]),p=new N(m,n.inner.getAttributes(),null);p.geometry.coords[0]+=x,p.objectId=c,p.displayId=l,r.push(p)}else a>x+x/2?a-=d*x:a<-x/2&&(a+=d*x);if(a<x+H&&a>=-H&&o<x+H&&o>=-H){const g=new T([],[a,o]),_=new N(g,n.inner.getAttributes(),null);_.objectId=c,_.displayId=l,r.push(_)}}return M.fromOptimizedFeatures(r,t,s.tile.transform)}_clusterCells(e){let t=Array.from(this._cells.values());t=t.sort((a,o)=>o.count-a.count);const s=[];for(const a of this._clusters.values())s.push(a.inner.id);this._clusters.clear();const r=this._clusterRadius*(1/be(this._indexOptions.spatialReference,this._scale)),i=1+this._clusterRadius/this._indexOptions.cellSize,n=new Set;for(const a of t){if(n.has(a.id)||a.gridX<e.xMin||a.gridX>e.xMax||a.gridY<e.yMin||a.gridY>e.yMax)continue;const o=this._store.createDisplayIdForObjectId(a.id),u=new nr(a.clone(),o);n.add(a.id),this._clusters.set(a.id,u);const d=a.centroidXWorld,c=a.centroidYWorld;for(let l=a.gridY-i;l<=a.gridY+i;l++)for(let g=a.gridX-i;g<=a.gridX+i;g++){if(l===a.gridY&&g===a.gridX)continue;const _=this._cells.get(me.createId(g,l));if(!_||n.has(_.id))continue;const m=Math.abs(_.centroidXWorld-d),p=Math.abs(_.centroidYWorld-c);m<r&&p<r&&(u.inner.merge(_),n.add(_.id))}}for(const a of s)this._store.releaseDisplayIdForObjectId(a)}_updateAggregateStatistics(e,t){let s=!1;for(const r of t.statistics.values()){if(r.field.type==="esriFieldTypeString")continue;const i=r.value,n=r.field,a=e.get(n.name);if(a){const{minValue:o,maxValue:u}=a,d=Math.min(a.minValue,i),c=Math.max(a.maxValue,i);o===d&&u===c||(a.minValue=d,a.maxValue=c,s=!0)}else e.set(n.name,{minValue:i,maxValue:i}),s=!0}return s}};class De extends qt{static async create(e,t,s,r,i,n){const a=new Me({spatialReference:s}),o={fields:await Promise.all(t.fields.map(async u=>Mt.create(a,u))),spatialReference:s,featureFilter:t.featureFilter?await bt.create({geometryType:r.metadata.geometryType,hasM:!1,hasZ:!1,timeInfo:r.metadata.timeInfo,fieldsIndex:r.metadata.fieldsIndex,spatialReference:s,filterJSON:t.featureFilter}):null,cellSize:t.clusterRadius/4,timeZone:n};return new De(e,t.clusterRadius,o,t.fields,r,i)}constructor(e,t,s,r,i,n){super(i,n,s.spatialReference,s.fields),this._connection=e,this._clusterRadius=t,this._indexOptions=s,this._cellsPerScale=new Map,this._metadata=new $e({geometryType:"esriGeometryPoint",objectIdField:"aggregateId",fields:[...r,...this._source.metadata.fieldsIndex.fields,{name:"aggregateId",alias:"aggregateId",type:"esriFieldTypeOID"}],globalIdField:null,spatialReference:i.metadata.spatialReference,subtypeField:null,subtypes:null,timeInfo:null,timeReferenceUnknownClient:null,typeIdField:null,types:null})}get enablePixelBuffering(){return!1}invalidate(){super.invalidate();for(const e of this._cellsPerScale.values())e.destroy();this._cellsPerScale.clear()}onSubscribe(e){super.onSubscribe(e),this._requiredLevel=e.tile.level,this._requiredScale=e.tile.scale}createState(e){return new ar(e)}async*applyOverride(e){for(const t of this._cellsPerScale.values())t.destroy();this._cellsPerScale.clear();for(const t of this._sendStates.values())t.done=!1}displayMap(e,t,s){const r=new Map(e.map(a=>[t(a),a])),i=[],n=this._getClusterState(this._requiredLevel,this._requiredScale);for(const a of n.clusters()){const o=r.get(a.inner.id);if(o==null){if(a.inner.count===1){const u=r.get(a.inner.firstObjectId);if(u!=null){const d=s(a.displayId,u,a.inner.firstObjectId);i.push(d),r.delete(a.inner.firstObjectId)}}}else{const u=s(a.displayId,o,a.inner.id);i.push(u),r.delete(a.inner.id)}}return i}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[],i=[],n=this._getClusterState(this._requiredLevel,this._requiredScale);for(const a of n.aggregatesWorldSpace())if(t.has(a.displayId)&&!s.has(a.displayId)){const o=ut(a,this._metadata.geometryType,!1,!1);if(s.add(a.displayId),o.attributes.cluster_count===1){r.push({...o,displayId:a.displayId});continue}i.push({...o,displayId:a.displayId})}return{features:r,aggregates:i}}getFeatureObjectIdsForAggregate(e){const t=this._getClusterState(this._requiredLevel,this._requiredScale);for(const s of t.clusters())if(s.inner.id===e)return Array.from(s.inner.objectIds);return[]}async*updateChunks(){const e=this._source.chunks();if(!e.length)return;const t=this._getClusterState(this._requiredLevel,this._requiredScale),s=Array.from(this._sendStates.values()).filter(n=>n.subscription.tile.level===this._requiredLevel);if(t.updateChunks(e,s)||!this._source.updateTracking.updating)for(const n of s)n.subscription.tile.level===this._requiredLevel&&(n.didSend=!1,n.done=!1);const r=Array.from(this._sendStates.values()).filter(n=>n.done).map(n=>n.subscription.tile.key),i=new Set(r);for(const n of this._sendStates.values())this._source.updateTracking.updating&&(r.some(a=>a.containsChild(n.subscription.tile.key))||n.subscription.tile.key.getChildKeys().every(a=>i.has(a)))||n.didSend||n.subscription.tile.level!==this._requiredLevel||(n.didSend=!0,yield*this._update(n,t,this._source));await t.updateStatistics(this._connection)}forEachAggregateWorldSpace(e){if(this._requiredLevel==null||this._requiredScale==null)return;const t=this._getClusterState(this._requiredLevel,this._requiredScale);for(const s of t.aggregatesWorldSpace())e(s)}_getClusterState(e,t){if(e==null||t==null)throw new Error("InternalError: Level and scale must be defined");let s=this._cellsPerScale.get(t);return s||(s=new or(e,t,this._indexOptions,this._clusterRadius,this._attributeStore),this._cellsPerScale.set(t,s)),s}async*_update(e,t,s){if(e.done)return;const r=t.createAggregateFeatures(e,this._metadata);this.events.emit("changed"),e.done=!s.updateTracking.updating;const i=r.getCursor(),n=e.subscription.tile.createArcadeEvaluationOptions(this._indexOptions.timeZone);for(;i.next();)this._attributeStore.setAttributeData(i.getDisplayId(),i,n);yield new Pe(e.subscription,r,!0,e.done,{})}}let ur=class zt{static fromReader(e){const t=[],s=e.copy(),r=Fe();for(;s.next();)s.getBounds(r)&&t.push(s.getIndex());const i=ss(9,n=>(s.setIndex(n),{minX:s.getBoundsXMin(),minY:s.getBoundsYMin(),maxX:s.getBoundsXMax(),maxY:s.getBoundsYMax()}));return i.load(t),new zt(i)}constructor(e){this._index=e}search(e){const t={minX:e[0],minY:e[1],maxX:e[2],maxY:e[3]};return this._index.search(t)}},He=class Ie{static create(e,t,s,r){const i=Rt.create(e),n=new Array(32);for(let a=0;a<n.length;a++)n[a]=null;return new Ie(i,t,s,r,n)}constructor(e,t,s,r,i){this._statistics=e,this.xNode=t,this.yNode=s,this.depth=r,this.children=i,this._objectIds=new Set,this._count=0,this._xWorldTotal=0,this._yWorldTotal=0,this._xGeohashTotal=0,this._yGeohashTotal=0,this.next=null}get id(){return`${this.xNode}.${this.yNode}`}get objectIds(){return this._objectIds}clone(){const e=new Ie(this._statistics.clone(),this.xNode,this.yNode,this.depth,this.children);return e._count=this._count,e._xWorldTotal=this._xWorldTotal,e._yWorldTotal=this._yWorldTotal,e._xGeohashTotal=this._xGeohashTotal,e._yGeohashTotal=this._yGeohashTotal,e.next=this.next,e.cachedFeature=this.cachedFeature,e._objectIds=new Set(this._objectIds),e}insert(e,t,s,r,i,n){this._count+=1,this._xWorldTotal+=t,this._yWorldTotal+=s,this._xGeohashTotal+=r,this._yGeohashTotal+=i,this._statistics.insert(e,n),this._objectIds.add(e.getObjectId())}merge(e){if(e._count!==0){this._count+=e._count,this._xWorldTotal+=e._xWorldTotal,this._yWorldTotal+=e._yWorldTotal,this._xGeohashTotal+=e._xWorldTotal,this._yGeohashTotal+=e._yWorldTotal,this._statistics.merge(e._statistics);for(const t of e._objectIds.values())this._objectIds.add(t)}}getGeometry(e,t){const s=this._getLngLatBounds(),[r,i,n,a]=s,o=Ne({rings:[[[r,i],[r,a],[n,a],[n,i],[r,i]]]},B.WGS84,e),u=rs(new T,o,!1,!1);return t!=null?V(new T,u,!1,!1,"esriGeometryPolygon",t,!1,!1):u}getGeometryCentroid(e,t){const s=this._getLngLatBounds(),[r,i,n,a]=s,o=Ne({x:(r+n)/2,y:(i+a)/2},B.WGS84,e),u=is(new T,o);return t!=null?V(new T,u,!1,!1,"esriGeometryPoint",t,!1,!1):u}getAttributes(){const e={aggregateId:this.id};for(const t of this._statistics.values())e[t.field.name]=t.value;return e.aggregateCount=this._count,e}_getLngLatBounds(){const e=this.depth,t=Math.ceil(e/2),s=Math.floor(e/2),r=30-(3*t+2*s),i=30-(2*t+3*s),n=this.xNode<<r,a=this.yNode<<i;return $s({geohashX:n,geohashY:a},this.depth)}},hr=class{constructor(e){this._fields=e,this._root=He.create(this._fields,0,0,0)}destroy(){}insert(e,t,s,r,i,n,a){let o=this._root,u=0,d=0,c=0;for(;o!==null;){if(o.insert(e,t,s,r,i,a),u>=n)return;const l=Math.ceil((u+1)/2),g=Math.floor((u+1)/2),_=1-u%2,m=30-(3*l+2*g),p=30-(2*l+3*g),I=(r&7*_+3*(1-_)<<m)>>m,f=(i&3*_+7*(1-_)<<p)>>p,F=I+f*(8*_+4*(1-_));d=d<<3*_+2*(1-_)|I,c=c<<2*_+3*(1-_)|f,o.children[F]==null&&(o.children[F]=He.create(this._fields,d,c,u+1)),u+=1,o=o.children[F]}}putBins(e,t){for(const s of this.getNodes(t)){const r=e.get(s.id);r?r.merge(s):e.set(s.id,s.clone())}}getNodes(e){const t=[],{geohashBounds:s,level:r}=e;let i=this._root;for(;i!==null;){const n=i.depth,a=i.xNode,o=i.yNode;if(n>=r){t.push(i),i=i.next;continue}const u=Math.ceil((n+1)/2),d=Math.floor((n+1)/2),c=1-n%2,l=30-(3*u+2*d),g=30-(2*u+3*d),_=~((1<<l)-1),m=~((1<<g)-1),p=(s.xLL&_)>>l,I=(s.yLL&m)>>g,f=(s.xTR&_)>>l,F=(s.yTR&m)>>g,b=a<<3*c+2*(1-c),S=o<<2*c+3*(1-c),w=b+8*c+4*(1-c),v=S+4*c+8*(1-c),k=Math.max(b,p),A=Math.max(S,I),$=Math.min(w,f),C=Math.min(v,F);let q=null,O=null;for(let E=A;E<=C;E++)for(let oe=k;oe<=$;oe++){const Yt=oe-b+(E-S)*(8*c+4*(1-c)),W=i.children[Yt];W&&(q||(q=W,q.next=i.next),O&&(O.next=W),O=W,W.next=i.next)}i=q||i.next}return t}},cr=class{constructor(e){this._options=e,this._tree=new hr(e.fields)}insert(e,t){const s=e.getCursor(),r={$view:{scale:0,timeZone:this._options.timeZone}};for(;s.next();)this._insertFeature(s,r,t)}putBins(e,t){this._tree.putBins(e,t)}_insertFeature(e,t,s){const{featureFilter:r,geohashLevel:i,spatialReference:n}=this._options;if(r!==null&&!r.check(e))return;let a=0,o=0;if(e.geometryType==="esriGeometryPoint")a=e.readXWorldSpace(),o=e.readYWorldSpace();else{if(s){const c=e.readCentroidForDisplay();if(c==null)return;const[l,g]=c.coords;if(l<0||l>x||g<0||g>x)return}const d=e.readCentroidWorldSpace();if(d==null)return;a=d.coords[0],o=d.coords[1]}const u=qs(a,o,i,n);u&&this._tree.insert(e,a,o,u[0],u[1],i,t)}},dr=class Se extends Te{static from(e,t){return new Se(e.copy(),t)}constructor(e,t){super(e.metadata),this._currentIndex=-1,this._displayTranslationX=0,this._displayTranslationY=0,this._displayScaleX=1,this._displayScaleY=1,this._reader=e,this._indices=t,this._isPoint=e.geometryType==="esriGeometryPoint"}setTransformForDisplay(e){const t=this._reader.getInTransform();if(t==null){const[c,l]=e.scale,[g,_]=e.translate;return this._displayTranslationX=-g/c,this._displayScaleX=1/c,this._displayTranslationY=_/l,this._displayScaleY=1/-l,void(this._displayTransform=e)}const[s,r]=t.scale,[i,n]=t.translate,[a,o]=e.scale,[u,d]=e.translate;if(this._displayScaleX=s/a,this._displayTranslationX=(i-u)/a,this._displayScaleY=r/o,this._displayTranslationY=(-n+d)/o,!this._isPoint&&t)throw new Error("InternalError: Relative transformations not supported for non-point features");this._displayTransform=e}getInTransform(){return this._reader.getInTransform()}get fields(){return this._reader.fields}get hasNext(){return this._currentIndex+1<this._indices.length}getSize(){return this._indices.length}getCursor(){return this.copy()}copy(){const e=new Se(this._reader.copy(),this._indices);return e._currentIndex=this._currentIndex,e._displayTransform=this._displayTransform,e._displayTranslationX=this._displayTranslationX,e._displayTranslationY=this._displayTranslationY,e._displayScaleX=this._displayScaleX,e._displayScaleY=this._displayScaleY,e}get contextTimeZone(){return this._reader.contextTimeZone}set contextTimeZone(e){this._reader.contextTimeZone=e}_nextIndex(){return++this._currentIndex<this._indices.length&&(this._reader.setIndex(this._indices[this._currentIndex]),!0)}next(){for(;this._nextIndex()&&!this._reader._getExists(););return this._currentIndex<this._indices.length}readXForDisplay(){return this._reader.readXForDisplay()*this._displayScaleX+this._displayTranslationX}readYForDisplay(){return this._reader.readYForDisplay()*this._displayScaleY+this._displayTranslationY}readGeometryForDisplay(){const e=this._reader.readGeometryForDisplay();if(!this._displayTransform)return e;const t=new T;return V(t,e,this.hasZ,this.hasM,this.geometryType,this._displayTransform),t.deltaDecode()}readCentroidForDisplay(){const e=this._reader.readCentroidForDisplay()?.clone();if(e){const[t,s]=e.coords;e.coords[0]=t*this._displayScaleX+this._displayTranslationX,e.coords[1]=s*this._displayScaleY+this._displayTranslationY}return e}get geometryType(){return this._reader.geometryType}get hasFeatures(){return this._reader.hasFeatures}get exceededTransferLimit(){return this._reader.exceededTransferLimit}get hasZ(){return this._reader.hasZ}get hasM(){return this._reader.hasM}readAttribute(e,t=!1){return this._reader.readAttribute(e,t)}readAttributes(){return this._reader.readAttributes()}joinAttributes(e){return this._reader.joinAttributes(e)}getBounds(e){return this._reader.getBounds(e)}getAttributeHash(){return this._reader.getAttributeHash()}getObjectId(){return this._reader.getObjectId()}getDisplayId(){return this._reader.getDisplayId()}setDisplayId(e){return this._reader.setDisplayId(e)}setIndex(e){return this._reader.setIndex(e)}getIndex(){return this._reader.getIndex()}readXWorldSpace(){return this._reader.readXWorldSpace()}readYWorldSpace(){return this._reader.readYWorldSpace()}_readX(){return this._reader.readXForDisplay()}_readY(){return this._reader.readYForDisplay()}_readServerCentroid(){return this._reader._readServerCentroid()}readLegacyFeatureForDisplay(){const e=this.readCentroidForDisplay();return{attributes:this.readAttributes(),geometry:this.readLegacyGeometryForDisplay(),centroid:(e&&{x:e.coords[0],y:e.coords[1]})??null}}readLegacyGeometryForDisplay(){const e=this.readGeometryForDisplay();return ns(e,this.geometryType,!1,!1)}readGeometryArea(){return this._reader.readGeometryArea()}readGeometryWorldSpace(){return this._reader.readGeometryWorldSpace()}_readGeometry(){return this._reader._readGeometry()}_readAttribute(e,t){throw new Error("Error: Should not be called. Underlying _reader should be used instead")}_readAttributes(){throw new Error("Error: Should not be called. Underlying _reader should be used instead")}readArcadeFeature(){return this._reader.readArcadeFeature()}geometry(){return this._reader.geometry()}field(e){return this.readAttribute(e,!0)}hasField(e){return this._reader.hasField(e)}setField(e,t){return this._reader.setField(e,t)}keys(){return this._reader.keys()}castToText(e=!1){return this._reader.castToText(e)}},Q=class{size(){return this.reader.getSize()}get fields(){return this.reader.fields}invalidate(){this._geohashIndex=null,this._geohashIndexHash=null,this._spatialIndex=null,this._gridIndex=null,this._gridIndexHash=null}queryFeaturesInBounds(e){const t=this._getSpatialIndex().search(e);return dr.from(this.reader,t)}getGeohashIndex(e){const t=JSON.stringify(e);return t!==this._geohashIndexHash&&(this._geohashIndexHash=t,this._geohashIndex=new cr(e),this._geohashIndex.insert(this.reader,this.isTiled)),this._geohashIndex}getGridIndex(e){const t=JSON.stringify(e);return t!==this._gridIndexHash&&(this._gridIndexHash=t,this._gridIndex=new ir(e),this._gridIndex.insert(this.reader,this.isTiled)),this._gridIndex}_getSpatialIndex(){return this._spatialIndex||(this._spatialIndex=ur.fromReader(this.reader)),this._spatialIndex}},Ut=class extends Q{constructor(e){super(),this.metadata=e,this.chunkId="override",this.normalizedChunkId="override",this.removed=new Set,this.overridenIds=new Set,this._features=[]}get reader(){return M.fromOptimizedFeatures(this._features,this.metadata)}get queryInfo(){return{}}get first(){return!1}get end(){return!1}get isTiled(){return!1}applyOverrides(e){super.invalidate();const{reader:t,removed:s}=e,r=[],i=new Set,n=t.getCursor(),a=new Set(s);for(this.overridenIds.clear();n.next();){const o=n.readOptimizedFeatureWorldSpace(),u=o.objectId;r.push(o),i.add(u),this.overridenIds.add(u),this.removed.delete(u)}for(const o of this._features){const u=o.objectId;a.has(u)||i.has(u)||(r.push(o),this.overridenIds.add(u))}this._features=r;for(const o of i.values())this.removed.delete(o);for(const o of s)this.removed.add(o),this.overridenIds.add(o)}getTileReader(e){if(!this._features.length)return null;const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}},lr=class extends Ee{},_r=class extends $t{constructor(e,t,s){super(e,t),this._timeZone=s,this.handledChunks=new Set,this.handledChunksForIdCreation=new Set,this.handledChunksForAttributeData=new Set,this._streamLayerDeferredObjectIdsToRemove=[]}destroy(){super.destroy();for(const e of this._source.chunks())this._cleanupChunkIds(e)}invalidateAttributeData(){this.handledChunksForAttributeData.clear()}onSubscribe(e){super.onSubscribe(e),this._evalOptions=e.tile.createArcadeEvaluationOptions(this._timeZone)}createState(e){return new lr(e)}get aggregateQueryEngine(){return null}displayMap(e,t,s){const r=new Map(e.map(n=>[t(n),n])),i=[];for(const n of this._source.chunks()){const a=n.reader.getCursor();for(;a.next();){const o=a.getObjectId(),u=a.getDisplayId(),d=r.get(o);if(d!=null){const c=s(u,d,o);i.push(c),r.delete(o)}}}return i}getDisplayFeatures(e){const t=new Set(e),s=new Set,r=[];for(const i of this._source.chunks()){const n=i.reader.getCursor();for(;n.next();){const a=n.getObjectId(),o=n.getDisplayId();t.has(o)&&!s.has(a)&&(r.push({...n.readLegacyFeatureWorldSpace(),displayId:o}),s.add(a))}}return{features:r,aggregates:[]}}async*applyOverride(e){const t=[],s=e.reader.getCursor();for(;s.next();){const a=s.getObjectId();t.push(a);const o=this._attributeStore.createDisplayIdForObjectId(a);s.setDisplayId(o),this._attributeStore.setAttributeData(o,s,this._evalOptions)}const r=this.getDisplayIds(t),i=this.getDisplayIds(e.removed),n=new Ut(this._source.metadata);n.applyOverrides(e),this.handledChunks.add(n.chunkId),this.handledChunksForAttributeData.add(n.chunkId),this.handledChunksForIdCreation.add(n.chunkId);for(const a of this._sendStates.values())a.handledChunks.add(n.chunkId),yield new fe(a.subscription,null,r,!1,n.queryInfo);for(const a of this._sendStates.values()){const o=n.getTileReader(a.subscription.tile);yield new fe(a.subscription,o,i,!1,n.queryInfo)}for(const a of e.removed)this._attributeStore.releaseDisplayIdForObjectId(a)}async*updateChunks(){if(this._source.chunks().length){await this._updateAttributeData();for(const e of this._sendStates.values())yield*this._update(e)}}removeChunks(e){for(const t of e)this.handledChunks.delete(t.chunkId),this.handledChunksForAttributeData.delete(t.chunkId),this._cleanupChunkIds(t)}afterUpdateChunks(){for(const e of this._streamLayerDeferredObjectIdsToRemove)this._attributeStore.releaseDisplayIdForObjectId(e);this._streamLayerDeferredObjectIdsToRemove=[]}_cleanupChunkIds(e){if(this.handledChunksForIdCreation.has(e.chunkId)){const t=e.reader.getCursor();for(;t.next();){const s=t.getObjectId();this._source.isStream?this._streamLayerDeferredObjectIdsToRemove.push(s):this._attributeStore.releaseDisplayIdForObjectId(s)}this.handledChunksForIdCreation.delete(e.chunkId)}}async _updateAttributeData(){for(const e of this._source.chunks()){const{chunkId:t,reader:s}=e;if(!this.handledChunksForIdCreation.has(t)){this.handledChunksForIdCreation.add(t);const r=s.getCursor();for(;r.next();){const i=this._attributeStore.createDisplayIdForObjectId(r.getObjectId());r.setDisplayId(i)}}}for(const e of this._source.chunks())if(!this.handledChunksForAttributeData.has(e.chunkId)){this.handledChunksForAttributeData.add(e.chunkId);const t=e.reader.getCursor();for(;t.next();){const s=t.getDisplayId();this._attributeStore.setAttributeData(s,t,this._evalOptions)}}}*_update(e){const{subscription:t,handledChunks:s}=e;for(const r of this._source.chunks()){const{chunkId:i}=r;if(s.has(i))continue;s.add(i);const n=r.getTileReader(t.tile);n&&(yield new Pe(e.subscription,n,!1,r.end,r.queryInfo))}}},pr=class{constructor(e,t){this._connection=e,this._source=t,this._version=1,this._proxy=new xs({fetch:(s,r)=>this._connection.layerView.fetch(s,r),fetchDictionary:(s,r)=>this._connection.layerView.fetchDictionary(s,r)}),this._attributeStore=new Fs({isLocal:!1,update:s=>ht(this._connection.container.updateAttributeView(s))})}destroy(){this._proxy.destory(),this._strategy?.destroy(),this._attributeStore.destroy()}get aggregateQueryEngine(){return this._strategy?.aggregateQueryEngine}getDisplayFeatures(e){return this._strategy?this._strategy.getDisplayFeatures(e):{features:[],aggregates:[]}}getFeatureObjectIdsForAggregate(e){return this._strategy?this._strategy.getFeatureObjectIdsForAggregate(e):[]}onSubscribe(e){this._strategy?.onSubscribe(e)}onUnsubscribe(e){this._strategy?.onUnsubscribe(e)}async update(e,t,s,r,i){const n=e.processor,a=ct(this._schema,n);if(!a&&!r)return;y("esri-2d-update-debug")&&console.debug(`Version[${this._version}] SymbolProcessor.update`,{changes:a,schema:n}),this._schema=n;const o=B.fromJSON(e.source.mutable.dataFilter.outSpatialReference),u=new Me({fields:this._source.metadata.fieldsIndex,spatialReference:o});return await this._attributeStore.update(n.storage,u,this._source.metadata,o,t),this._strategy?.invalidateAttributeData(),r||ue(a,"mesh")?(ue(a,"mesh.strategy")&&await this._updateStrategy(n.mesh.strategy,o,i,n.mesh.timeZone),this._updateSortKey(u,"sortKey"in n.mesh?n.mesh.sortKey:null),(ue(a,"mesh.factory")||n.mesh.factory.symbology.type==="dictionary")&&(this._factory=await Vs.create(u,this._proxy,n.mesh.factory,s)),this._invalidate(),this._version=t,this._connection.container.updateRenderState(this._version)):void 0}async applyOverride(e){if(!this._strategy)return;const t=this._strategy.applyOverride(e);for await(const s of t)try{await this._process(s)}catch{}this._source.applyOverride(e)}async updateChunks(){await this._doUpdateChunks(),this._strategy?.afterUpdateChunks()}async removeChunks(e){this._strategy?.removeChunks(e),this._attributeStore.incrementDisplayIdGeneration()}updateHighlight({highlights:e}){if(!this._strategy)return void this._attributeStore.setHighlight(e.map(({objectId:s,highlightFlags:r})=>({objectId:s,highlightFlags:r,displayId:-1})),e);const t=this._strategy.displayMap(e,({objectId:s})=>s,(s,{highlightFlags:r},i)=>({objectId:i,displayId:s,highlightFlags:r}));this._attributeStore.setHighlight(t,e)}async _doUpdateChunks(){if(!this._strategy)return;const e=this._strategy.updateChunks(),t=[],s=new Map;for await(const r of e){let i=s.get(r.id);i==null&&(i=new Ys({concurrency:16,process:a=>this._process(a)}),s.set(r.id,i));const n=i.push(r).catch(a=>ke(a));t.push(n)}try{await Promise.all(t)}catch{}y("esri-2d-update-debug")&&console.log("SendUpdates"),await this._attributeStore.sendUpdates(),y("esri-2d-update-debug")&&console.log("SendUpdates.await")}async _updateStrategy(e,t,s,r){switch(this._strategy?.destroy(),e.type){case"feature":this._strategy=new _r(this._source,this._attributeStore,r);break;case"binning":this._strategy=await Qs.create(e,t,this._source,this._attributeStore,r);break;case"cluster":this._strategy=await De.create(this._connection,e,t,this._source,this._attributeStore,r)}for(const i of s)this._strategy.onSubscribe(i)}async _updateSortKey(e,t){if(this._sortInfo=dt(this._sortInfo?.computed),t!=null){const s=t.byRenderer?null:await e.createComputedField(t);this._sortInfo={...t,computed:s}}}_invalidate(){this._strategy&&this._strategy.invalidate()}async _process(e){const t=e.subscription;if(y("esri-2d-update-debug")){const o=t.tile;console.debug(`Version[${this._version}] Tile[${o.key.id}, end=${e.end}] Processor._process`)}await this._fetchResources(e),Y(t.signal);const s=await this._write(e,t.tile.createArcadeEvaluationOptions(this._schema.mesh.timeZone)),r=t.tile.tileInfoView.tileInfo.isWrappable,{message:i,transferList:n}=s.serialize(r),a=e.createMessage(i,this._version,this._attributeStore.epoch);if(Y(t.signal),this._connection.container.onMessage(a,{signal:t.signal,transferList:n}),this._attributeStore.sendUpdates(),y("esri-2d-update-debug")){const o=t.tile;console.debug(`Version[${this._version}] Tile[${o.key.id}, end=${e.end}] Processor._process.await`)}}async _fetchResources(e){await this._fetchMatcherResources(e),await this._fetchWriterResources(e)}async _fetchMatcherResources(e){if(e.reader)return this._factory.enqueueMatcherRequests(this._proxy,e.reader)}async _fetchWriterResources(e){if(!e.reader)return;const t=e.reader.getCursor(),s=e.subscription.tile.createArcadeEvaluationOptions(this._schema.mesh.timeZone);for(;t.next();)this._factory.enqueueWriterRequests(this._proxy,t,s);await this._proxy.fetchEnqueuedResources()}async _write(e,t){const s=e.subscription.tile,r=e.reader?.getCursor(),i=r?.getSize()??0,n=s.tileInfoView.tileInfo.isWrappable,a=new js(s.key,this._strategy.enablePixelBuffering,n,i);if(!r)return a;const o=s.createArcadeEvaluationOptions(this._schema.mesh.timeZone);for(;r.next();){const u=this._getSortKeyValue(r,t);a.entityStart(r.getDisplayId(),u),this._factory.write(a,this._proxy,r,o,s.level),a.entityEnd()}return a}_getSortKeyValue(e,t){if(!this._sortInfo)return 0;const{computed:s,order:r,byRenderer:i}=this._sortInfo,n=i?this._factory.getSortKey(e,t):s?.read(e,t);return n==null||isNaN(n)?0:n*(r==="asc"?-1:1)}},gr=class Gt{static from(e){let t=0,s=0,r=0;return e.forEach(i=>{const n=i._readGeometry();n&&(s+=n.isPoint?1:n.lengths.reduce((a,o)=>a+o,0),r+=n.isPoint?1:n.lengths.length,t+=1)}),new Gt(t,s,r)}constructor(e,t,s){this.featureCount=e,this.vertexCount=t,this.ringCount=s}toJSON(){return{featureCount:this.featureCount,ringCount:this.featureCount,vertexCount:this.featureCount}}};const de=4;function fr(h,e){const{service:t}=h,s=t.orderByFields??e.objectIdField+" ASC",r=t.source,i={returnCentroid:!(r!==null&&typeof r=="object"&&"path"in r&&as(r.path))&&e.geometryType==="esriGeometryPolygon",returnGeometry:!0,timeReferenceUnknownClient:e.timeReferenceUnknownClient??void 0,outSpatialReference:B.fromJSON(h.mutable.dataFilter.outSpatialReference),orderByFields:[s],where:h.mutable.dataFilter.definitionExpression??"1=1",outFields:h.mutable.availableFields};if(h.type==="feature"){const{gdbVersion:n,historicMoment:a,timeExtent:o}=h.mutable.dataFilter;return{...i,gdbVersion:n,historicMoment:a?new Date(a):null,timeExtent:o?os.fromJSON(o):null,outFields:h.mutable.availableFields}}return i}let yr=class Wt{static fromSchema(e,t){return new Wt(fr(e,t),e.mutable.dataFilter.customParameters,t.geometryType,e.service.queryMetadata.capabilities)}constructor(e,t,s,r){this._queryParams=e,this._customParameters=t,this._geometryType=s,this._capabilities=r}get pageSize(){if(this._capabilities==null)throw new Error("InternalError: Service does not support paged queries");const{query:e}=this._capabilities,t=e.supportsMaxRecordCountFactor?de:null,s=(e.maxRecordCount??8e3)*(t??1);return Math.min(8e3,s)}updateFields(e){this._queryParams.outFields=e}createPatchFieldsQuery(e,t){const s=e.clone();if(this._queryParams.outFields[0]==="*"){if((s.outFields??[])[0]==="*")return null;s.outFields=this._queryParams.outFields}else{const r=new Set(this._queryParams.outFields),i=[];for(const n of r)t.hasField(n)||i.push(n);if(i.length===0)return null;s.outFields=i}return s.returnGeometry=!1,s.returnCentroid=!1,s.quantizationParameters=null,s.cacheHint=!0,{inner:s,customParameters:this._customParameters}}createQuery(e={}){if(!this._queryParams)throw new Error("InternalError: queryInfo should be defined");return{inner:new lt({...this._queryParams,...e}),customParameters:this._customParameters}}createTileQuery(e,t){if(this._capabilities==null)throw new Error("InternalError: Service does not support tile queries");const s=this.createQuery(t),r=s.inner;return r.quantizationParameters=t.quantizationParameters??e.getQuantizationParameters(),r.resultType="tile",r.geometry=e.extent,this._capabilities.query.supportsQuantization?this._geometryType==="esriGeometryPolyline"&&(r.maxAllowableOffset=e.resolution*y("feature-polyline-generalization-factor")):this._geometryType!=="esriGeometryPolyline"&&this._geometryType!=="esriGeometryPolygon"||(r.maxAllowableOffset=e.resolution,this._geometryType==="esriGeometryPolyline"&&(r.maxAllowableOffset*=y("feature-polyline-generalization-factor"))),r.defaultSpatialReferenceEnabled=this._capabilities.query.supportsDefaultSpatialReference,r.compactGeometryEnabled=this._capabilities.query.supportsCompactGeometry,this._capabilities.query.supportsMaxRecordCountFactor&&(r.maxRecordCountFactor=de),s}createPagedTileQuery(e,t){const s=this.pageSize;return this.createTileQuery(e,{start:s*t,num:s,returnExceededLimitFeatures:!0})}createPagedQuery(e){const t=this.pageSize;return this.createQuery({start:t*e,num:t,returnExceededLimitFeatures:!0,maxRecordCountFactor:de})}};const mr=2500;let ee=class extends pt{constructor(e){super(),this._connection=e,this._enabledEventTypes=new Set,this._updateInfo={websocket:0,client:0},this._lastTime=performance.now(),this.addHandles([pe(()=>this._strategy?.connectionStatus??"disconnected",t=>{this._layerView.setProperty({propertyName:"pipelineConnectionStatus",value:t})},{initial:!0}),pe(()=>this._strategy?.errorString||null,t=>this._layerView.setProperty({propertyName:"pipelineErrorString",value:t}),{initial:!0})])}destroy(){this._strategy=null,this.removeAllHandles()}get _layerView(){return this._connection.layerView}set strategy(e){this._strategy==null&&this._resetUpdateInfo(performance.now());const t="event-handles";this.removeHandles(t),e!=null&&this.addHandles([e.events.on("data-received",s=>this._onFeature(s)),e.events.on("message-received",s=>this._onWebSocketMessage(s)),e.events.on("features-updated",s=>this._onUpdate(s)),e.events.on("tick",()=>this._onTick())],t),this._strategy=e}updateCustomParameters(e){e!=null&&this._strategy?.updateCustomParameters(e)}sendMessageToSocket(e){this._strategy?.sendMessageToSocket(e)}sendMessageToClient(e){this._strategy?.sendMessageToClient(e)}enableEvent(e,t){t?this._enabledEventTypes.add(e):this._enabledEventTypes.delete(e)}disconnect(){this._strategy?.disconnect()}connect(){this._strategy?.connect()}clear(){this._strategy?.clear()}_onWebSocketMessage(e){this._enabledEventTypes.has("message-received")&&this._layerView.emitEvent({name:"message-received",event:e})}_onFeature(e){this._updateInfo.websocket++,this._enabledEventTypes.has("data-received")&&this._layerView.emitEvent({name:"data-received",event:{attributes:e.attributes,centroid:e.centroid,geometry:e.geometry}})}_onUpdate(e){this._updateInfo.client+=e}_onTick(){const e=performance.now(),t=e-this._lastTime;if(t>mr){const s=Math.round(this._updateInfo.client/(t/1e3)),r=Math.round(this._updateInfo.websocket/(t/1e3));this._resetUpdateInfo(e),this._layerView.emitEvent({name:"update-rate",event:{client:s,websocket:r}})}}_resetUpdateInfo(e){this._lastTime=e,this._updateInfo.client=0,this._updateInfo.websocket=0}};U([J()],ee.prototype,"_strategy",void 0),ee=U([_t("esri.views.2d.layers.features.sources.StreamMessenger")],ee);let Nt=class{constructor(e){this._store=e,this._controller=new AbortController}destroy(){this._controller.abort()}get _options(){return{signal:this._controller.signal}}async queryOverride(e){throw new Error("InternalError: LoadStrategy does not support fetching")}};const le=268435455;let br=class{constructor(){this.hasFeatures=!1,this.exceededTransferLimit=!1,this.fieldCount=0,this.featureCount=0,this.objectIdFieldIndex=0,this.vertexCount=0,this.offsets={attributes:new Array,geometry:new Array},this.centroid=new Array}};function Ir(h,e,t=!1){const u=h.asUnsafe(),d=u.pos(),c=new br;let l=0,g=0;const _=1,m=2,p=4,I=3;let f=null,F=null,b=null,S=!1;const w=[];for(;u.next();)switch(u.tag()){case 1:f=u.getString();break;case 3:F=u.getString();break;case 12:b=u.processMessage(hs);break;case 9:if(c.exceededTransferLimit=u.getBool(),c.exceededTransferLimit){c.offsets.geometry=t?new Float64Array(8e3):new Int32Array(8e3),c.centroid=t?new Float64Array(16e3):new Int32Array(16e3);for(let k=0;k<c.centroid.length;k++)c.centroid[k]=le}break;case 13:{const k=u.processMessage(us);k.index=l++,w.push(k);break}case 15:{const k=u.getLength(),A=u.pos()+k;if(!c.exceededTransferLimit){const C=c.offsets.geometry,q=c.centroid;C.push(0),q.push(le),q.push(le)}!S&&c.exceededTransferLimit&&(S=!0,c.offsets.attributes=t?new Float64Array(8e3*l):new Uint32Array(8e3*l));let $=g*l;for(;u.pos()<A&&u.next();)switch(u.tag()){case _:{S?c.offsets.attributes[$++]=u.pos():c.offsets.attributes.push(u.pos());const C=u.getLength();u.skipLen(C);break}case m:if(e){const C=u.getLength(),q=u.pos()+C;for(;u.pos()<q&&u.next();)switch(u.tag()){case I:{u.getUInt32();const O=u.getSInt64(),E=u.getSInt64();c.centroid[2*g]=O,c.centroid[2*g+1]=E;break}default:u.skip()}}else{c.offsets.geometry[g]=u.pos();const C=u.getLength();c.vertexCount+=C,u.skipLen(C)}break;case p:{const C=u.getLength(),q=u.pos()+C;for(;u.pos()<q&&u.next();)switch(u.tag()){case I:{u.getUInt32();const O=u.getSInt64(),E=u.getSInt64();c.centroid[2*g]=O,c.centroid[2*g+1]=E;break}default:u.skip()}break}default:u.skip()}g++,c.hasFeatures=!0;break}default:u.skip()}const v=f||F;if(!v)throw new D("FeatureSet has no objectId or globalId field name");return c.fields=new ot(w),c.featureCount=g,c.fieldCount=l,c.objectIdFieldIndex=c.fields.get(v)?.index,c.transform=b,c.displayIds=new Uint32Array(c.featureCount),c.groupIds=new Uint16Array(c.featureCount),u.move(d),c}const Sr=!0,Je=268435455,Ke=128,et=128e3,L={small:{delta:new Int32Array(Ke),decoded:new Int32Array(Ke)},large:{delta:new Int32Array(et),decoded:new Int32Array(et)}};function tt(h){return h<=L.small.delta.length?L.small:(h<=L.large.delta.length||(L.large.delta=new Int32Array(Math.round(1.25*h)),L.large.decoded=new Int32Array(Math.round(1.25*h))),L.large)}function wr(h){try{const t=new ds(new Uint8Array(h),new DataView(h));for(;t.next();){if(t.tag()===2)return vr(t.getMessage());t.skip()}}catch(e){const t=new D("query:parsing-pbf","Error while parsing FeatureSet PBF payload",{error:e});ls.getLogger("esri.view.2d.layers.features.support.FeatureSetReaderPBF").error(t)}return null}function vr(h){for(;h.next();){if(h.tag()===1)return h.getMessage();h.skip()}return null}function xr(h){const d=h.getLength(),c=h.pos()+d;for(;h.pos()<c&&h.next();)switch(h.tag()){case 1:return h.getString();case 2:return h.getFloat();case 3:return h.getDouble();case 4:return h.getSInt32();case 5:return h.getUInt32();case 6:return h.getInt64();case 7:return h.getUInt64();case 8:return h.getSInt64();case 9:return h.getBool();default:return h.skip(),null}return null}function Fr(h,e,t,s,r,i){return .5*Math.abs(h*s+t*i+r*e-h*i-t*e-r*s)}function _e(h,e,t,s){return h*s-t*e===0&&h*t+e*s>0}let kr=class we extends Te{static fromBuffer(e,t,s=!1){const r=t.geometryType,i=wr(e),n=Ir(i,r==="esriGeometryPoint",s);return new we(i,n,t)}constructor(e,t,s){super(s),this._hasNext=!1,this._isPoints=!1,this._featureIndex=-1,this._featureOffset=0,this._cache={area:0,unquantGeometry:void 0,geometry:void 0,centroid:void 0,legacyFeature:void 0,optFeature:void 0},this._parseCaches=new Array,this._geometryType=s.geometryType,this._reader=e,this._header=t,this._hasNext=t.hasFeatures,this._isPoints=s.geometryType==="esriGeometryPoint"}get _size(){return this._header.featureCount}get fields(){return this._header.fields}get geometryType(){return this._geometryType}get hasZ(){return!1}get hasM(){return!1}get hasFeatures(){return this._header.hasFeatures}get hasNext(){return this._hasNext}get exceededTransferLimit(){return this._header.exceededTransferLimit}getSize(){return this._size}getInTransform(){return this._header.transform}getCursor(){return this.copy()}getIndex(){return this._featureIndex}setIndex(e){this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0,this._featureIndex=e}getAttributeHash(){let e="";for(const t of this._header.fields.fields)e+=this._readAttributeAtIndex(t.index)+".";return e}getObjectId(){return this._readAttributeAtIndex(this._header.objectIdFieldIndex)}getDisplayId(){return this._header.displayIds[this._featureIndex]}setDisplayId(e){this._header.displayIds[this._featureIndex]=e}readGeometryArea(){return this._cache.area||this._readGeometry(!0),this._cache.area}copy(){const e=this._reader.clone(),t=new we(e,this._header,this.metadata);return this.copyInto(t),t}next(){for(this._cache.area=0,this._cache.unquantGeometry=void 0,this._cache.geometry=void 0,this._cache.centroid=void 0,this._cache.legacyFeature=void 0,this._cache.optFeature=void 0;++this._featureIndex<this._size&&!this._getExists(););return this._featureIndex<this._size}_readX(){return this._header.centroid[2*this._featureIndex]}_readY(){return this._header.centroid[2*this._featureIndex+1]}_readServerCentroid(){const e=this._header.centroid[2*this._featureIndex],t=this._header.centroid[2*this._featureIndex+1];return e===Je?null:new T([],[e,t])}_readGeometry(e=!1){if(this._cache.geometry===void 0){let t=null;if(this._isPoints){if(this._header.centroid[2*this._featureIndex]===Je)return null;const s=this._header.centroid[2*this._featureIndex],r=this._header.centroid[2*this._featureIndex+1];t=new T([],[s,r])}else{const s=this._header.offsets.geometry[this._featureIndex],r=this._reader;if(s===0)return null;r.move(s);try{t=e?this._parseGeometryForDisplay(r):this._parseGeometry(r)}catch(i){return console.error("Failed to parse geometry!",i),null}}return t?.coords.length===0&&(t=null),this._cache.geometry=t,t}return this._cache.geometry}_readAttribute(e,t){const s=this._header.fields.get(e);if(s==null)return;let r=this._readAttributeAtIndex(s.index);this.fields.get(e)?.type==="esriFieldTypeTimestampOffset"&&(r=this.parseTimestampOffset(r));const i=this._header.fields.isDateField(s.name);return t?r==null?r:i?new Date(r):r:r}_readAttributes(){const e={};for(const t of this._header.fields.fields)e[t.name]=this._readAttributeAtIndex(t.index);return e}copyInto(e){super.copyInto(e),e._featureIndex=this._featureIndex,e._featureOffset=this._featureOffset,e._hasNext=this._hasNext,e._parseCaches=this._parseCaches}_readAttributeAtIndex(e){let t=this._parseCaches[e];if(t||(t=new ks(this.getSize()),this._parseCaches[e]=t),t.has(this._featureIndex))return t.get(this._featureIndex);const s=this._header.offsets.attributes[this._featureIndex*this._header.fieldCount+e],r=this._reader;r.move(s);const i=xr(r);return t.set(this._featureIndex,i),i}_readGeometryDeltaDecoded(e=!1){if(this._cache.unquantGeometry===void 0){const t=this._readGeometry(e);if(!t)return this._cache.unquantGeometry=void 0,null;if(!this.getInTransform())return this._cache.unquantGeometry=t,t;const s=tt(t.coords.length).decoded,r=t.clone(s),i=r.coords;let n=0;for(const a of r.lengths){for(let o=1;o<a;o++){const u=2*(n+o),d=2*(n+o-1);i[u]+=i[d],i[u+1]+=i[d+1]}n+=a}return this._cache.unquantGeometry=r,r}return this._cache.unquantGeometry}_parseGeometry(e){const r=e.asUnsafe(),i=r.getLength(),n=r.pos()+i,a=[],o=[];for(;r.pos()<n&&r.next();)switch(r.tag()){case 2:{const u=r.getUInt32(),d=r.pos()+u;for(;r.pos()<d;)o.push(r.getUInt32());break}case 3:{const u=r.getUInt32(),d=r.pos()+u;for(a.push(r.getSInt64()),a.push(r.getSInt64()),this.hasZ&&r.getSInt64(),this.hasM&&r.getSInt64();r.pos()<d;)a.push(r.getSInt64()),a.push(r.getSInt64()),this.hasZ&&r.getSInt64(),this.hasM&&r.getSInt64();break}default:r.skip()}return new T(o,a)}_parseGeometryForDisplay(e){const r=e.asUnsafe(),i=r.getLength(),n=r.pos()+i,a=[],o=[];let u=0,d=0,c=null,l=0;const g=this.geometryType==="esriGeometryPolygon";for(;r.pos()<n&&r.next();)switch(r.tag()){case 2:{const _=r.getUInt32(),m=r.pos()+_;for(;r.pos()<m;){const p=r.getUInt32();a.push(p),u+=p}c=tt(2*u).delta;break}case 3:{r.getUInt32();const _=2+(this.hasZ?1:0)+(this.hasM?1:0);cs(c);for(const m of a)if(d+_*m>c.length)for(let p=0;p<m;p++)r.getSInt32(),r.getSInt32(),this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32();else if(g&&Sr){const p=this.getAreaSimplificationThreshold(m,this._header.vertexCount);let I=2,f=1;const F=!1;let b=r.getSInt32(),S=r.getSInt32();c[d++]=b,c[d++]=S,this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32();let w=r.getSInt32(),v=r.getSInt32();for(this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32();I<m;){let k=r.getSInt32(),A=r.getSInt32();this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32();const $=b+w,C=S+v;Fr(b,S,$,C,$+k,C+A)>=p?(l+=-.5*($-b)*(C+S),f>1&&_e(c[d-2],c[d-1],w,v)?(c[d-2]+=w,c[d-1]+=v):(c[d++]=w,c[d++]=v,f++),b=$,S=C):(k+=w,A+=v),w=k,v=A,I++}f<3||F?d-=2*f:(l+=-.5*(b+w-b)*(S+v+S),_e(c[d-2],c[d-1],w,v)?(c[d-2]+=w,c[d-1]+=v,o.push(f)):(c[d++]=w,c[d++]=v,o.push(++f)))}else{let p=0,I=r.getSInt32(),f=r.getSInt32();this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32(),c[d++]=I,c[d++]=f,p+=1;for(let F=1;F<m;F++){const b=r.getSInt32(),S=r.getSInt32(),w=I+b,v=f+S;l+=-.5*(w-I)*(v+f),this.hasZ&&r.getSInt32(),this.hasM&&r.getSInt32(),F>2&&_e(c[d-2],c[d-1],b,S)?(c[d-2]+=b,c[d-1]+=S):(c[d++]=b,c[d++]=S,p+=1),I=w,f=v}o.push(p)}break}default:r.skip()}return this._cache.area=l,o.length?new T(o,c):null}};class ae{constructor(e,t){this.service=e,this._metadata=t}destroy(){}}function Cr(h,e){switch(h.type){case"memory":return new Mr(h,e);case"ogc":return new Ar(h,e);case"feature-service":return h.queryMetadata.capabilities.query.supportsFormatPBF&&y("featurelayer-pbf")?new $r(h,e):new qr(h,e)}}async function Tr(h){const e=new ps;return await e.open(h,{}),e}class Mr extends ae{constructor(e,t){super(e,t),this._portsOpen=Tr(e.source).then(s=>this.client=s)}destroy(){this.client.close(),this.client=null}async executeQuery(e,t){await this._portsOpen;const s=await this.client.invoke("queryFeatures",e.toJSON(),t);return M.fromFeatureSet(s,this._metadata)}}class $r extends ae{async executeQuery(e,t){const{data:s}=await _s(this.service.source,e,t),r=!e.quantizationParameters;return kr.fromBuffer(s,this._metadata,r)}}class qr extends ae{async executeQuery(e,t){const{source:s,queryMetadata:r}=this.service,i=r.capabilities;if(e.quantizationParameters!=null&&!i.query.supportsQuantization){const a=e.clone(),o=gt(a.quantizationParameters);a.quantizationParameters=null;const{data:u}=await je(s,a,this._metadata.spatialReference,t),d=at(u,this._metadata.objectIdField);return ft(o,d),M.fromOptimizedFeatureSet(d,this._metadata)}const{data:n}=await je(s,e,this._metadata.spatialReference,t);return this._metadata.geometryType==="esriGeometryPoint"&&(n.features=n.features?.filter(a=>{if(a.geometry!=null){const o=a.geometry;return Number.isFinite(o.x)&&Number.isFinite(o.y)}return!0})),M.fromFeatureSet(n,this._metadata)}}let Ar=class extends ae{async executeQuery(e,t){const{capabilities:s}=this.service.queryMetadata;if(e.quantizationParameters&&!s.query.supportsQuantization){const i=e.clone(),n=gt(i.quantizationParameters);i.quantizationParameters=null;const a=await Be(this.service.source,e,t);return ft(n,a),M.fromOptimizedFeatureSet(a,this._metadata)}const r=await Be(this.service.source,e,t);return M.fromOptimizedFeatureSet(r,this._metadata)}},Bt=class extends Nt{constructor(e,t,s,r,i){super(s),this._serviceInfo=e,this._queryInfo=t,this._metadata=r,this._eventLog=i,this._queue=new nt({concurrency:16,process:async n=>{const a={signal:n.options?.signal,query:n.query.customParameters};return this._adapter.executeQuery(n.query.inner,a)}}),this._adapter=Cr(e,r)}async updateFields(e){this._queryInfo.updateFields(e);const t=Array.from(this._store.chunks()).map(async r=>{const i=lt.fromJSON(r.queryInfo.queryJSON);if(i)try{return await this._tryUpdateFields(r.reader,i),null}catch(n){return n}}),s=(await Promise.all(t)).filter(r=>r);if(s.length)throw new D("featurelayer-query","Encountered errors when downloading fields",{errors:s})}async queryOverride({edits:e}){const t=[],s=[];for(const n of e.removed)n.objectId!=null&&n.objectId!==-1?t.push(n.objectId):s.push(n.globalId);s.length&&t.push(...this._mapGlobalIdsToObjectIds(s));const r=e.addOrModified.map(({objectId:n})=>n);let i;if(r.length){const n=this._queryInfo.createQuery({objectIds:r});i=await this._fetch(n)}else i=M.empty(this._metadata);return{reader:i,removed:t}}_mapGlobalIdsToObjectIds(e){const t=new Set(e),s=this._metadata.globalIdField;if(s==null)throw new Error("InternalError: Recieved an edit with globalIds, but not supported by the service");const r=[];return this._store.forEachUnsafe(i=>{const n=i.readAttribute(s);t.has(n)&&r.push(i.getObjectId())}),r}async _fetch(e,t){const s=await this._enqueue(e,t);return await this._tryUpdateFields(s,e.inner),s}async _tryUpdateFields(e,t){const s=this._queryInfo.createPatchFieldsQuery(t,e);if(!s)return;const r=await this._enqueue(s,this._options);e.joinAttributes(r)}async _enqueue(e,t){return this._eventLog.onEvent({type:"fetchStart"}),this._queue.push({query:e,options:t}).finally(()=>{this._eventLog.onEvent({type:"fetchEnd",done:this._queue.length===0})})}},Vt=class extends Bt{constructor(){super(...arguments),this._chunksById=new Map}unload(e){this._removeChunks(e.tile)}_addChunk(e){const t=e.tile.id;this._chunksById.has(t)||this._chunksById.set(t,[]);const s=e.size();(s||e.first||e.end)&&(y("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] ATileLoadStrategy.addChunk [count=${s}]`),this._chunksById.get(t).push(e),this._store.insert(e))}_removeChunks(e){const t=this._chunksById.get(e.key.id)??[];for(const s of t)y("esri-2d-update-debug")&&console.debug(`Tile[${e.key.id}] Chunk[${s.chunkId}] ATileLoadStrategy.removeChunk`),this._store.remove(s);this._chunksById.delete(e.key.id)}};class st extends Q{constructor(e,t,s,r,i,n){super(),this._reader=e,this._queryJSON=t,this._tile=s,this._sourceTile=r,this._sourceTileDepth=i,this._end=n,this.chunkId=`${this._tile.key.id}.${this._sourceTile?.key.id}${this._end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._sourceTile?.key.normalizedId}${this._end?"e":""}`}get queryInfo(){return{type:"drill-down-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,sourceTileDepth:this._sourceTileDepth,sourceTileId:this._sourceTile?.key.id,size:this.size(),end:this.end}}get first(){return this._sourceTileDepth===0}get reader(){return this._reader}get end(){return this._end}get tile(){return this._tile}get isTiled(){return!0}getTileReader(e){return this._tile.key.id===e.key.id?this.reader:null}}let Rr=class{constructor(e,t){this.subscription=e,this._tileIdToResult=new Map,this._controller=new AbortController,te(e.options,()=>this._controller.abort()),te(t,()=>this._controller.abort())}get(e){return this._tileIdToResult.get(e)}set(e,t){this._tileIdToResult.set(e,t)}get options(){return{signal:this._controller.signal}}},Or=class extends Vt{constructor(){super(...arguments),this._loadStates=new Map}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(e){this._loadStates.has(e.key.id)||this._loadStates.set(e.key.id,new Rr(e,this._options));const t=this._loadStates.get(e.key.id);let s;try{for await(const i of this._fetchChunkInfos(t,e.tile,0)){const{queryJSON:n,reader:a,sourceTile:o,sourceTileDepth:u,tile:d}=i,c=new st(a,n,d,o,u,!1);Y(e.options),this._addChunk(c)}}catch(i){s=i}const r=new st(M.empty(this._metadata),null,e.tile,null,-1,!0);if(this._addChunk(r),s)throw s}unload(e){super.unload(e),this._loadStates.delete(e.key.id)}async*_fetchChunkInfos(e,t,s){let r=e.get(t.id);const i=!!r;if(r||(r=await this._fetchChunkInfo(e,t,s),e.set(t.id,r)),r.reader.exceededTransferLimit&&s<y("featurelayer-query-max-depth"))for(const n of t.createChildTiles())yield*this._fetchChunkInfos(e,n,s+1);else i||(yield r)}async _fetchChunkInfo(e,t,s){const r=e.subscription.tile.getQuantizationParameters(),i=this._queryInfo.createTileQuery(t,{returnExceededLimitFeatures:!1,quantizationParameters:r});return{reader:await this._fetch(i,e.subscription.options),queryJSON:i.inner.toJSON(),tile:e.subscription.tile,sourceTile:t,sourceTileDepth:s}}},rt=class extends Q{constructor(e,t,s,r,i){super(),this._reader=e,this._queryJSON=t,this._tile=s,this._page=r,this._end=i,this.chunkId=`${this._tile.key.id}.${this._page}${this.end?"e":""}`,this.normalizedChunkId=`${this._tile.key.normalizedId}.${this._page}${this.end?"e":""}`}get queryInfo(){return{type:"paged-tile",chunkId:this.chunkId,tileId:this._tile.key.id,queryJSON:this._queryJSON,page:this._page,size:this.size(),end:this.end}}get reader(){return this._reader}get first(){return this._page===0}get end(){return this._end}get page(){return this._page}get tile(){return this._tile}get isTiled(){return!0}getTileReader(e){return this._tile.key.id===e.key.id?this.reader:null}},Er=class{constructor(e,t){this.subscription=e,this._pages=new Set,this._controller=new AbortController,this._done=!1,te(e.options,()=>this._controller.abort()),te(t,()=>this._controller.abort())}resetAbortController(){this._controller=new AbortController}get pageStart(){let e=-1;for(const t of this._pages.values())e=Math.max(e,t);return e+1}get done(){return this._done}get options(){return{signal:this._controller.signal}}add(e,t){this._pages.add(e),this._done=this._done||t}},Pr=class extends Vt{constructor(){super(...arguments),this._loadStates=new Map}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}async load(e){this._loadStates.has(e.key.id)||this._loadStates.set(e.key.id,new Er(e,this._options));const t=this._loadStates.get(e.key.id);let s;t.resetAbortController();try{await this._fetchPages(t)}catch(i){s=i}const r=new rt(M.empty(this._metadata),null,e.tile,-1,!0);if(gs(t.options)||this._addChunk(r),s)throw s}unload(e){super.unload(e),this._loadStates.delete(e.key.id)}async _fetchPages(e){let r=0,i=e.pageStart,n=1;for(;r<20&&!e.done;){const a=[];for(let u=0;u<n;u++)a.push(this._fetchChunk(e,i++));const o=await Promise.all(a);for(const u of o)(u.size()!==0||u.first)&&(e.add(u.page,!u.reader.exceededTransferLimit),Y(e.options),this._addChunk(u));r++,n=Math.min(n+1,4)}}async _fetchChunk(e,t){const s=e.subscription.tile,r=this._queryInfo.createPagedTileQuery(s,t),i=await this._fetch(r,e.options);return new rt(i,r.inner.toJSON(),s,t,!1)}},it=class extends Q{constructor(e,t,s,r){super(),this._reader=e,this._queryJSON=t,this._page=s,this._end=r,this.chunkId=`${this._page}${this.end?"e":""}`,this.normalizedChunkId=this.chunkId}get reader(){return this._reader}get first(){return this._page===0}get end(){return this._end}get queryInfo(){return{type:"snapshot",chunkId:this.chunkId,queryJSON:this._queryJSON,page:this._page,size:this.size(),end:this.end}}get isTiled(){return!1}getTileReader(e){const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}};class Dr extends Bt{constructor(e,t,s,r,i,n){super(e,t,s,i,n),this._random=new yt(1e3),this._featureCount=r}get about(){return{willQueryAllFeatures:!0,willQueryFullResolutionGeometry:!0}}load(e){return this._promise==null&&(this._promise=this._downloadPages(this._featureCount)),this._promise}unload(e){}async _downloadPages(e){const t=Math.ceil(e/this._queryInfo.pageSize),s=Array.from({length:t},(a,o)=>o).sort((a,o)=>this._random.getInt()-this._random.getInt()),r=await Promise.all(s.map(a=>this._downloadPage(a))),i=new it(M.empty(this._metadata),null,-1,!0);this._store.insert(i);const n=r.filter(a=>a);if(n.length)throw new D("featurelayer-query","Encountered errors when downloading data",{errors:n})}async _downloadPage(e){try{const t=this._queryInfo.createPagedQuery(e),s=await this._fetch(t,this._options),r=new it(s,t.inner.toJSON(),e,!1);return Y(this._options),this._store.insert(r),null}catch(t){return t}}}let z=class extends pt{constructor(h){super(h)}get connectionStatus(){return this.connection?.connectionStatus}get errorString(){return this.connection?.errorString}};U([J()],z.prototype,"connection",void 0),U([J()],z.prototype,"connectionStatus",null),U([J()],z.prototype,"errorString",null),z=U([_t("esri.views.2d.layers.features.sources.StreamConnectionState")],z);class jr{constructor(e,t){this._metadata=e,this._onUpdate=t,this._objectIdToFeature=new Map}get size(){return this._objectIdToFeature.size}get reader(){return M.fromFeatures([...this._objectIdToFeature.values()],this._metadata)}add(e){this._objectIdToFeature.set(e.objectId,e)}forEach(e){this._objectIdToFeature.forEach(e)}removeById(e){const t=this._objectIdToFeature.get(e);return t?(this._objectIdToFeature.delete(e),t):null}clear(){this._objectIdToFeature=new Map}update(e,t){this._onUpdate(e?.length??0)}}let Lr=class extends Q{constructor(e){super(),this._reader=e,this.chunkId="stream-chunk",this.normalizedChunkId="stream-chunk"}get reader(){return this._reader}get first(){return!0}get end(){return!0}get queryInfo(){return{type:"stream",chunkId:this.chunkId,size:this.size(),end:this.end}}get isTiled(){return!1}getTileReader(e){const t=this.queryFeaturesInBounds(e.bounds);return t.setTransformForDisplay(e.transform),t}};class zr extends Nt{constructor(e,t,s,r,i){super(s),this._service=e,this._dataFilter=t,this._streamOptions=r,this._metadata=i,this._connectionState=new z,this._forceRefresh=!1,this.events=new xe;const{objectIdField:n,timeInfo:a}=this._metadata,{purgeOptions:o}=t;this._stagingStore=new jr(this._metadata,u=>this.events.emit("features-updated",u)),this._manager=new Os(this._stagingStore,n,a,o),this.connect()}destroy(){super.destroy(),this.disconnect()}get about(){return{willQueryAllFeatures:!1,willQueryFullResolutionGeometry:!1}}get connectionStatus(){return this._connectionState.connectionStatus}get errorString(){return this._connectionState?.errorString}async refresh(){const e=this._chunk!=null;this._manager.checkForUpdates()||!e||this._forceRefresh?(this._chunk&&this._store.remove(this._chunk),this._forceRefresh=!1,this._chunk=new Lr(this._stagingStore.reader),this._store.insert(this._chunk),this.events.emit("tick")):this.events.emit("tick")}async updateFields(e){throw new Error("Updating available fields not supported for StreamLayer")}async load(e){}unload(e){}disconnect(){this._connection=dt(this._connection),this._connectionState.connection=null,this._handlesGroup?.remove()}connect(){if(this._connection!=null)return;const{geometryType:e,spatialReference:t}=this._metadata,{maxReconnectionAttempts:s,maxReconnectionInterval:r,geometryDefinition:i,definitionExpression:n,customParameters:a}=this._dataFilter;this._connection=Es(this._service.source,t,this._streamOptions.outSR,e,n,i,s,r,a),this._handlesGroup=mt([this._connection.on("data-received",o=>this._onFeature(o)),this._connection.on("message-received",o=>this._onWebSocketMessage(o))]),this._connectionState.connection=this._connection}clear(){this._manager.checkForUpdates(),this._stagingStore.clear(),this._forceRefresh=!0}updateCustomParameters(e){this._connection?.updateCustomParameters(e)}sendMessageToSocket(e){this._connection?.sendMessageToSocket(e)}sendMessageToClient(e){this._connection?.sendMessageToClient(e)}_onWebSocketMessage(e){if("type"in e)switch(e.type){case"delete":if(e.objectIds)for(const t of e.objectIds)this._manager.removeById(t);if(e.trackIds)for(const t of e.trackIds)this._manager.removeByTrackId(t);break;case"clear":this.clear()}this.events.emit("message-received",e)}_onFeature(e){try{this._manager.add(e),this.events.emit("data-received",e)}catch{}}}class Ur{constructor(e){this._onChange=e,this._chunks=new Map,this._chunksToRemove=[],this.events=new xe,this.featureAdapter=new Cs}destroy(){this.clear()}clear(){for(const e of this._chunks.values())this._chunksToRemove.push(e);this._chunks.clear(),this._overrideChunk!=null&&this._chunksToRemove.push(this._overrideChunk),this._overrideChunk=null}*chunks(){this._overrideChunk&&(yield this._overrideChunk),yield*this._chunks.values()}insert(e){y("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] SourceChunkStore.insert`),this._overrideChunk?.overridenIds.size&&e.reader.removeIds(this._overrideChunk.overridenIds),this._chunks.set(e.chunkId,e),this.events.emit("changed"),this._onChange()}remove(e){y("esri-2d-update-debug")&&console.debug(`Chunk[${e.chunkId}] SourceChunkStore.remove`),this._chunks.delete(e.chunkId),this._chunksToRemove.push(e)}cleanupRemovedChunks(){const e=this._chunksToRemove;return this._chunksToRemove=[],e}applyOverrides(e,t){this._overrideChunk==null&&(this._overrideChunk=new Ut(t)),this._overrideChunk.applyOverrides(e);for(const s of this._chunks.values())s.reader.removeIds(this._overrideChunk.overridenIds),s.invalidate()}forEach(e){const t=new Set;for(const s of this.chunks()){const r=s.reader.getCursor();for(;r.next();){const i=r.getObjectId();t.has(i)||(e(r.copy()),t.add(i))}}}forEachUnsafe(e){const t=new Set;for(const s of this.chunks()){const r=s.reader.getCursor();for(;r.next();){const i=r.getObjectId();t.has(i)||(e(r),t.add(i))}}}forEachInBounds(e,t){const s=new Set;for(const r of this.chunks()){const i=r.queryFeaturesInBounds(e);for(;i.next();){const n=i.getObjectId();s.has(n)||(t(i.copy()),s.add(n))}}}forEachBounds(e,t){const s=Fe();for(const r of e)r.getBounds(s)&&t(s)}}class Gr{constructor(e,t,s,r){this._aggregateAdapter=e,this._subscriptions=t,this._onChange=s,this._connection=r,this._updateTracking=new Ps({debugName:"FeatureSource"}),this._didInvalidateData=!1,this._store=new Ur(this._onChange)}destroy(){this._strategy?.destroy(),this._store.destroy(),this._streamMessenger?.destroy()}get _eventLog(){return this._connection.eventLog}get metadata(){if(!this._metadata)throw new Error("InternalError: Metadata not defined. Was update called?");return this._metadata}get service(){return this._schema.service}get store(){return this._store}get streamMessenger(){return this._streamMessenger==null&&this._initStreamMessenger(),this._streamMessenger}get statistics(){return gr.from(this._store)}get updateTracking(){return this._updateTracking}get queryEngine(){if(!this._queryEngine){if(!this._schema)return null;const{dataFilter:e}=this._schema.mutable,t=this._schema.mutable.availableFields,s=this._metadata;this._queryEngine=new It({featureStore:this._store,fieldsIndex:s.fieldsIndex,geometryType:s.geometryType,objectIdField:s.objectIdField,hasM:!1,hasZ:!1,spatialReference:e.outSpatialReference,cacheSpatialQueries:!0,aggregateAdapter:this._aggregateAdapter,timeInfo:s.timeInfo,definitionExpression:e.definitionExpression,availableFields:t})}return this._queryEngine}get isStream(){return this._schema.type==="stream"}chunks(){return Array.from(this._store.chunks())}cleanupRemovedChunks(){return this._store.cleanupRemovedChunks()}onSubscribe(e){this._eventLog.onEvent({type:"subscribe",tile:e.tile.id});const t=this._strategy?.load(e);t&&(t.then(()=>this._eventLog.onEvent({type:"loaded",tile:e.tile.id})).catch(s=>this._eventLog.onEvent({type:"error",tile:e.tile.id,error:s})),this._updateTracking.addPromise(t))}onResume(e){this._updateTracking.addPromise(ht(this._strategy?.load(e)))}onUnsubscribe(e){this._eventLog.onEvent({type:"unsubscribe",tile:e.tile.id}),this._strategy?.unload(e)}getOverride(e){return this._updateTracking.addPromise(this._doGetOverride(e))}applyOverride(e){this._didInvalidateData=!0,this._store.applyOverrides(e,this.metadata)}async update(e,t){const s=e.source,r=ct(this._schema?.mutable,s.mutable);if(!r)return!1;if(y("esri-2d-update-debug")&&console.debug(`Version[${t}] FeatureSource.update`,{changes:r}),this._schema=s,this._metadata=new $e(this._schema.service.metadata),this._queryEngine?.destroy(),this._queryEngine=null,this._schema.type==="feature"&&this._schema.service.queryMetadata.lastEditDate!=null&&(this._lastEditDate=this._schema.service.queryMetadata.lastEditDate),this._streamMessenger==null&&this._schema.type==="stream"&&this._initStreamMessenger(),Le(r,"sourceRefreshVersion")&&this._strategy?.refresh)return await this._strategy.refresh(),!0;if(s.type==="feature"&&Le(r,"availableFields")){if(await this._queryLastEditDateChanged()||this._didInvalidateData)this._didInvalidateData=!1,await this._updateStrategy(t);else{this._eventLog.onEvent({type:"updateFieldsStart"});try{await this._strategy.updateFields(s.mutable.availableFields),this._eventLog.onEvent({type:"updateFieldsEnd"})}catch(i){this._eventLog.onEvent({type:"updateFieldsError",error:i})}}return!1}return!(!ze(r,"dataFilter")&&!ze(r,"sourceRefreshVersion"))&&(await this._updateStrategy(t),!0)}_initStreamMessenger(){this._streamMessenger==null&&(this._streamMessenger=new ee(this._connection))}async _doGetOverride(e){return this._strategy.queryOverride(e)}async _queryLastEditDateChanged(){if(this._lastEditDate==null)return!1;const e=this._schema.service.source,t={...e.query,f:"json"},s=(await fs(e.path,{query:t,responseType:"json"})).data.editingInfo.lastEditDate;return s!==this._lastEditDate&&(this._lastEditDate=s,!0)}async _createStrategy(){const e=this.service,t="isSourceHosted"in e&&e.isSourceHosted,s=Array.isArray(e.source),r=e.source&&"collection"in e.source,i=t||s||r;if(this._schema.type==="stream"){const o=new zr(this._schema.service,this._schema.mutable.dataFilter,this._store,{outSR:this._schema.mutable.dataFilter.outSpatialReference},this.metadata);return this._streamMessenger.strategy=o,o}const n=yr.fromSchema(this._schema,this._metadata),a=await this._supportSnapshotMode(this._schema,n);return a?new Dr(this._schema.service,n,this._store,a.featureCount,this.metadata,this._eventLog):i?new Pr(this._schema.service,n,this._store,this.metadata,this._eventLog):new Or(this._schema.service,n,this._store,this.metadata,this._eventLog)}async _updateStrategy(e){const t=await this._createStrategy();this._eventLog.onEvent({type:"updateStrategyStart",about:t.about});const s=!!this._strategy;this._store.clear(),this._strategy?.destroy(),this._strategy=t,y("esri-2d-update-debug")&&console.debug(`Version[${e}] FeatureSource.updateStrategy`,{strategy:t});const r=Array.from(this._subscriptions.values());if(!r.length)return void this._eventLog.onEvent({type:"updateStrategyEnd"});const i=Promise.all(r.map(n=>this._strategy.load(n).then(()=>this._eventLog.onEvent({type:"loaded",tile:n.tile.id})).catch(a=>this._eventLog.onEvent({type:"error",tile:n.tile.id,error:a}))));this._updateTracking.addPromise(i);try{s&&await i}catch(n){ke(n)}this._eventLog.onEvent({type:"updateStrategyEnd"}),y("esri-2d-update-debug")&&console.debug(`Version[${e}] FeatureSource.updateStrategyEnd`,{strategy:t})}async _supportSnapshotMode(e,t){const{queryMetadata:s}=e.service,r=s.snapshotInfo;if(!r||!r.supportsSnapshotMinThreshold||!r.snapshotCountThresholds)return null;const i=e.service.source,n=t.createQuery();n.inner.orderByFields=[],n.inner.returnGeometry=!1;const a=(await ys(i,n.inner,{query:n.customParameters})).data.count,{min:o,max:u}=r.snapshotCountThresholds;return a<=o||r.supportsSnapshotMaxThreshold&&a<u?{featureCount:a}:null}}class Wr{constructor(e,t){this._handles=new ms,this._abortController=new AbortController,this._resolver=Ce(),this._isDone=!1,this._aborted=!1,this.tile=e,this._version=t,this._handles.add([])}destroy(){this.pause(),this._handles.destroy()}get key(){return this.tile.key}get version(){return this._version}set version(e){this._version=e}get signal(){return this._abortController.signal}get options(){return{signal:this._abortController.signal}}get done(){return this._resolver.promise}get isDone(){return this._isDone}resolve(){this._isDone=!0,this._resolver.resolve()}get paused(){return this._aborted}resume(){this._abortController=new AbortController,this._aborted=!1}pause(){this._aborted||(this._aborted=!0,this._abortController.abort())}}class Nr{constructor(e){this.edit=e,this.resolver=Ce()}}class Br{constructor(e,t){this.schema=e,this.version=t,this.resolver=Ce()}}class Yi{constructor(){this._aggregateAdapter={getFeatureObjectIds:e=>this._processor.getFeatureObjectIdsForAggregate(e)},this._subscriptions=new Map,this._updateRequested=!1,this._updateSubscriptionRequests=[],this._updateHighlightRequests=[]}destroy(){this._subscriptions.clear(),this._processor.destroy(),this._source.destroy(),this._handles.remove(),this._editState=null,this._tileInfoView=null}onDetach(){this.destroy(),this._initialize(this._connection)}_initialize(e){this._source=new Gr(this._aggregateAdapter,this._subscriptions,()=>this._requestUpdate(),e),this._processor=new pr(e,this._source),this._handles=mt([pe(()=>this._source.updateTracking.updating,()=>{this._requestUpdate(),this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:!0})})])}set remoteClient(e){this._connection=new Ds(e),this._initialize(this._connection)}get features(){const e=this._source.queryEngine;if(!e)throw new D("no-queryEngine","No query engine defined");return e}get aggregates(){const e=this._processor.aggregateQueryEngine;if(!e)throw new D("no-queryEngine","No aggregate query engine defined");return e}get processor(){return this._processor}get streamMessenger(){return this._source.streamMessenger}getDisplayFeatures(e){return this._processor.getDisplayFeatures(e)}async updateSchema(e,t){return y("esri-2d-update-debug")&&this._updateSchemaState&&console.error("InternalError: Schema already updating"),this._updateSchemaState=new Br(e,t),this._requestUpdate(),this._updateSchemaState.resolver.promise}updateSubscriptions(e){this._updateSubscriptionRequests.push(e),this._requestUpdate()}updateHighlight(e){this._updateHighlightRequests.push(e),this._requestUpdate()}async onEdits(e){if(this._editState!=null)throw new D("InternalError - Already processing an edit");this._editState=new Nr(e);const t=this._editState.resolver.promise;return this._requestUpdate(),t}queryStatistics(){return this._source.statistics.toJSON()}async queryVisibleFeatures(e,t){return this.features.executeQuery(e,t)}async queryHeatmapStatistics(e){const t=Math.round(bs(e.radius));let s=Number.POSITIVE_INFINITY,r=Number.NEGATIVE_INFINITY;const i=typeof e.fieldOffset=="string",n=e.fieldOffset??0,a=Array.from(this._subscriptions.values()),o=this._source.chunks(),u=t**2,d=3/(Math.PI*u),c=2*t,l=Math.ceil(x/c);for(const g of a){const _=g.tile,m=new Float64Array(l*l);for(const p of o){const I=p.getTileReader(_);if(!I)continue;const f=I.getCursor();for(;f.next();){let F=1;if(e.field!=null){const $=f.readAttribute(e.field);F=i?-1*+$:+$+n}const b=f.readXForDisplay()/c,S=f.readYForDisplay()/c,w=Math.floor(b),v=Math.floor(S);if(w<0||v<0||w>=l||v>=l)continue;const k=((.5+w-b)*c)**2+((.5+v-S)*c)**2;if(k>u)continue;const A=F*(d*(1-k/u)**2);m[v+w*l]+=A}}for(let p=0;p<m.length;p++)s=Math.min(s,m[p]),r=Math.max(r,m[p])}return{max:r,min:s}}async getSampleFeatures(e){const t=this._source.chunks();if(t.reduce((o,u)=>o+u.size(),0)<=e.minFeatureCount){if(!this._source.updateTracking.updating){const o=[];return this._source.store.forEachUnsafe(u=>o.push(u.readLegacyFeatureWorldSpace())),o}return null}const s=new Set,r=[],i=t.map(o=>o.reader.getCursor()),n=new yt,a=3*e.sampleSize;for(let o=0;o<a&&r.length<e.sampleSize;o++){const u=i[n.getIntRange(0,t.length-1)];if(u.getSize()===0)continue;const d=n.getIntRange(0,u.getSize()-1);u.setIndex(d);const c=u.getObjectId();s.has(c)||(s.add(c),r.push(u.readLegacyFeatureWorldSpace()))}return r.length>=e.sampleSize?r:null}_requestUpdate(){this._updateRequested||(this._updateRequested=!0,Is(()=>this._scheduleNextUpdate()))}_scheduleNextUpdate(){this._updateRequested&&(this._ongoingUpdate||(this._ongoingUpdate=this._doUpdate().finally(()=>{this._ongoingUpdate=null,this._scheduleNextUpdate()}),this._updateRequested=!1))}_subscribe(e){const t=e.tileId;if(this._subscriptions.has(t)){const i=this._subscriptions.get(t);return void(i.paused&&(y("esri-2d-update-debug")&&console.debug(`Tile[${t}] Pipeline.resume`),i.resume(),i.version=e.version,this._source.onResume(i)))}y("esri-2d-update-debug")&&console.debug(`Tile[${t}] Pipeline.subscribe`);const s=new Ss(this._tileInfoView,t),r=new Wr(s,e.version);this._subscriptions.set(t,r),this._source.onSubscribe(r),this._processor.onSubscribe(r)}_unsubscribe(e){const t=this._subscriptions.get(e);t&&(y("esri-2d-update-debug")&&console.debug(`Tile[${e}] Pipeline.unsubscribe`),this._source.onUnsubscribe(t),this._processor.onUnsubscribe(t),this._subscriptions.delete(t.key.id),t.destroy())}_pauseSubscription(e){const t=this._subscriptions.get(e);t&&(y("esri-2d-update-debug")&&console.debug(`Tile[${e}] Pipeline.pause`),t.pause())}async _doUpdate(){if(y("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateStart"),await this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:!0}),this._updateSubscriptionRequests.length){const r=this._updateSubscriptionRequests;this._updateSubscriptionRequests=[];for(const i of r)this._doUpdateSubscriptions(i)}const e=this._updateSchemaState;if(this._updateSchemaState=null,e!=null){const{schema:r,version:i}=e;await this._doUpdateSchema(r,i)}const t=this._editState;if(this._editState=null,t!=null){y("esri-2d-update-debug")&&console.debug("Pipeline.applyEditOverride",t.edit);const r=await this._source.getOverride(t.edit);await this._processor.applyOverride(r),y("esri-2d-update-debug")&&console.debug("Pipeline.endEditOverride",t.edit)}if(this._updateHighlightRequests.length){const r=this._updateHighlightRequests;this._updateHighlightRequests=[];for(const i of r)this._processor.updateHighlight(i)}const s=this._source.cleanupRemovedChunks();this._processor.removeChunks(s);try{this._subscriptions.size&&(y("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksStart"),await this._processor.updateChunks(),y("esri-2d-update-debug")&&console.debug("Pipeline.updateChunksEnd"))}catch(r){ke(r)}t?.resolver.resolve(),e?.resolver.resolve(),this._updateRequested?(y("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=true]"),await this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:!0})):(y("esri-2d-update-debug")&&console.debug("Pipeline._doUpdateEnd [updateRequested=false, After flush]"),await this._connection.layerView.setUpdating({data:this._source.updateTracking.updating,pipeline:this._updateRequested}))}async _doUpdateSchema(e,t){if(y("esri-2d-update-debug")&&console.debug(`Version[${t}] Pipeline.updateStart`,{schema:e}),!this._tileInfoView){const r=Ue.fromJSON(e.source.tileInfoJSON);this._tileInfoView=new Ge(r)}const s={tileInfo:this._tileInfoView?.tileInfo};try{const r=await this._source.update(e,t),i=Array.from(this._subscriptions.values());await this._processor.update(e,t,s,r,i)}catch(r){console.error(r)}y("esri-2d-update-debug")&&console.debug(`Version[${t}] Pipeline.updateEnd`)}_doUpdateSubscriptions(e){if(y("esri-2d-update-debug")&&console.debug("Pipeline.updateSubscriptions",e),!this._tileInfoView){const t=Ue.fromJSON(e.tileInfoJSON);this._tileInfoView=new Ge(t)}for(const t of e.subscribe)this._subscribe(t);for(const t of e.unsubscribe)this._unsubscribe(t);if(y("featurelayer-query-pausing-enabled"))for(const t of e.pause)this._pauseSubscription(t)}}export{Yi as default};
