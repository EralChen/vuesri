import{s as m,b3 as W,dK as v,ak as l,_ as T,dL as r,dM as p,dN as E,dO as x,b$ as A,dP as M,dQ as I,dR as L,dS as D,L as V,$ as y,a0 as _,a2 as P,dT as S,cR as F}from"./chunk-ERvgPDZ8.js";import{n as $}from"./chunk-8-kR5Ed1.js";import{i as R}from"./chunk-rsJvzK0K.js";import"./chunk-cDR98evz.js";var a;(function(e){e[e.API=1]="API",e[e.VerboseAPI=2]="VerboseAPI",e[e.Error=3]="Error"})(a||(a={}));const d=S(),w=S();let u=class extends R($(F)){constructor(){super(...arguments),this._suspendedHandle=null,this._usedMemory=0,this._futureMemory=0,this.type="voxel-3d",this.slicePlaneEnabled=!1,this._wasmLayerId=-1,this.ignoresMemoryFactor=!0,this._dbgFlags=new Set}get baseUrl(){return this.layer.parsedUrl?.path??""}get wasmLayerId(){return this._wasmLayerId}initialize(){if(this._dbgFlags.add(a.Error),this.view.viewingMode!=="local")throw new m("voxel:unsupported-viewingMode","Voxel layers support local viewingMode only.",{});if(!this.view._stage.renderView.renderingContext.capabilities.colorBufferFloat?.textureFloat)throw new m("voxel:missing-color-buffer-float","Voxel layers require the WebGL2 extension EXT_color_buffer_float",{});const e=this.layer.spatialReference;if(!W(e,this.view.spatialReference))throw new m("layerview:spatial-reference-incompatible","The spatial reference of this scene layer is incompatible with the spatial reference of the view",{});const s=this.layer.currentVariableId,i=this.layer.getVolume(s),o=this.layer.getVariable(s);if(i!=null&&o!=null){const n=i.dimensions[0],t=i.dimensions[1],c=i.zDimension;if(c>1){const g=i.dimensions[c],f=n.size*t.size*g.size;let b=1;switch(o.renderingFormat.type){case"Int16":case"UInt16":b=2;break;case"Int32":case"UInt32":case"Float32":b=4}this._futureMemory=b*f}}const h=v(this).then(n=>{this._wasmLayerId=n,this._suspendedHandle=l(()=>this.suspended,t=>{const c=r(this.view);c&&c.setEnabled(this,!t)},T),this.addHandles([l(()=>this.layer.renderMode,t=>this._pushRenderModeToWasm(t)),l(()=>this.layer.currentVariableId,t=>this._pushCurrentVariableIdToWasm(t)),l(()=>this.layer.getSections(),t=>this._pushSectionsToWasm(t)),l(()=>this.layer.getVariableStyles(),t=>this._pushVariableStylesToWasm(t)),l(()=>this.layer.getVolumeStyles(),t=>this._pushVolumeStylesToWasm(t)),l(()=>this.layer.enableDynamicSections,t=>this._pushEnableDynamicSectionsToWasm(t)),l(()=>this.layer.enableIsosurfaces,t=>this._pushEnableIsosurfacesToWasm(t)),l(()=>this.layer.enableSections,t=>this._pushEnableSectionsToWasm(t)),l(()=>this.layer.enableSlices,t=>this._pushEnableSlicesToWasm(t)),l(()=>this.slicePlaneEnabled,t=>this._pushAnalysisSliceToWasm(t,this.view.slicePlane)),l(()=>this.view.slicePlane,t=>this._pushAnalysisSliceToWasm(this.slicePlaneEnabled,t))])}).catch(n=>{if(p(this),this._wasmLayerId=-1,n===-1)throw new m("voxel:addLayer-failure","The voxel layer description was invalid.",{});if(n===-2)throw new m("voxel:addLayer-failure","The voxel layer web assembly module failed to download.",{})});this.addResolvingPromise(h)}destroy(){p(this),this._suspendedHandle&&(this._suspendedHandle.remove(),this._suspendedHandle=null)}isUpdating(){const e=r(this.view);return!(this._wasmLayerId<0||e==null)&&e.isUpdating(this._wasmLayerId)}updatingFlagChanged(){this.notifyChange("updating")}get usedMemory(){return this._usedMemory}get unloadedMemory(){return this._futureMemory}get performanceInfo(){return{nodes:0,displayedNumberOfFeatures:0,maximumNumberOfFeatures:0,totalNumberOfFeatures:0,core:null}}whenGraphicBounds(e,s){const i=e.attributes["Voxel.WorldPosition"];if(i){const o=E(),h=JSON.parse(i);if(x(h,this.view.renderSpatialReference,w,this.view.spatialReference||A.WGS84))return M(o,w),Promise.resolve({boundingBox:o,screenSpaceObjects:[]})}return Promise.reject()}setUsedMemory(e){this._usedMemory=e,this._futureMemory=0}captureFrustum(){r(this.view)?.captureFrustum()}toggleFullVolumeExtentDraw(){r(this.view)?.toggleFullVolumeExtentDraw(this)}getLayerTimes(){return r(this.view)?.getLayerTimes(this)??[]}getCurrentLayerTimeIndex(){return r(this.view)?.getCurrentLayerTimeIndex(this)??0}_pushRenderModeToWasm(e){const s=r(this.view);this._dbg(a.VerboseAPI,"VoxelLayerView3D._pushRenderModeToWasm() called, "+(s?"have WASM":"don't have WASM!!!")),s?.setRenderMode(this,e)||this._dbg(a.Error,"VoxelLayerView3D._pushRenderModeToWasm() failed!")}_pushSectionsToWasm(e){const s=r(this.view);this._dbg(a.VerboseAPI,"VoxelLayerView3D._pushSectionsToWasm() called, "+(s?"have WASM":"don't have WASM!!!")),s?.setStaticSections(this,e)||this._dbg(a.Error,"VoxelLayerView3D._pushSectionsToWasm() failed!")}_pushCurrentVariableIdToWasm(e){const s=r(this.view);this._dbg(a.VerboseAPI,"VoxelLayerView3D._pushCurrentVariableIdToWasm() called!, "+(s?"have WASM":"don't have WASM!!!")),s?.setCurrentVariable(this,e)||this._dbg(a.Error,"VoxelLayerView3D._pushCurrentVariableIdToWasm() failed!")}_pushVariableStylesToWasm(e){const s=r(this.view);this._dbg(a.VerboseAPI,"VoxelLayerView3D._pushVariableStylesToWasm() called, "+(s?"have WASM":"don't have WASM!!!")),s?.setVariableStyles(this,e)||this._dbg(a.Error,"VoxelLayerView3D._pushVariableStylesToWasm() failed!")}_accountForEnableSlices(e,s){const i=s??this.layer.enableSlices;for(let o=0;o<e.length;++o){const h=e[o];for(const n of h.slices)n.enabled=n.enabled&&i}}_pushVolumeStylesToWasm(e){const s=r(this.view);this._dbg(a.VerboseAPI,"VoxelLayerView3D._pushVolumeStylesToWasm() called, "+(s?"have WASM":"don't have WASM!!!")),s&&(this._accountForEnableSlices(e,null),s.setVolumeStyles(this,e)||this._dbg(a.Error,"VoxelLayerView3D._pushVolumeStylesToWasm() failed!"))}_pushAnalysisSliceToWasm(e,s){const i=r(this.view);this._dbg(a.VerboseAPI,"VoxelLayerView3D._pushAnalysisSliceToWasm() called, "+(i?"have WASM":"don't have WASM!!!"));let o=!1;if(i){if(s){const h=s.origin;I(d,s.basis1,s.basis2),L(d,d),o=i.setAnalysisSlice(this,e,h,d)}else D(d,0,0,1),o=i.setAnalysisSlice(this,!1,d,d);o||this._dbg(a.Error,"VoxelLayerView3D._pushAnalysisSliceToWasm() failed!")}}_pushEnableDynamicSectionsToWasm(e){const s=r(this.view);this._dbg(a.VerboseAPI,"VoxelLayerView3D._pushEnableDynamicSectionsToWasm() called, "+(s?"have WASM":"don't have WASM!!!")),s?.setEnableDynamicSections(this,e)||this._dbg(a.Error,"VoxelLayerView3D._pushEnableDynamicSectionsToWasm() failed!")}_pushEnableSlicesToWasm(e){const s=r(this.view);if(this._dbg(a.VerboseAPI,"VoxelLayerView3D._pushEnableSlicesToWasm() called, "+(s?"have WASM":"don't have WASM!!!")),s){const i=this.layer.getVolumeStyles();this._accountForEnableSlices(i,e),s.setVolumeStyles(this,i)||this._dbg(a.Error,"VoxelLayerView3D._pushEnableSlicesToWasm() failed!")}}_pushEnableIsosurfacesToWasm(e){const s=r(this.view);this._dbg(a.VerboseAPI,"VoxelLayerView3D._pushEnableIsosurfacesToWasm() called, "+(s?"have WASM":"don't have WASM!!!")),s?.setEnableIsosurfaces(this,e)||this._dbg(a.Error,"VoxelLayerView3D._pushEnableIsosurfacesToWasm() failed!")}_pushEnableSectionsToWasm(e){const s=r(this.view);this._dbg(a.VerboseAPI,"VoxelLayerView3D._pushEnableSectionsToWasm() called, "+(s?"have WASM":"don't have WASM!!!")),s?.setEnableSections(this,e)||this._dbg(a.Error,"VoxelLayerView3D._pushEnableSectionsToWasm() failed!")}async whenGraphicAttributes(e,s){return e}_dbg(e,s){this._dbgFlags.has(e)&&(e===a.Error?V.getLogger(this).error(s):V.getLogger(this).warn(s))}};y([_()],u.prototype,"layer",void 0),y([_()],u.prototype,"baseUrl",null),y([_({type:Boolean})],u.prototype,"slicePlaneEnabled",void 0),u=y([P("esri.views.3d.layers.VoxelLayerView3D")],u);const O=u;export{O as default};
