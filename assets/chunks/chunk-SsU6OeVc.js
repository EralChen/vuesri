import{e as l}from"./chunk-hot-flg5.js";import{dP as h,kG as u,m4 as m,ep as p,lY as f,m0 as n,hF as s}from"./chunk-217NDGZJ.js";const U={readOnly:!0,get(){return l(this.view)}};var a;(function(t){t[t.Auto=0]="Auto",t[t.Euclidean=1]="Euclidean",t[t.Geodesic=2]="Geodesic"})(a||(a={}));function g(t,e){if(h(e,0,0,0),t.length>0){for(let r=0;r<t.length;++r)u(e,e,t[r]);m(e,e,1/t.length)}}function v(t,e,r,i){i.projectToRenderScreen(t,o),i.projectToRenderScreen(e,c),p(r,d,_),f(r,r)}const o=n(),_=o,c=n(),d=c;class z{constructor(e=null){this.spatialReference=e}get spatialReference(){return this._spatialReference}set spatialReference(e){e!==this._spatialReference&&(this._spatialReference=e,this._updateNormalizationFactors())}normalizeDistance(e){return e*this._metersPerDistanceUnit}normalizeElevation(e){return e*this._metersPerElevationUnit}normalizeArea(e){return e*this._squareMetersPerAreaUnit}_updateNormalizationFactors(){this._metersPerDistanceUnit=s(this._spatialReference,1),this._metersPerElevationUnit=s(this._spatialReference,1),this._squareMetersPerAreaUnit=this._metersPerDistanceUnit*this._metersPerDistanceUnit}}export{z as a,U as b,a as e,v as i,g as t};
