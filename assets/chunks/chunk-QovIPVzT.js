import{cN as w,eU as y,cO as I,eV as V,eW as v,eX as H,eY as T,cP as q,as as U,b2 as b,ai as o,eZ as g,L as S,_ as n,$ as m,a1 as C}from"./chunk-m3jlTyOz.js";import"./chunk-w9eDVXDP.js";import"./chunk-iNPje8jh.js";import{r as Q}from"./chunk-_PUUTQZ8.js";import"./chunk-oZcAn0fK.js";import{r as P,o as f,n as d}from"./chunk-1l78KgP3.js";import{a as k}from"./chunk-FbqUUjdH.js";import{S as F,G}from"./chunk-l2y5yPy1.js";import"./chunk-bntHIBZM.js";import"./chunk-nu9VKcdO.js";import"./chunk-8z8MVveq.js";import"./chunk-YyPMF0Is.js";import"./chunk-CEMOhUyj.js";import"./chunk-pT1ASav_.js";import"./chunk-2jZtXZN9.js";import"./chunk-8PqiWDwx.js";import"./chunk-U5GpG_vU.js";import"./chunk-4-MF3rQf.js";import"./chunk-CtkSqn65.js";import"./chunk-pcBJnprf.js";import"./chunk-Ojzt5X-R.js";import"./chunk-VnQNafr9.js";import"./chunk-1_thnT0U.js";import"./chunk-SZpAiZ7F.js";import"./chunk-XZ2hj0nr.js";import"./chunk-SyetpT93.js";import"./chunk-7ypnA_8s.js";import"./chunk-BMshGbmw.js";import"./chunk-v6EOeNTY.js";import"./chunk-tQs07CpE.js";import"./chunk-XqF1XW01.js";import"./chunk-A_S84j2H.js";import"./chunk-hwoLfQU1.js";import"./chunk-R9ZRyC3P.js";const L=[0,0];let a=class extends w(P(y(I))){constructor(){super(...arguments),this._fetchQueue=null,this._highlightGraphics=new V,this._highlightView=null,this._popupHighlightHelper=null,this._tileStrategy=null,this.layer=null}get resampling(){return!("resampling"in this.layer)||this.layer.resampling!==!1}get tilemapCache(){return"tilemapCache"in this.layer?this.layer.tilemapCache:null}update(e){this._fetchQueue.pause(),this._fetchQueue.state=e.state,this._tileStrategy.update(e),this._fetchQueue.resume(),this._highlightView?.processUpdate(e)}attach(){const e="tileServers"in this.layer?this.layer.tileServers:null,t=this.tilemapCache;if(this._tileInfoView=new v(this.layer.tileInfo,this.layer.fullExtent,t?.effectiveMinLOD,t?.effectiveMaxLOD),this._fetchQueue=new H({tileInfoView:this._tileInfoView,concurrency:e&&10*e.length||10,process:(i,s)=>this.fetchTile(i,s)}),this._tileStrategy=new T({cachePolicy:"keep",resampling:this.resampling,acquireTile:i=>this.acquireTile(i),releaseTile:i=>this.releaseTile(i),tileInfoView:this._tileInfoView}),F(this,this.layer)){const i=this._highlightView=new Q({view:this.view,graphics:this._highlightGraphics,requestUpdateCallback:()=>this.requestUpdate(),container:new k(this.view.featuresTilingScheme),defaultPointSymbolEnabled:!1});this.container.addChild(this._highlightView.container),this._popupHighlightHelper=new G({createFetchPopupFeaturesQueryGeometry:(s,h)=>q(s,h,this.view),highlightGraphics:this._highlightGraphics,highlightGraphicUpdated:(s,h)=>{i.graphicUpdateHandler({graphic:s,property:h})},layerView:this,updatingHandles:this._updatingHandles})}this.requestUpdate(),this.addAttachHandles(this._updatingHandles.add(()=>this.resampling,()=>{this.doRefresh()})),super.attach()}detach(){super.detach(),this._tileStrategy.destroy(),this._fetchQueue.clear(),this.container.removeAllChildren(),this._popupHighlightHelper?.destroy(),this._highlightView?.destroy(),this._fetchQueue=this._tileStrategy=this._tileInfoView=this._popupHighlightHelper=null}async fetchPopupFeatures(e,t){return this._popupHighlightHelper?this._popupHighlightHelper.fetchPopupFeatures(e,t):[]}highlight(e){return this._popupHighlightHelper?this._popupHighlightHelper.highlight(e):U()}moveStart(){this.requestUpdate()}viewChange(){this.requestUpdate()}moveEnd(){this.requestUpdate()}supportsSpatialReference(e){return b(this.layer.tileInfo?.spatialReference,e)}async doRefresh(){if(this.attached){if(this.suspended)return this._tileStrategy.clear(),void this.requestUpdate();this._fetchQueue.reset(),this._tileStrategy.refresh(e=>this._updatingHandles.addPromise(this._enqueueTileFetch(e)))}}acquireTile(e){const t=this._bitmapView.createTile(e),i=t.bitmap;return[i.x,i.y]=this._tileInfoView.getTileCoords(L,t.key),i.resolution=this._tileInfoView.getTileResolution(t.key),[i.width,i.height]=this._tileInfoView.tileInfo.size,this._updatingHandles.addPromise(this._enqueueTileFetch(t)),this._bitmapView.addChild(t),this.requestUpdate(),t}releaseTile(e){this._fetchQueue.abort(e.key.id),this._bitmapView.removeChild(e),e.once("detach",()=>e.destroy()),this.requestUpdate()}async fetchTile(e,t={}){const i=this.tilemapCache,{signal:s,resamplingLevel:h=0}=t;if(!i)try{return await this._fetchImage(e,s)}catch(r){if(!o(r)&&!this.resampling)return f(this._tileInfoView.tileInfo.size);if(h<3){const c=this._tileInfoView.getTileParentId(e.id);if(c){const u=new g(c),_=await this.fetchTile(u,{...t,resamplingLevel:h+1});return d(this._tileInfoView,_,u,e)}}throw r}const l=new g(0,0,0,0);let p;try{if(await i.fetchAvailabilityUpsample(e.level,e.row,e.col,l,{signal:s}),l.level!==e.level&&!this.resampling)return f(this._tileInfoView.tileInfo.size);p=await this._fetchImage(l,s)}catch(r){if(o(r))throw r;p=await this._fetchImage(e,s)}return this.resampling?d(this._tileInfoView,p,l,e):p}async _enqueueTileFetch(e){if(!this._fetchQueue.has(e.key.id)){try{const t=await this._fetchQueue.push(e.key);e.bitmap.source=t,e.bitmap.width=this._tileInfoView.tileInfo.size[0],e.bitmap.height=this._tileInfoView.tileInfo.size[1],e.once("attach",()=>this.requestUpdate())}catch(t){o(t)||S.getLogger(this).error(t)}this.requestUpdate()}}async _fetchImage(e,t){return this.layer.fetchImageBitmapTile(e.level,e.row,e.col,{signal:t})}};n([m()],a.prototype,"resampling",null),n([m()],a.prototype,"tilemapCache",null),a=n([C("esri.views.2d.layers.TileLayerView2D")],a);const de=a;export{de as default};
