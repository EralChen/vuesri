import{e as l}from"./chunk-PcxKBH10.js";import{dS as h,kK as m,m9 as u,es as f,m1 as p,m5 as n,hJ as i}from"./chunk-ERvgPDZ8.js";const U={readOnly:!0,get(){return l(this.view)}};var a;(function(t){t[t.Auto=0]="Auto",t[t.Euclidean=1]="Euclidean",t[t.Geodesic=2]="Geodesic"})(a||(a={}));function g(t,e){if(h(e,0,0,0),t.length>0){for(let r=0;r<t.length;++r)m(e,e,t[r]);u(e,e,1/t.length)}}function v(t,e,r,s){s.projectToRenderScreen(t,o),s.projectToRenderScreen(e,c),f(r,d,_),p(r,r)}const o=n(),_=o,c=n(),d=c;class z{constructor(e=null){this.spatialReference=e}get spatialReference(){return this._spatialReference}set spatialReference(e){e!==this._spatialReference&&(this._spatialReference=e,this._updateNormalizationFactors())}normalizeDistance(e){return e*this._metersPerDistanceUnit}normalizeElevation(e){return e*this._metersPerElevationUnit}normalizeArea(e){return e*this._squareMetersPerAreaUnit}_updateNormalizationFactors(){this._metersPerDistanceUnit=i(this._spatialReference,1),this._metersPerElevationUnit=i(this._spatialReference,1),this._squareMetersPerAreaUnit=this._metersPerDistanceUnit*this._metersPerDistanceUnit}}export{z as a,U as b,a as e,v as i,g as t};
