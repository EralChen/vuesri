import{$ as r,a0 as i,dL as F,a2 as j,eF as E,eI as L,s as R,dX as P,D as V}from"./chunk-xdbuWCSg.js";const _=T=>{let t=class extends T{constructor(){super(...arguments),this._rasterFieldPrefix="Raster.",this.layer=null,this.view=null,this.tileInfo=null}get fullExtent(){return this._getfullExtent()}_getfullExtent(){return E(this.layer.serviceRasterInfo,this.view.spatialReference)}get hasTilingEffects(){return!!(this.layer.renderer&&"dynamicRangeAdjustment"in this.layer.renderer&&this.layer.renderer.dynamicRangeAdjustment)}get datumTransformation(){return L(this.layer.fullExtent,this.view.spatialReference,!0)}supportsSpatialReference(l){return!!E(this.layer.serviceRasterInfo,l)}async fetchPopupFeaturesAtLocation(l,f){const{layer:e}=this;if(!l)throw new R("imageryTileLayerView:fetchPopupFeatures","Nothing to fetch without area",{layer:e});const{popupEnabled:y}=e,d=P(e,f);if(!y||d==null)throw new R("imageryTileLayerView:fetchPopupFeatures","Missing required popupTemplate or popupEnabled",{popupEnabled:y,popupTemplate:d});const h=[],{value:s,magdirValue:m,processedValue:b}=await e.identify(l,{timeExtent:this.timeExtent,signal:f?.signal});let o="";if(s&&s.length){o=e.type==="imagery-tile"&&e.hasStandardTime()&&s[0]!=null?s.map(c=>e.getStandardTimeValue(c)).join(", "):s.join(", ");const n={ObjectId:0},g="Raster.ServicePixelValue";n[g]=e.type==="imagery-tile"&&e.raster.datasetFormat==="Function"?b?.join(", "):o,n[g+".Raw"]=o;const v=e.serviceRasterInfo.attributeTable;if(v!=null){const{fields:c,features:I}=v,x=c.find(({name:a})=>a.toLowerCase()==="value"),p=x?I.find(a=>String(a.attributes[x.name])===o):null;if(p)for(const a in p.attributes)p.attributes.hasOwnProperty(a)&&(n[this._rasterFieldPrefix+a]=p.attributes[a])}const w=e.serviceRasterInfo.dataType;w!=="vector-magdir"&&w!=="vector-uv"||(n["Raster.Magnitude"]=m?.[0],n["Raster.Direction"]=m?.[1]);const u=new V(this.fullExtent.clone(),null,n);u.layer=e,u.sourceLayer=u.layer,h.push(u)}return h}};return r([i()],t.prototype,"layer",void 0),r([i(F)],t.prototype,"timeExtent",void 0),r([i()],t.prototype,"view",void 0),r([i()],t.prototype,"fullExtent",null),r([i()],t.prototype,"tileInfo",void 0),r([i({readOnly:!0})],t.prototype,"hasTilingEffects",null),r([i()],t.prototype,"datumTransformation",null),t=r([j("esri.views.layers.ImageryTileLayerView")],t),t};export{_ as p};
