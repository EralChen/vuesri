import{_ as P}from"./chunk-EUQwHdIv.js";import{li as U,lj as L,lk as D,h4 as Q,b0 as V,ce as G,ll as T,lm as H,L as _,s as A,P as W,bv as Y,b5 as j,_ as F,$ as v,hV as z,di as X,aK as N,ln as Z,j9 as O,y as m,l as $,lo as B,lp as K,lq as ee,lr as te,bE as ae,ls as se,lt as re,eR as M,lu as ne,cl as ie,cb as oe,bo as ue,N as le,bY as ce,lv as de,aq as pe,lw as he,a1 as ye,bR as me}from"./chunk-8J0p1hu6.js";import{v as fe}from"./chunk-rsnyW3YF.js";import{isFeatureIdentifierArrayWithGlobalId as ge,isFeatureIdentifierArrayWithObjectId as be}from"./chunk-pRAaLpsi.js";function we(e){const{vertexSpace:t}=e;if(t.isRelative)return e.clone();const{anchor:a}=e,s=a.clone(),r=U(Re,[-s.x,-s.y,-s.z]),n=new L({origin:[s.x,s.y,s.z]}),i=e.cloneWithVertexSpace(n),{position:o}=i.vertexAttributes;return i.vertexAttributes.position=D(new Float64Array(o.length),o,r),i.vertexAttributesChanged(),i}const Re=Q();async function J(e,t,a){const{geometry:s}=t,r={...t.attributes};if(a!=null&&s?.type==="mesh"){const{transformFieldRoles:n}=a,{origin:i,spatialReference:o,transform:u}=s,l=e.spatialReference;await V(o,l);const d=G(i,l);if(r[n.originX]=d.x,r[n.originY]=d.y,r[n.originZ]=d.z??0,u!=null){const{translation:y,scale:p,rotation:f}=u,{vertexSpace:w}=s,c=w.isGeoreferenced?1:T(o)/T(l);r[n.translationX]=y[0]*c,r[n.translationY]=y[2]*c,r[n.translationZ]=-y[1]*c,r[n.scaleX]=p[0],r[n.scaleY]=p[2],r[n.scaleZ]=p[1],r[n.rotationX]=f[0],r[n.rotationY]=f[2],r[n.rotationZ]=-f[1],r[n.rotationDeg]=f[3]}return{attributes:r}}return s==null?{attributes:r}:s.type==="mesh"||s.type==="extent"?null:{geometry:s.toJSON(),attributes:r}}async function qe(e,t){const a=await Promise.all((t.addAttachments??[]).map(n=>k(e,n))),s=await Promise.all((t.updateAttachments??[]).map(n=>k(e,n))),r=t.deleteAttachments??[];return a.length||s.length||r.length?{adds:a,updates:s,deletes:[...r]}:null}async function k(e,t){const{feature:a,attachment:s}=t,{globalId:r,name:n,contentType:i,data:o,uploadId:u}=s,l={globalId:r};if(a&&("attributes"in a?l.parentGlobalId=a.attributes?.[e.globalIdField]:a.globalId&&(l.parentGlobalId=a.globalId)),u)l.uploadId=u;else if(o){const d=await H(o);d&&(l.contentType=d.mediaType,l.data=d.data),o instanceof File&&(l.name=o.name)}return n&&(l.name=n),i&&(l.contentType=i),l}function Se(e,t,a){if(!t||t.length===0)return[];if(a&&ge(t))return t.map(r=>r.globalId);if(be(t))return t.map(r=>r.objectId);const s=a?e.globalIdField:e.objectIdField;return s?t.map(r=>r.getAttribute(s)):[]}function Ae(e){const t=e?.assetMaps;if(t){for(const r of t.addResults)r.success||_.getLogger("esri.layers.graphics.sources.support.sourceUtils").error(`Failed to map asset to feature with globalId ${r.globalId}.`);for(const r of t.updateResults)r.success||_.getLogger("esri.layers.graphics.sources.support.sourceUtils").error(`Failed to map asset to feature with globalId ${r.globalId}.`)}const a=e?.attachments,s={addFeatureResults:e?.addResults?.map(b)??[],updateFeatureResults:e?.updateResults?.map(b)??[],deleteFeatureResults:e?.deleteResults?.map(b)??[],addAttachmentResults:a?.addResults?a.addResults.map(b):[],updateAttachmentResults:a?.updateResults?a.updateResults.map(b):[],deleteAttachmentResults:a?.deleteResults?a.deleteResults.map(b):[]};return e?.editMoment&&(s.editMoment=e.editMoment),s}function b(e){const t=e.success===!0?null:e.error||{code:void 0,description:void 0};return{objectId:e.objectId,globalId:e.globalId,error:t?new A("feature-layer-source:edit-failure",t.description,{code:t.code}):null}}function E(e,t){return new W({attributes:e.attributes,geometry:Y({...e.geometry,spatialReference:t})})}function Ie(e,t){return{adds:e?.adds?.map(a=>E(a,t))||[],updates:e?.updates?.map(a=>({original:E(a[0],t),current:E(a[1],t)}))||[],deletes:e?.deletes?.map(a=>E(a,t))||[],spatialReference:t}}function Fe(e){const t=e.details.raw,a=+t.code,s=+t.extendedCode;return a===500&&(s===-2147217144||s===-2147467261)}const Oe=new j({originalAndCurrentFeatures:"original-and-current-features",none:"none"}),Ee=new Set(["Feature Layer","Oriented Imagery Layer","Table"]),_e=new j({Started:"published",Publishing:"publishing",Stopped:"unavailable"});let q=class extends z{constructor(){super(...arguments),this.type="feature-layer",this.refresh=X(async()=>{await this.load();const e=this.sourceJSON.editingInfo?.lastEditDate;if(e==null)return{dataChanged:!0,updates:{}};try{await this._fetchService(null)}catch{return{dataChanged:!0,updates:{}}}const t=e!==this.sourceJSON.editingInfo?.lastEditDate;return{dataChanged:t,updates:t?{editingInfo:this.sourceJSON.editingInfo,extent:this.sourceJSON.extent}:null}}),this._ongoingAssetUploads=new Map}load(e){const t=this.layer.sourceJSON,a=this._fetchService(t,{...e}).then(()=>this.layer.setUserPrivileges(this.sourceJSON.serviceItemId,e)).then(()=>this._ensureLatestMetadata(e));return this.addResolvingPromise(a),Promise.resolve(this)}get queryTask(){const{capabilities:e,parsedUrl:t,dynamicDataSource:a,infoFor3D:s,gdbVersion:r,spatialReference:n,fieldsIndex:i}=this.layer,o=N("featurelayer-pbf")&&e?.query.supportsFormatPBF&&s==null,u=e?.operations?.supportsQueryAttachments??!1;return new Z({url:t.path,pbfSupported:o,fieldsIndex:i,infoFor3D:s,dynamicDataSource:a,gdbVersion:r,sourceSpatialReference:n,queryAttachmentsSupported:u})}async addAttachment(e,t){await this.load();const{layer:a}=this;await O(a,"editing");const s=e.attributes[a.objectIdField],r=a.parsedUrl.path+"/"+s+"/addAttachment",n=this._getLayerRequestOptions(),i=this._getFormDataForAttachment(t,n.query);try{const o=await m(r,{body:i});return b(o.data.addAttachmentResult)}catch(o){throw this._createAttachmentErrorResult(s,o)}}async updateAttachment(e,t,a){await this.load();const{layer:s}=this;await O(s,"editing");const r=e.attributes[s.objectIdField],n=s.parsedUrl.path+"/"+r+"/updateAttachment",i=this._getLayerRequestOptions({query:{attachmentId:t}}),o=this._getFormDataForAttachment(a,i.query);try{const u=await m(n,{body:o});return b(u.data.updateAttachmentResult)}catch(u){throw this._createAttachmentErrorResult(r,u)}}async applyEdits(e,t){await this.load();const{layer:a}=this;await O(a,"editing");const s=a.infoFor3D,r=s!=null,n=r||(t?.globalIdUsed??!1),i=r?await this._uploadMeshesAndGetAssetMapEditsJSON(e):null,o=e.addFeatures?.map(h=>J(this.layer,h,s))??[],u=(await Promise.all(o)).filter($),l=e.updateFeatures?.map(h=>J(this.layer,h,s))??[],d=(await Promise.all(l)).filter($),y=Se(this.layer,e.deleteFeatures,n);B(u,d,a.spatialReference);const p=await qe(this.layer,e),f=a.capabilities.editing.supportsAsyncApplyEdits&&r,w=t?.gdbVersion||a.gdbVersion,c={gdbVersion:w,rollbackOnFailure:t?.rollbackOnFailureEnabled,useGlobalIds:n,returnEditMoment:t?.returnEditMoment,usePreviousEditMoment:t?.usePreviousEditMoment,async:f};await K(this.layer.url,w,!0);const I=ee(this.layer.url,w||null);t?.returnServiceEditsOption?(c.edits=JSON.stringify([{id:a.layerId,adds:u,updates:d,deletes:y,attachments:p,assetMaps:i}]),c.returnServiceEditsOption=Oe.toJSON(t?.returnServiceEditsOption),c.returnServiceEditsInSourceSR=t?.returnServiceEditsInSourceSR):(c.adds=u.length?JSON.stringify(u):null,c.updates=d.length?JSON.stringify(d):null,c.deletes=y.length?n?JSON.stringify(y):y.join(","):null,c.attachments=p&&JSON.stringify(p),c.assetMaps=i!=null?JSON.stringify(i):void 0);const g=this._getLayerRequestOptions({method:"post",query:c});I&&(g.authMode="immediate",g.query.returnEditMoment=!0,g.query.sessionId=te);const R=t?.returnServiceEditsOption?a.url:a.parsedUrl.path;let S;try{S=f?await this._asyncApplyEdits(R+"/applyEdits",g):await m(R+"/applyEdits",g)}catch(h){if(!Fe(h))throw h;g.authMode="immediate",S=f?await this._asyncApplyEdits(R+"/applyEdits",g):await m(R+"/applyEdits",g)}return!a.capabilities.operations?.supportsEditing&&a.effectiveCapabilities?.operations?.supportsEditing&&await me?.findCredential(a.url)?.refreshToken(),this._createEditsResult(S)}async deleteAttachments(e,t){await this.load();const{layer:a}=this;await O(a,"editing");const s=e.attributes[a.objectIdField],r=a.parsedUrl.path+"/"+s+"/deleteAttachments";try{return(await m(r,this._getLayerRequestOptions({query:{attachmentIds:t.join(",")},method:"post"}))).data.deleteAttachmentResults.map(b)}catch(n){throw this._createAttachmentErrorResult(s,n)}}fetchRecomputedExtents(e={}){const t=e.signal;return this.load({signal:t}).then(async()=>{const a=this._getLayerRequestOptions({...e,query:{returnUpdates:!0}}),{layerId:s,url:r}=this.layer,{data:n}=await m(`${r}/${s}`,a),{id:i,extent:o,fullExtent:u,timeExtent:l}=n,d=o||u;return{id:i,fullExtent:d&&ae.fromJSON(d),timeExtent:l&&se.fromJSON({start:l[0],end:l[1]})}})}async queryAttachments(e,t={}){await this.load();const a=this._getLayerRequestOptions(t);return this.queryTask.executeAttachmentQuery(e,a)}async queryFeatures(e,t){await this.load();const a=await this.queryTask.execute(e,{...t,query:this._createRequestQueryOptions(t)});return e.outStatistics?.length&&a.features.length&&a.features.forEach(s=>{const r=s.attributes;e.outStatistics?.forEach(({outStatisticFieldName:n})=>{if(n){const i=n.toLowerCase();i&&i in r&&n!==i&&(r[n]=r[i],delete r[i])}})}),a}async queryFeaturesJSON(e,t){return await this.load(),this.queryTask.executeJSON(e,{...t,query:this._createRequestQueryOptions(t)})}async queryObjectIds(e,t){return await this.load(),this.queryTask.executeForIds(e,{...t,query:this._createRequestQueryOptions(t)})}async queryFeatureCount(e,t){return await this.load(),this.queryTask.executeForCount(e,{...t,query:this._createRequestQueryOptions(t)})}async queryExtent(e,t){return await this.load(),this.queryTask.executeForExtent(e,{...t,query:this._createRequestQueryOptions(t)})}async queryRelatedFeatures(e,t){return await this.load(),this.queryTask.executeRelationshipQuery(e,{...t,query:this._createRequestQueryOptions(t)})}async queryRelatedFeaturesCount(e,t){return await this.load(),this.queryTask.executeRelationshipQueryForCount(e,{...t,query:this._createRequestQueryOptions(t)})}async queryTopFeatures(e,t){return await this.load(),this.queryTask.executeTopFeaturesQuery(e,{...t,query:this._createRequestQueryOptions(t)})}async queryTopObjectIds(e,t){return await this.load(),this.queryTask.executeForTopIds(e,{...t,query:this._createRequestQueryOptions(t)})}async queryTopExtents(e,t){return await this.load(),this.queryTask.executeForTopExtents(e,{...t,query:this._createRequestQueryOptions(t)})}async queryTopCount(e,t){return await this.load(),this.queryTask.executeForTopCount(e,{...t,query:this._createRequestQueryOptions(t)})}async fetchPublishingStatus(){if(!re(this.layer.url))return"unavailable";const e=M(this.layer.url,"status"),t=await m(e,{query:{f:"json"}});return _e.fromJSON(t.data.status)}async uploadAssets(e,t){const{uploadAssets:a}=await P(()=>import("./chunk-IMsx2gbM.js"),__vite__mapDeps([0,1,2,3,4]));return a(e,{layer:this.layer,ongoingUploads:this._ongoingAssetUploads},t)}async _asyncApplyEdits(e,t){const a=(await m(e,t)).data.statusUrl;for(;;){const s=(await m(a,{query:{f:"json"},responseType:"json"})).data;switch(s.status){case"Completed":return m(s.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new A("async-applyEdits-failed","asynchronous applyEdits call failed.");case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new A("async-applyEdits-failed","asynchronous applyEdits call failed (undefined response status)")}await ne(xe)}}_createRequestQueryOptions(e){const t={...this.layer.customParameters,token:this.layer.apiKey,...e?.query};return this.layer.datesInUnknownTimezone&&(t.timeReferenceUnknownClient=!0),t}async _fetchService(e,t){if(!e){const s={};N("featurelayer-advanced-symbols")&&(s.returnAdvancedSymbols=!0),t?.cacheBust&&(s._ts=Date.now());const{data:r}=await m(this.layer.parsedUrl.path,this._getLayerRequestOptions({query:s,signal:t?.signal}));e=r}this.sourceJSON=await this._patchServiceJSON(e,t?.signal);const a=e.type;if(!Ee.has(a))throw new A("feature-layer-source:unsupported-type",`Source type "${a}" is not supported`)}async _patchServiceJSON(e,t){if(e.type!=="Table"&&e.geometryType&&!e?.drawingInfo?.renderer&&!e.defaultSymbol){const a=ie(e.geometryType).renderer;oe("drawingInfo.renderer",a,e)}if(e.geometryType==="esriGeometryMultiPatch"&&e.infoFor3D&&(e.geometryType="mesh"),e.extent==null)try{const{data:a}=await m(this.layer.url,this._getLayerRequestOptions({signal:t}));a.spatialReference&&(e.extent={xmin:0,ymin:0,xmax:0,ymax:0,spatialReference:a.spatialReference})}catch(a){ue(a)}return e}async _ensureLatestMetadata(e){if(this.layer.userHasUpdateItemPrivileges&&this.sourceJSON.cacheMaxAge>0)return this._fetchService(null,{...e,cacheBust:!0})}async _uploadMeshesAndGetAssetMapEditsJSON(e){const{addAssetFeatures:t}=e;if(!t?.length)return null;const a=await this._filterRedundantAssetMaps(t);if(!t?.length)return null;const s=new Array,r=new Map;for(const n of a){const{geometry:i}=n,{vertexSpace:o}=i;if(o.isRelative)s.push(i);else{const u=we(i);r.set(u,i),n.geometry=u,s.push(u)}}await this.uploadAssets(s);for(const[n,i]of r)i.addExternalSources(n.metadata.externalSources.items);return{adds:this._getAssetMapEditsJSON(a),updates:[],deletes:[]}}_getAssetMapEditsJSON(e){const t=new Array,a=this.layer.globalIdField,s=this.layer.parsedUrl;for(const r of e){const n=r.geometry,{metadata:i}=n,o=i.getExternalSourcesOnService(s),u=r.getAttribute(a);if(o.length===0){_.getLogger(this).error(`Skipping feature ${u}. The mesh it is associated with has not been uploaded to the service and cannot be mapped to it.`);continue}const{source:l}=o.find(fe)??o[0],{vertexSpace:d}=n,y=d.isGeoreferenced?["PROJECT_VERTICES"]:[];for(const p of l)p.parts.length===1?t.push({globalId:le(),parentGlobalId:u,assetName:p.assetName,assetHash:p.parts[0].partHash,flags:y}):_.getLogger(this).error(`Skipping asset ${p.assetName}. It does not have exactly one part, so we cannot map it to a feature.`)}return t}_createEditsResult(e){const t=e.data,{layerId:a}=this.layer,s=[];let r=null;if(Array.isArray(t))for(const i of t)s.push({id:i.id,editedFeatures:i.editedFeatures}),i.id===a&&(r={addResults:i.addResults??[],updateResults:i.updateResults??[],deleteResults:i.deleteResults??[],attachments:i.attachments,editMoment:i.editMoment});else r=t;const n=Ae(r);if(s.length>0){n.editedFeatureResults=[];for(const i of s){const{editedFeatures:o}=i,u=o?.spatialReference?new ce(o.spatialReference):null;n.editedFeatureResults.push({layerId:i.id,editedFeatures:Ie(o,u)})}}return n}_createAttachmentErrorResult(e,t){const a=t.details.messages?.[0]||t.message,s=t.details.httpStatus||t.details.messageCode;return{objectId:e,globalId:null,error:new A("feature-layer-source:attachment-failure",a,{code:s})}}_getFormDataForAttachment(e,t){const a=e instanceof FormData?e:e&&e.elements?new FormData(e):null;if(a)for(const s in t){const r=t[s];r!=null&&(a.set?a.set(s,r):a.append(s,r))}return a}_getLayerRequestOptions(e={}){const{parsedUrl:t,gdbVersion:a,dynamicDataSource:s}=this.layer;return{...e,query:{gdbVersion:a,layer:s?JSON.stringify({source:s}):void 0,...t.query,f:"json",...this._createRequestQueryOptions(e)},responseType:"json"}}async _filterRedundantAssetMaps(e){const{layer:t}=this,{globalIdField:a,infoFor3D:s,parsedUrl:r}=t;if(s==null||a==null)return e;const n=de(s);if(n==null)return e;const i=M(r.path,`../${n.id}`),o=new Array,u=new Array;for(const c of e)c.geometry.metadata.getExternalSourcesOnService(r).length>0?u.push(c):o.push(c);const l=u.map(c=>c.getAttribute(a)).filter($);if(l.length===0)return e;const{assetMapFieldRoles:{parentGlobalId:d,assetHash:y}}=s,p=new pe;p.where=`${d} IN (${l.map(c=>`'${c}'`)})`,p.outFields=[y,d],p.returnGeometry=!1;const f=await he(i,p),{features:w}=f;return w.length===0?e:[...o,...u.filter(c=>{const I=c.getAttribute(a);if(!I)return!0;const{metadata:g}=c.geometry,R=w.filter(h=>h.getAttribute(d)===I);if(R.length===0)return!0;const S=R.map(h=>h.getAttribute(y));return g.getExternalSourcesOnService(r).flatMap(({source:h})=>h.flatMap(x=>x.parts.map(C=>C.partHash))).some(h=>S.every(x=>h!==x))})]}};F([v()],q.prototype,"type",void 0),F([v({constructOnly:!0})],q.prototype,"layer",void 0),F([v({readOnly:!0})],q.prototype,"queryTask",null),q=F([ye("esri.layers.graphics.sources.FeatureLayerSource")],q);const xe=1e3,Me=q;export{Me as default};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = ["assets/chunks/chunk-IMsx2gbM.js","assets/chunks/chunk-8J0p1hu6.js","assets/chunks/chunk-EUQwHdIv.js","assets/static/EdgeShader._x1C5tJF.css","assets/chunks/chunk-rsnyW3YF.js"]
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
