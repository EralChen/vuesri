import{dj as a,Z as o,P as s,_ as r,$ as i,cT as p,a1 as n,cO as l}from"./chunk-8J0p1hu6.js";import{E as m}from"./chunk-UxHCps5f.js";import{n as d}from"./chunk-4NKVl-EH.js";import"./chunk-EUQwHdIv.js";import"./chunk-46-HKmxo.js";import"./chunk-1EtgFH5S.js";import"./chunk-TZVI2PGZ.js";import"./chunk-B8HM7KD5.js";import"./chunk-rsnyW3YF.js";import"./chunk-x7skKsfY.js";import"./chunk-lE2W-yLp.js";import"./chunk-gEiYVWcB.js";import"./chunk-QEw1z8Sd.js";import"./chunk-qQ3pFAez.js";import"./chunk-SS5GKVPY.js";import"./chunk-xNnUv8y9.js";import"./chunk-PQL11d-p.js";import"./chunk-25vEGA3Z.js";import"./chunk-u2KzhvpL.js";import"./chunk-mcEsX7C-.js";import"./chunk-sVaRpQVs.js";import"./chunk-PNolxX3P.js";import"./chunk-oP0mN6bJ.js";import"./chunk-jI1fVavC.js";import"./chunk-v6EOeNTY.js";import"./chunk-vXKGUjbM.js";import"./chunk-oSV52bBL.js";import"./chunk-kg86AZUA.js";import"./chunk-SG7YlSuX.js";import"./chunk-1M1ujRqx.js";import"./chunk-8AHCu32U.js";import"./chunk-xrvcV5Dl.js";const c=.2;let t=class extends m(d(l)){constructor(){super(...arguments),this.type="integrated-mesh-3d",this._elevationContext="im",this._isIntegratedMesh=!0,this._supportsLabeling=!1,this.drapeTargetType=a.WithoutRasterImage}get i3slayer(){return this.layer}get updatingProgressValue(){return this._controller?.updatingProgress??0}get lodFactor(){return this.view?.qualitySettings?.sceneService?.integratedMesh?.lodFactor??1}get progressiveLoadFactor(){return this.lodFactor>=1?c:1}get layerPopupEnabledAndHasTemplate(){return!1}initialize(){this._updatingHandles.add(()=>this.layer.modifications,()=>this._loadModifications(),o),this.view.basemapTerrain.overlayManager.registerDrapeTarget(this)}destroy(){this.view.basemapTerrain.overlayManager.unregisterDrapeTarget(this)}_createLayerGraphic(){const e=new s;return e.layer=this.layer,e.sourceLayer=this.layer,e}canResume(){return super.canResume()&&(!this._controller||this._controller.rootNodeVisible)}_loadModifications(){if(this.removeHandles("modifications"),this.layer.modifications==null)return void(this._modifications=[]);const e=this.layer.modifications;this.addHandles(this._updatingHandles.addOnCollectionChange(()=>e,()=>this._modifications=e.toArray(),o),"modifications")}};r([i()],t.prototype,"layer",void 0),r([i()],t.prototype,"i3slayer",null),r([i(p)],t.prototype,"updatingProgress",void 0),r([i()],t.prototype,"updatingProgressValue",null),r([i()],t.prototype,"lodFactor",null),r([i({readOnly:!0})],t.prototype,"progressiveLoadFactor",null),t=r([n("esri.views.3d.layers.SceneLayerView3D")],t);const Z=t;export{Z as default};
