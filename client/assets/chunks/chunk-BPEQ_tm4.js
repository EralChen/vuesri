import{_ as e,$ as o,a1 as d,bN as h,r_ as f,sx as S,sy as R,sz as I,b5 as B,J as t,a4 as $,iV as x,sA as C,sB as D}from"./chunk-8J0p1hu6.js";var b;let c=b=class extends h{constructor(){super(...arguments),this.field=null,this.minValue=0,this.maxValue=255}clone(){return new b({field:this.field,minValue:this.minValue,maxValue:this.maxValue})}};e([o({type:String,json:{write:!0}})],c.prototype,"field",void 0),e([o({type:Number,nonNullable:!0,json:{write:!0}})],c.prototype,"minValue",void 0),e([o({type:Number,nonNullable:!0,json:{write:!0}})],c.prototype,"maxValue",void 0),c=b=e([d("esri.renderers.support.pointCloud.ColorModulation")],c);const K=c;var T;let y=T=class extends S{constructor(){super(...arguments),this.type="fixed-size",this.size=0,this.useRealWorldSymbolSizes=null}clone(){return new T({size:this.size,useRealWorldSymbolSizes:this.useRealWorldSymbolSizes})}};e([f({pointCloudFixedSizeAlgorithm:"fixed-size"})],y.prototype,"type",void 0),e([o({type:Number,nonNullable:!0,json:{write:!0}})],y.prototype,"size",void 0),e([o({type:Boolean,json:{write:!0}})],y.prototype,"useRealWorldSymbolSizes",void 0),y=T=e([d("esri.renderers.support.pointCloud.PointSizeFixedSizeAlgorithm")],y);const O=y,P={key:"type",base:S,typeMap:{"fixed-size":O,splat:R}},m=I()({pointCloudClassBreaksRenderer:"point-cloud-class-breaks",pointCloudRGBRenderer:"point-cloud-rgb",pointCloudStretchRenderer:"point-cloud-stretch",pointCloudUniqueValueRenderer:"point-cloud-unique-value"});let s=class extends h{constructor(z){super(z),this.type=void 0,this.pointSizeAlgorithm=null,this.colorModulation=null,this.pointsPerInch=10}clone(){return console.warn(".clone() is not implemented for "+this.declaredClass),null}cloneProperties(){return{pointSizeAlgorithm:t(this.pointSizeAlgorithm),colorModulation:t(this.colorModulation),pointsPerInch:t(this.pointsPerInch)}}};e([o({type:m.apiValues,readOnly:!0,nonNullable:!0,json:{type:m.jsonValues,read:!1,write:m.write}})],s.prototype,"type",void 0),e([o({types:P,json:{write:!0}})],s.prototype,"pointSizeAlgorithm",void 0),e([o({type:K,json:{write:!0}})],s.prototype,"colorModulation",void 0),e([o({json:{write:!0},nonNullable:!0,type:Number})],s.prototype,"pointsPerInch",void 0),s=e([d("esri.renderers.PointCloudRenderer")],s),function(r){r.fieldTransformTypeKebabDict=new B({none:"none",lowFourBit:"low-four-bit",highFourBit:"high-four-bit",absoluteValue:"absolute-value",moduloTen:"modulo-ten"})}(s||(s={}));const i=s;var v;let l=v=class extends h{constructor(){super(...arguments),this.description=null,this.label=null,this.minValue=0,this.maxValue=0,this.color=null}clone(){return new v({description:this.description,label:this.label,minValue:this.minValue,maxValue:this.maxValue,color:t(this.color)})}};e([o({type:String,json:{write:!0}})],l.prototype,"description",void 0),e([o({type:String,json:{write:!0}})],l.prototype,"label",void 0),e([o({type:Number,json:{read:{source:"classMinValue"},write:{target:"classMinValue"}}})],l.prototype,"minValue",void 0),e([o({type:Number,json:{read:{source:"classMaxValue"},write:{target:"classMaxValue"}}})],l.prototype,"maxValue",void 0),e([o({type:$,json:{type:[x],write:!0}})],l.prototype,"color",void 0),l=v=e([d("esri.renderers.support.pointCloud.ColorClassBreakInfo")],l);const k=l;var w;let n=w=class extends i{constructor(r){super(r),this.type="point-cloud-class-breaks",this.field=null,this.legendOptions=null,this.fieldTransformType=null,this.colorClassBreakInfos=null}clone(){return new w({...this.cloneProperties(),field:this.field,fieldTransformType:this.fieldTransformType,colorClassBreakInfos:t(this.colorClassBreakInfos),legendOptions:t(this.legendOptions)})}};e([f({pointCloudClassBreaksRenderer:"point-cloud-class-breaks"})],n.prototype,"type",void 0),e([o({json:{write:!0},type:String})],n.prototype,"field",void 0),e([o({type:C,json:{write:!0}})],n.prototype,"legendOptions",void 0),e([o({type:i.fieldTransformTypeKebabDict.apiValues,json:{type:i.fieldTransformTypeKebabDict.jsonValues,read:i.fieldTransformTypeKebabDict.read,write:i.fieldTransformTypeKebabDict.write}})],n.prototype,"fieldTransformType",void 0),e([o({type:[k],json:{write:!0}})],n.prototype,"colorClassBreakInfos",void 0),n=w=e([d("esri.renderers.PointCloudClassBreaksRenderer")],n);const U=n;var V;let p=V=class extends i{constructor(r){super(r),this.type="point-cloud-stretch",this.field=null,this.legendOptions=null,this.fieldTransformType=null,this.stops=null}clone(){return new V({...this.cloneProperties(),field:t(this.field),fieldTransformType:t(this.fieldTransformType),stops:t(this.stops),legendOptions:t(this.legendOptions)})}};e([f({pointCloudStretchRenderer:"point-cloud-stretch"})],p.prototype,"type",void 0),e([o({json:{write:!0},type:String})],p.prototype,"field",void 0),e([o({type:C,json:{write:!0}})],p.prototype,"legendOptions",void 0),e([o({type:i.fieldTransformTypeKebabDict.apiValues,json:{type:i.fieldTransformTypeKebabDict.jsonValues,read:i.fieldTransformTypeKebabDict.read,write:i.fieldTransformTypeKebabDict.write}})],p.prototype,"fieldTransformType",void 0),e([o({type:[D],json:{write:!0}})],p.prototype,"stops",void 0),p=V=e([d("esri.renderers.PointCloudStretchRenderer")],p);const A=p;var g;let u=g=class extends h{constructor(){super(...arguments),this.description=null,this.label=null,this.values=null,this.color=null}clone(){return new g({description:this.description,label:this.label,values:t(this.values),color:t(this.color)})}};e([o({type:String,json:{write:!0}})],u.prototype,"description",void 0),e([o({type:String,json:{write:!0}})],u.prototype,"label",void 0),e([o({type:[String],json:{write:!0}})],u.prototype,"values",void 0),e([o({type:$,json:{type:[x],write:!0}})],u.prototype,"color",void 0),u=g=e([d("esri.renderers.support.pointCloud.ColorUniqueValueInfo")],u);const N=u;var j;let a=j=class extends i{constructor(r){super(r),this.type="point-cloud-unique-value",this.field=null,this.fieldTransformType=null,this.colorUniqueValueInfos=null,this.legendOptions=null}clone(){return new j({...this.cloneProperties(),field:t(this.field),fieldTransformType:t(this.fieldTransformType),colorUniqueValueInfos:t(this.colorUniqueValueInfos),legendOptions:t(this.legendOptions)})}};e([f({pointCloudUniqueValueRenderer:"point-cloud-unique-value"})],a.prototype,"type",void 0),e([o({json:{write:!0},type:String})],a.prototype,"field",void 0),e([o({type:i.fieldTransformTypeKebabDict.apiValues,json:{type:i.fieldTransformTypeKebabDict.jsonValues,read:i.fieldTransformTypeKebabDict.read,write:i.fieldTransformTypeKebabDict.write}})],a.prototype,"fieldTransformType",void 0),e([o({type:[N],json:{write:!0}})],a.prototype,"colorUniqueValueInfos",void 0),e([o({type:C,json:{write:!0}})],a.prototype,"legendOptions",void 0),a=j=e([d("esri.renderers.PointCloudUniqueValueRenderer")],a);const F=a;export{F as a,A as b,i as c,U as d};
